(function(a,b){if(typeof exports==="object"){module.exports=b()}else{if(typeof define==="function"&&define.amd){define("gitana",[],b)}else{a.Gitana=b()}}}(this,function(){if(typeof window==="undefined"){window={setTimeout:function(func,seconds){setTimeout(func,seconds)}}}var Base=function(){};Base.extend=function(_instance,_static){var extend=Base.prototype.extend;Base._prototyping=true;var proto=new this;extend.call(proto,_instance);proto.base=function(){};delete Base._prototyping;var constructor=proto.constructor;var klass=proto.constructor=function(){if(!Base._prototyping){if(this._constructing||this.constructor==klass){this._constructing=true;constructor.apply(this,arguments);delete this._constructing}else{if(arguments[0]!=null){return(arguments[0].extend||extend).call(arguments[0],proto)}}}};klass.ancestor=this;klass.extend=this.extend;klass.forEach=this.forEach;klass.implement=this.implement;klass.prototype=proto;klass.toString=this.toString;klass.valueOf=function(type){return(type=="object")?klass:constructor.valueOf()};extend.call(klass,_static);if(typeof klass.init=="function"){klass.init()}return klass};Base.prototype={extend:function(source,value){if(arguments.length>1){var ancestor=this[source];if(ancestor&&(typeof value=="function")&&(!ancestor.valueOf||ancestor.valueOf()!=value.valueOf())&&/\bbase\b/.test(value)){var method=value.valueOf();value=function(){var previous=this.base||Base.prototype.base;this.base=ancestor;var returnValue=method.apply(this,arguments);this.base=previous;return returnValue};value.valueOf=function(type){return(type=="object")?value:method};value.toString=Base.toString}this[source]=value}else{if(source){var extend=Base.prototype.extend;if(!Base._prototyping&&typeof this!="function"){extend=this.extend||extend}var proto={toSource:null};var hidden=["constructor","toString","valueOf"];var i=Base._prototyping?0:1;while(key=hidden[i++]){if(source[key]!=proto[key]){extend.call(this,key,source[key])}}for(var key in source){if(!proto[key]){extend.call(this,key,source[key])}}}}return this}};Base=Base.extend({constructor:function(){this.extend(arguments[0])}},{ancestor:Object,version:"1.1",forEach:function(object,block,context){for(var key in object){if(this.prototype[key]===undefined){block.call(context,object[key],key,object)}}},implement:function(){for(var i=0;i<arguments.length;i++){if(typeof arguments[i]=="function"){arguments[i](this.prototype)}else{this.prototype.extend(arguments[i])}}return this},toString:function(){return String(this.valueOf())}});var JSON;if(!JSON){JSON={}}(function(){function f(n){return n<10?"0"+n:n}if(typeof Date.prototype.toJSON!=="function"){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf()}}var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?'"'+string.replace(escapable,function(a){var c=meta[a];return typeof c==="string"?c:"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+string+'"'}function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&&typeof value==="object"&&typeof value.toJSON==="function"){value=value.toJSON(key)}if(typeof rep==="function"){value=rep.call(holder,key,value)}switch(typeof value){case"string":return quote(value);case"number":return isFinite(value)?String(value):"null";case"boolean":case"null":return String(value);case"object":if(!value){return"null"}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)==="[object Array]"){length=value.length;for(i=0;i<length;i+=1){partial[i]=str(i,value)||"null"}v=partial.length===0?"[]":gap?"[\n"+gap+partial.join(",\n"+gap)+"\n"+mind+"]":"["+partial.join(",")+"]";gap=mind;return v}if(rep&&typeof rep==="object"){length=rep.length;for(i=0;i<length;i+=1){if(typeof rep[i]==="string"){k=rep[i];v=str(k,value);if(v){partial.push(quote(k)+(gap?": ":":")+v)}}}}else{for(k in value){if(Object.prototype.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?": ":":")+v)}}}}v=partial.length===0?"{}":gap?"{\n"+gap+partial.join(",\n"+gap)+"\n"+mind+"}":"{"+partial.join(",")+"}";gap=mind;return v}}if(typeof JSON.stringify!=="function"){JSON.stringify=function(value,replacer,space){var i;gap="";indent="";if(typeof space==="number"){for(i=0;i<space;i+=1){indent+=" "}}else{if(typeof space==="string"){indent=space}}rep=replacer;if(replacer&&typeof replacer!=="function"&&(typeof replacer!=="object"||typeof replacer.length!=="number")){throw new Error("JSON.stringify")}return str("",{"":value})}}if(typeof JSON.parse!=="function"){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&&typeof value==="object"){for(k in value){if(Object.prototype.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v}else{delete value[k]}}}}return reviver.call(holder,key,value)}text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)})}if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,""))){j=eval("("+text+")");return typeof reviver==="function"?walk({"":j},""):j}throw new SyntaxError("JSON.parse")}}}());(function(window){Gitana=Base.extend({constructor:function(settings){var self=this;if(!settings){settings={}}this.applicationInfo={};this.stackInfo={};var config={clientKey:null,clientId:null,clientSecret:null,baseURL:"/proxy",locale:null,application:null};Gitana.copyKeepers(config,Gitana.loadDefaultConfig());Gitana.copyKeepers(config,settings);this.baseURL=config.baseURL;this.locale=config.locale;var options={clientId:config.clientId,clientSecret:config.clientSecret};if(config.clientKey){options.clientId=config.clientKey}if(this.baseURL){options.baseURL=this.baseURL;options.tokenURL="/oauth/token"}options.requestedScope="api";this.updateOptions=function(o){if(o){Gitana.copyInto(options,o)}};this.resetHttp=function(config){var o={};Gitana.copyInto(o,options);if(config){Gitana.copyInto(o,config)}self.http=new Gitana.OAuth2Http(o)};this.setAuthInfo=function(authInfo){this.authInfo=authInfo};this.setStackInfo=function(stackInfo){this.stackInfo=stackInfo};this.setApplicationInfo=function(applicationInfo){this.applicationInfo=applicationInfo};this.getOriginalConfiguration=function(){return config}},getAuthInfo:function(){return this.authInfo},getStackInfo:function(){return this.stackInfo},getApplicationInfo:function(){return this.applicationInfo},setLocale:function(locale){this.locale=locale},getLocale:function(){return this.locale},defaultFailureCallback:function(http){if(this.debug){if(!(typeof console==="undefined")){var message="Received bad http state ("+http.status+")";var stacktrace=null;var responseText=http.responseText;if(responseText){var json=JSON.parse(responseText);if(json.message){message=message+": "+json.message}}if(json.stacktrace){stacktrace=json.stacktrace}console.log(message);if(stacktrace){console.log(stacktrace)}}}},ajax:function(method,url,contentType,data,headers,successCallback,failureCallback){var _this=this;if(!headers){headers={}}if(method==null){method="GET"}method=method.toUpperCase();var json=false;if(contentType=="application/json"){json=true}if((method=="POST"||method=="PUT")){headers["Content-Type"]=contentType;if(!contentType){Gitana.debug("Performing method: "+method+" but missing content type");return}}var toSend=data;if(json){if(method=="PUT"||method=="POST"){if(!data){data={}}}if(!Gitana.isString(data)){toSend=Gitana.stringify(data)}}if(url.substring(0,1)=="/"){if(!Gitana.isUndefined(window.location)){var u=window.location.protocol+"//"+window.location.host;if(window.location.host.indexOf(":")==-1){u+=":"+window.location.port}url=u+url}else{throw new Error("Relative URL not supported outside of the browser: "+url)}}var config={method:method,url:url,data:toSend,headers:headers,success:successCallback,failure:failureCallback};Gitana.requestCount++;this.http.request(config);return this},gitanaRequest:function(method,url,params,contentType,data,successCallback,failureCallback){if(Gitana.startsWith(url,"/")){url=this.baseURL+url}if(!failureCallback){failureCallback=this.defaultFailureCallback}var onSuccess=function(responseObject,xhr){if(successCallback){var arg=responseObject.text;if(contentType=="application/json"){arg=new Gitana.Response(JSON.parse(arg))}successCallback(arg)}};var onFailure=function(responseObject,xhr){if(failureCallback){var httpError={};httpError.statusText=xhr.statusText;httpError.status=xhr.status;var message=null;var stacktrace=null;var arg=responseObject.text;if(contentType=="application/json"){try{var obj=new Gitana.Response(JSON.parse(arg));if(obj.message){message=obj.message}if(obj.stacktrace){stacktrace=obj.stacktrace}}catch(e){}}if(message){httpError.message=message}if(stacktrace){httpError.stacktrace=stacktrace}failureCallback(httpError)}};var headers={};if(this.locale){headers["accept-language"]=this.locale}if(!params){params={}}if(Gitana.isEmpty(params.metadata)){params.metadata=true}if(Gitana.isEmpty(params.full)){params.full=true}var cacheBuster=new Date().getTime();params.cb=cacheBuster;for(var paramKey in params){var paramValue=params[paramKey];if(Gitana.isFunction(paramValue)){paramValue=paramValue.call()}else{if(Gitana.isString(paramValue)){}else{if(Gitana.isNumber(paramValue)){}else{paramValue=escape(Gitana.stringify(paramValue,false))}}}if(url.indexOf("?")>-1){url=url+"&"+paramKey+"="+paramValue}else{url=url+"?"+paramKey+"="+paramValue}}return this.ajax(method,url,contentType,data,headers,onSuccess,onFailure)},gitanaGet:function(url,params,successCallback,failureCallback){return this.gitanaRequest("GET",url,params,"application/json",null,successCallback,failureCallback)},gitanaDownload:function(url,params,successCallback,failureCallback){return this.gitanaRequest("GET",url,params,null,null,successCallback,failureCallback)},gitanaPost:function(url,params,jsonData,successCallback,failureCallback){return this.gitanaRequest("POST",url,params,"application/json",jsonData,successCallback,failureCallback)},gitanaUpload:function(url,params,contentType,data,successCallback,failureCallback){return this.gitanaRequest("POST",url,params,contentType,data,successCallback,failureCallback)},gitanaPut:function(url,params,jsonData,successCallback,failureCallback){return this.gitanaRequest("PUT",url,params,"application/json",jsonData,successCallback,failureCallback)},gitanaDelete:function(url,params,successCallback,failureCallback){return this.gitanaRequest("DELETE",url,params,"application/json",null,successCallback,failureCallback)},getFactory:function(){return new Gitana.ObjectFactory()},authenticate:function(settings,authFailureHandler){var driver=this;var config={code:null,redirectUri:null,username:null,password:null,accessToken:null,cookie:null};Gitana.copyKeepers(config,Gitana.loadDefaultConfig());Gitana.copyKeepers(config,settings);var cluster=new Gitana.Cluster(this,{});var doAuthenticate=function(){var platform=this;if(config.code){config.authorizationFlow=Gitana.OAuth2Http.AUTHORIZATION_CODE;driver.resetHttp(config);Gitana.deleteCookie("GITANA_TICKET","/");driver.currentPlatform=null;driver.gitanaGet("/auth/info",{},function(response){var authInfo=new Gitana.AuthInfo(response);driver.setAuthInfo(authInfo);driver.currentPlatform=result;Gitana.deleteCookie("JSESSIONID","/");platform.reload();platform.next()},function(http){if(authFailureHandler){authFailureHandler.call(platform,http)}})}else{if(config.username){config.authorizationFlow=Gitana.OAuth2Http.PASSWORD;driver.resetHttp(config);Gitana.deleteCookie("GITANA_TICKET","/");driver.currentPlatform=null;driver.gitanaGet("/auth/info",{},function(response){var authInfo=new Gitana.AuthInfo(response);driver.setAuthInfo(authInfo);driver.currentPlatform=result;Gitana.deleteCookie("JSESSIONID","/");platform.reload();platform.next()},function(http){if(authFailureHandler){authFailureHandler.call(platform,http)}})}else{if(config.accessToken){config.authorizationFlow=Gitana.OAuth2Http.TOKEN;driver.resetHttp(config);Gitana.deleteCookie("GITANA_TICKET","/");driver.currentPlatform=null;driver.gitanaGet("/auth/info",{},function(response){var authInfo=new Gitana.AuthInfo(response);driver.setAuthInfo(authInfo);driver.currentPlatform=result;Gitana.deleteCookie("JSESSIONID","/");platform.reload();platform.next()},function(http){if(authFailureHandler){authFailureHandler.call(platform,http)}})}else{if(config.cookie){config.authorizationFlow=Gitana.OAuth2Http.COOKIE;driver.resetHttp(config);driver.currentPlatform=null;driver.gitanaGet("/auth/info",{},function(response){var authInfo=new Gitana.AuthInfo(response);driver.setAuthInfo(authInfo);driver.currentPlatform=result;Gitana.deleteCookie("JSESSIONID","/");platform.reload();platform.next()},function(http){if(authFailureHandler){authFailureHandler.call(platform,http)}})}else{throw new Error("Unsupported authentication flow - you must provide either a username, authorization code or access token")}}}}};var doAutoConfig=function(uri,callback){var platform=this;new Gitana.Http().request({url:"/proxy/pub/driver?uri="+Gitana.Http.URLEncode(uri),success:function(response){var config=JSON.parse(response.text);var options={clientId:config.clientKey};platform.getDriver().updateOptions(options);var stackInfo={};if(config.stackId){stackInfo.id=config.stackId}if(config.stackDataStores){stackInfo.datastores=config.stackDataStores}platform.getDriver().setStackInfo(stackInfo);var applicationInfo={};if(config.applicationId){applicationInfo.id=config.applicationId}platform.getDriver().setApplicationInfo(applicationInfo);if(callback){callback.call(platform)}}})};var result=this.getFactory().platform(cluster);return Chain(result).then(function(){var platform=this;if(Gitana.autoConfigUri){doAutoConfig.call(platform,Gitana.autoConfigUri,function(){doAuthenticate.call(platform)})}else{doAuthenticate.call(platform)}return false})},clearAuthentication:function(){this.resetHttp();Gitana.deleteCookie("GITANA_TICKET","/");this.currentPlatform=null},destroy:function(){this.clearAuthentication()}});Gitana.EVERYONE={name:"everyone",type:"GROUP"};Gitana.autoConfigUri=false;Gitana.toCopyDependencyChain=function(typedID){var array=[];if(typedID.getType()=="node"){array=array.concat(Gitana.toCopyDependencyChain(typedID.getBranch()))}else{if(typedID.getType()=="branch"){array=array.concat(Gitana.toCopyDependencyChain(typedID.getRepository()))}else{if(typedID.getType()=="platform"){}else{array=array.concat(Gitana.toCopyDependencyChain(typedID.getPlatform()))}}}array.push(Gitana.toDependencyObject(typedID));return array};Gitana.toDependencyObject=function(typedID){return{typeId:typedID.getType(),id:typedID.getId()}};Gitana.TypedIDConstants={};Gitana.TypedIDConstants.TYPE_APPLICATION="application";Gitana.TypedIDConstants.TYPE_EMAIL="email";Gitana.TypedIDConstants.TYPE_EMAIL_PROVIDER="emailprovider";Gitana.TypedIDConstants.TYPE_REGISTRATION="registration";Gitana.TypedIDConstants.TYPE_SETTINGS="settings";Gitana.TypedIDConstants.TYPE_CLUSTER="cluster";Gitana.TypedIDConstants.TYPE_JOB="job";Gitana.TypedIDConstants.TYPE_LOG_ENTRY="logEntry";Gitana.TypedIDConstants.TYPE_DIRECTORY="directory";Gitana.TypedIDConstants.TYPE_IDENTITY="identity";Gitana.TypedIDConstants.TYPE_DOMAIN="domain";Gitana.TypedIDConstants.TYPE_DOMAIN_GROUP="group";Gitana.TypedIDConstants.TYPE_DOMAIN_USER="user";Gitana.TypedIDConstants.TYPE_PLATFORM="platform";Gitana.TypedIDConstants.TYPE_AUTHENTICATION_GRANT="authenticationGrant";Gitana.TypedIDConstants.TYPE_BILLING_PROVIDERs_CONFIGURATION="billingProviderConfiguration";Gitana.TypedIDConstants.TYPE_CLIENT="client";Gitana.TypedIDConstants.TYPE_STACK="stack";Gitana.TypedIDConstants.TYPE_REGISTRAR="registrar";Gitana.TypedIDConstants.TYPE_METER="meter";Gitana.TypedIDConstants.TYPE_PLAN="plan";Gitana.TypedIDConstants.TYPE_TENANT="tenant";Gitana.TypedIDConstants.TYPE_REPOSITORY="repository";Gitana.TypedIDConstants.TYPE_ASSOCIATION="association";Gitana.TypedIDConstants.TYPE_BRANCH="branch";Gitana.TypedIDConstants.TYPE_CHANGESET="changeset";Gitana.TypedIDConstants.TYPE_NODE="node";Gitana.TypedIDConstants.TYPE_VAULT="vault";Gitana.TypedIDConstants.TYPE_ARCHIVE="archive";Gitana.TypedIDConstants.TYPE_WAREHOUSE="warehouse";Gitana.TypedIDConstants.TYPE_INTERACTION="interaction";Gitana.TypedIDConstants.TYPE_INTERACTION_APPLICATION="interactionApplication";Gitana.TypedIDConstants.TYPE_INTERACTION_NODE="interactionNode";Gitana.TypedIDConstants.TYPE_INTERACTION_PAGE="interactionPage";Gitana.TypedIDConstants.TYPE_INTERACTION_REPORT="interactionReport";Gitana.TypedIDConstants.TYPE_INTERACTION_REPORT_ENTRY="interactionReportEntry";Gitana.TypedIDConstants.TYPE_INTERACTION_SESSION="interactionSession";Gitana.TypedIDConstants.TYPE_INTERACTION_USER="interactionUser";Gitana.TypedIDConstants.TYPE_WEB_HOST="webhost";Gitana.TypedIDConstants.TYPE_AUTO_CLIENT_MAPPING="autoClientMapping";Gitana.TypedIDConstants.TYPE_DEPLOYED_APPLICATION="deployedApplication";Gitana.handleJobCompletion=function(chain,cluster,jobId,synchronous){var jobFinalizer=function(){return Chain(cluster).readJob(jobId).then(function(){if(!synchronous||(synchronous&&(this.getState()=="FINISHED"||this.getState()=="ERROR"))){chain.loadFrom(this);chain.next()}else{window.setTimeout(jobFinalizer,250)}})};window.setTimeout(jobFinalizer,250)};Gitana.loadDefaultConfig=function(){};Gitana.MemoryCache=function(){var cache={};return function(k,v){if(!Gitana.isUndefined(v)){if(v){cache[k]=v}else{delete cache[k]}}return cache[k]}};Gitana.PLATFORM_CACHE=Gitana.MemoryCache();Gitana.connect=function(config,callback){if(Gitana.isFunction(config)){callback=config;config=null}if(!config){config={}}if(Gitana.isString(config)){config={key:config}}if(!config.key){config.key="default"}var setupContext=function(){var appConfig={application:(config.application?config.application:null)};Gitana.copyKeepers(appConfig,Gitana.loadDefaultConfig());Gitana.copyKeepers(appConfig,this.getDriver().getOriginalConfiguration());if(appConfig.application){this.app(function(err){if(callback){callback.call(this,err)}})}};var platform=null;if(config.key){platform=Gitana.PLATFORM_CACHE(config.key)}if(platform){platform=new Gitana.Platform(platform.getCluster(),platform);setupContext.call(platform);return Chain(platform)}return new Gitana(config).authenticate(config,function(err){if(callback){callback.call(this,err)}}).then(function(){if(config.key){Gitana.PLATFORM_CACHE(config.key,this)}setupContext.call(this)})};Gitana.disconnect=function(key){if(!key){key="default"}var platform=Gitana.PLATFORM_CACHE(key);if(platform){platform.getDriver().destroy();Gitana.PLATFORM_CACHE(key,null)}};Gitana.requestCount=0;Gitana.VERSION="0.2.1";window.Gitana=Gitana})(window);(function(global){Gitana.Error=function(){};Gitana.Error.prototype=new Error();Gitana.Error.prototype.constructor=Gitana.Error}(this));(function(global){Gitana.Http=Base.extend({constructor:function(){this.invoke=function(options){var method=options.method||"GET";var url=options.url;var data=options.data;var headers=options.headers||{};var success=options.success||function(){};var failure=options.failure||function(){};headers.Accept="application/json";var xhr=Gitana.Http.Request();xhr.onreadystatechange=function(){if(xhr.readyState===4){var regex=/^(.*?):\s*(.*?)\r?$/mg,requestHeaders=headers,responseHeaders={},responseHeadersString="",match;if(!!xhr.getAllResponseHeaders){responseHeadersString=xhr.getAllResponseHeaders();while((match=regex.exec(responseHeadersString))){responseHeaders[match[1]]=match[2]}}else{if(!!xhr.getResponseHeaders){responseHeadersString=xhr.getResponseHeaders();for(var i=0,len=responseHeadersString.length;i<len;++i){responseHeaders[responseHeadersString[i][0]]=responseHeadersString[i][1]}}}var includeXML=false;if("Content-Type" in responseHeaders){if(responseHeaders["Content-Type"]=="text/xml"){includeXML=true}}var responseObject={text:xhr.responseText,xml:(includeXML?xhr.responseXML:""),requestHeaders:requestHeaders,responseHeaders:responseHeaders};if((xhr.status>=200&&xhr.status<=226)||xhr.status==304||xhr.status===0){success(responseObject,xhr)}else{if(xhr.status>=400&&xhr.status!==0){failure(responseObject,xhr)}else{if(xhr.status>=300&&xhr.status<=303){failure(responseObject,xhr)}}}}};xhr.open(method,url,true);xhr.setRequestHeader("X-Requested-With","XMLHttpRequest");for(var header in headers){xhr.setRequestHeader(header,headers[header])}try{xhr.send(data)}catch(e){console.log(e)}}},request:function(options){return this.invoke(options)}});Gitana.Http.Request=function(){var XHR;if(typeof global.Titanium!=="undefined"&&typeof global.Titanium.Network.createHTTPClient!="undefined"){XHR=global.Titanium.Network.createHTTPClient()}else{if(typeof require!=="undefined"){try{var XMLHttpRequest=require("xmlhttprequest").XMLHttpRequest;XHR=new XMLHttpRequest()}catch(e){XHR=new global.XMLHttpRequest()}}else{XHR=new global.XMLHttpRequest()}}return XHR};var Hash=function(){};Hash.prototype={join:function(string){string=string||"";return this.values().join(string)},keys:function(){var i,arr=[],self=this;for(i in self){if(self.hasOwnProperty(i)){arr.push(i)}}return arr},values:function(){var i,arr=[],self=this;for(i in self){if(self.hasOwnProperty(i)){arr.push(self[i])}}return arr},shift:function(){throw"not implemented"},unshift:function(){throw"not implemented"},push:function(){throw"not implemented"},pop:function(){throw"not implemented"},sort:function(){throw"not implemented"},ksort:function(func){var self=this,keys=self.keys(),i,value,key;if(func==undefined){keys.sort()}else{keys.sort(func)}for(i=0;i<keys.length;i++){key=keys[i];value=self[key];delete self[key];self[key]=value}return self},toObject:function(){var obj={},i,self=this;for(i in self){if(self.hasOwnProperty(i)){obj[i]=self[i]}}return obj}};var Collection=function(obj){var args=arguments,args_callee=args.callee,args_length=args.length,i,collection=this;if(!(this instanceof args_callee)){return new args_callee(obj)}for(i in obj){if(obj.hasOwnProperty(i)){collection[i]=obj[i]}}return collection};Collection.prototype=new Hash;Gitana.Http.URI=function(url){var args=arguments,args_callee=args.callee,parsed_uri,scheme,host,port,path,query,anchor,parser=/^([^:\/?#]+?:\/\/)*([^\/:?#]*)?(:[^\/?#]*)*([^?#]*)(\?[^#]*)?(#(.*))*/,uri=this;if(!(this instanceof args_callee)){return new args_callee(url)}uri.scheme="";uri.host="";uri.port="";uri.path="";uri.query=new Gitana.Http.QueryString();uri.anchor="";if(url!==null){parsed_uri=url.match(parser);scheme=parsed_uri[1];host=parsed_uri[2];port=parsed_uri[3];path=parsed_uri[4];query=parsed_uri[5];anchor=parsed_uri[6];scheme=(scheme!==undefined)?scheme.replace("://","").toLowerCase():"http";port=(port?port.replace(":",""):(scheme==="https"?"443":"80"));scheme=(scheme=="http"&&port==="443"?"https":scheme);query=query?query.replace("?",""):"";anchor=anchor?anchor.replace("#",""):"";if((scheme==="https"&&port!=="443")||(scheme==="http"&&port!=="80")){host=host+":"+port}uri.scheme=scheme;uri.host=host;uri.port=port;uri.path=path||"/";uri.query.setQueryParams(query);uri.anchor=anchor||""}};Gitana.Http.URI.prototype={scheme:"",host:"",port:"",path:"",query:"",anchor:"",toString:function(){var self=this,query=self.query+"";return self.scheme+"://"+self.host+self.path+(query!=""?"?"+query:"")+(self.anchor!==""?"#"+self.anchor:"")}};Gitana.Http.QueryString=function(obj){var args=arguments,args_callee=args.callee,args_length=args.length,i,querystring=this;if(!(this instanceof args_callee)){return new args_callee(obj)}if(obj!=undefined){for(i in obj){if(obj.hasOwnProperty(i)){querystring[i]=obj[i]}}}return querystring};Gitana.Http.QueryString.prototype=new Collection();Gitana.Http.QueryString.prototype.toString=function(){var i,self=this,q_arr=[],ret="",val="",encode=Gitana.Http.URLEncode;self.ksort();for(i in self){if(self.hasOwnProperty(i)){if(i!=undefined&&self[i]!=undefined){val=encode(i)+"="+encode(self[i]);q_arr.push(val)}}}if(q_arr.length>0){ret=q_arr.join("&")}return ret};Gitana.Http.QueryString.prototype.setQueryParams=function(query){var args=arguments,args_length=args.length,i,query_array,query_array_length,querystring=this,key_value;if(args_length==1){if(typeof query==="object"){for(i in query){if(query.hasOwnProperty(i)){querystring[i]=query[i]}}}else{if(typeof query==="string"){query_array=query.split("&");for(i=0,query_array_length=query_array.length;i<query_array_length;i++){key_value=query_array[i].split("=");querystring[key_value[0]]=key_value[1]}}}}else{for(i=0;i<arg_length;i+=2){querystring[args[i]]=args[i+1]}}};Gitana.Http.URLEncode=function(string){function hex(code){var hex=code.toString(16).toUpperCase();if(hex.length<2){hex=0+hex}return"%"+hex}if(!string){return""}string=string+"";var reserved_chars=/[ \r\n!*"'();:@&=+$,\/?%#\[\]<>{}|`^\\\u0080-\uffff]/,str_len=string.length,i,string_arr=string.split(""),c;for(i=0;i<str_len;i++){if(c=string_arr[i].match(reserved_chars)){c=c[0].charCodeAt(0);if(c<128){string_arr[i]=hex(c)}else{if(c<2048){string_arr[i]=hex(192+(c>>6))+hex(128+(c&63))}else{if(c<65536){string_arr[i]=hex(224+(c>>12))+hex(128+((c>>6)&63))+hex(128+(c&63))}else{if(c<2097152){string_arr[i]=hex(240+(c>>18))+hex(128+((c>>12)&63))+hex(128+((c>>6)&63))+hex(128+(c&63))}}}}}}return string_arr.join("")};Gitana.Http.URLDecode=function(string){if(!string){return""}return string.replace(/%[a-fA-F0-9]{2}/ig,function(match){return String.fromCharCode(parseInt(match.replace("%",""),16))})}}(this));(function(global){Gitana.OAuth2Http=Gitana.Http.extend({constructor:function(options){var self=this;this.accessToken=null;this.refreshToken=null;this.cookieMode=false;this.grantedScope=null;this.expiresIn=null;this.grantTime=null;this.error=null;this.errorDescription=null;this.errorUri=null;var tokenURL="/oauth/token";if(options.tokenURL){tokenURL=options.tokenURL}var baseURL=null;if(options.baseURL){baseURL=options.baseURL}var clientId=options.clientId;var clientSecret=options.clientSecret;this.authorizationFlow=options.authorizationFlow||Gitana.OAuth2Http.AUTHORIZATION_CODE;if(options.requestedScope){this.requestedScope=options.requestedScope}if(this.authorizationFlow==Gitana.OAuth2Http.AUTHORIZATION_CODE){this.code=options.code;this.redirectUri=options.redirectUri}if(this.authorizationFlow==Gitana.OAuth2Http.PASSWORD){this.username=options.username;if(options.password){this.password=options.password}else{this.password=""}}if(this.authorizationFlow==Gitana.OAuth2Http.TOKEN){this.accessToken=options.accessToken}if(this.authorizationFlow==Gitana.OAuth2Http.COOKIE){this.cookieMode=true}this.getClientAuthorizationHeader=function(){var basicString=clientId+":";if(clientSecret){basicString+=clientSecret}return"Basic "+Gitana.btoa(basicString)};this.getBearerAuthorizationHeader=function(){return"Bearer "+self.accessToken};this.getPrefixedTokenURL=function(){return this.getPrefixedURL(tokenURL)};this.getPrefixedURL=function(url){var rebasedURL=url;if(baseURL&&Gitana.startsWith(url,"/")){rebasedURL=baseURL+url}return rebasedURL};this.base()},request:function(options){var self=this;var doGetAccessToken=function(success,failure){var onSuccess=function(response){var object=JSON.parse(response.text);if(response.error){self.error=object.error;self.errorDescription=object.error_description;self.errorUri=object.error_uri}else{self.accessToken=object.access_token;self.refreshToken=object.refresh_token;self.expiresIn=object.expires_in;self.grantedScope=object.scope;self.grantTime=new Date().getTime()}success()};var o={success:onSuccess,failure:failure,headers:{Authorization:self.getClientAuthorizationHeader()},url:self.getPrefixedTokenURL()};var queryString="grant_type="+Gitana.Http.URLEncode(self.authorizationFlow);if(self.requestedScope){queryString+="&scope="+Gitana.Http.URLEncode(self.requestedScope)}if(self.authorizationFlow==Gitana.OAuth2Http.AUTHORIZATION_CODE){queryString+="&code="+Gitana.Http.URLEncode(self.code);if(self.redirectUri){queryString+="&redirect_uri="+Gitana.Http.URLEncode(self.redirectUri)}}else{if(self.authorizationFlow==Gitana.OAuth2Http.PASSWORD){queryString+="&username="+Gitana.Http.URLEncode(self.username);if(self.password){queryString+="&password="+Gitana.Http.URLEncode(self.password)}}}if(o.url.indexOf("?")>-1){o.url=o.url+"&"+queryString}else{o.url=o.url+"?"+queryString}self.invoke(o)};var doRefreshAccessToken=function(success,failure){var onSuccess=function(response){var object=JSON.parse(response.text);if(response.error){self.error=object.error;self.errorDescription=object.error_description;self.errorUri=object.error_uri}else{self.accessToken=object.access_token;self.refreshToken=object.refresh_token;self.expiresIn=object.expires_in;self.grantTime=new Date().getTime()}success()};var o={success:onSuccess,failure:failure,headers:{Authorization:self.getClientAuthorizationHeader()},url:self.getPrefixedTokenURL()};var queryString="grant_type=refresh_token&refresh_token="+self.refreshToken;if(self.requestedScope){queryString+="&scope="+Gitana.Http.URLEncode(self.requestedScope)}if(o.url.indexOf("?")>-1){o.url=o.url+"&"+queryString}else{o.url=o.url+"?"+queryString}self.invoke(o)};var doCall=function(autoAttemptRefresh){var successHandler=function(response){options.success(response)};var failureHandler=function(http,xhr){if(autoAttemptRefresh){if(http.code==401){doRefreshAccessToken(function(){doCall(false)},function(){options.failure(http,xhr)})}else{options.failure(http,xhr)}}else{options.failure(http,xhr)}};var o={};Gitana.copyInto(o,options);o.success=successHandler;o.failure=failureHandler;if(!o.headers){o.headers={}}if(!self.cookieMode){o.headers.Authorization=self.getBearerAuthorizationHeader()}o.url=self.getPrefixedURL(o.url);self.invoke(o)};if(!self.accessToken&&!this.cookieMode){if(!self.refreshToken){doGetAccessToken(function(){doCall(true)},function(http,xhr){options.failure(http,xhr)})}else{doRefreshAccessToken(function(){doCall(true)},function(http,xhr){options.failure(http,xhr)})}}else{doCall(true)}}})}(this));Gitana.OAuth2Http.PASSWORD="password";Gitana.OAuth2Http.AUTHORIZATION_CODE="authorization_code";Gitana.OAuth2Http.TOKEN="token";Gitana.OAuth2Http.COOKIE="cookie";(function(window){Chain=function(object){if(!object){object={}}var proxiedObject=Chain.proxy(object);proxiedObject.__queue=(function(){var queue=[];return function(x){if(x){if(x=="empty"){queue=[]}else{queue.push(x)}}return queue}})();proxiedObject.__response=(function(){var response=null;return function(x){if(!Gitana.isUndefined(x)){if(x){response=x}else{response=null}}return response}})();proxiedObject.__waiting=(function(){var waiting=false;return function(x){if(!Gitana.isUndefined(x)){waiting=x}return waiting}})();proxiedObject.__parent=(function(){var parent=null;return function(x){if(!Gitana.isUndefined(x)){if(x){parent=x}else{parent=null}}return parent}})();proxiedObject.__id=(function(){var id=Chain.idCount;Chain.idCount++;return function(){return id}})();proxiedObject.__helper=(function(){var helper=null;return function(x){if(x){helper=x}return helper}})();proxiedObject.__transparent=(function(){var transparent=false;return function(x){if(!Gitana.isUndefined(x)){transparent=x}return transparent}})();if(!proxiedObject.__copyState){proxiedObject.__copyState=function(other){Gitana.copyInto(this,other)}}proxiedObject.then=function(element,functionName){var self=this;var autorun=false;if(Gitana.isArray(element)){var array=element;var parallelInvoker=function(){var count=0;var total=array.length;var onComplete=function(){count++;if(count==total){self.next()}};for(var i=0;i<array.length;i++){var func=array[i];var x=function(func){var parallelChain=Chain();parallelChain.__waiting(true);parallelChain.subchain(self).then(function(){func.call(this)});parallelChain.then(function(){onComplete()});parallelChain.__waiting(false);parallelChain.run()};x(func)}return false};var subchain=this.subchain(null,true);subchain.__queue(parallelInvoker);if(functionName){subchain.__helper(functionName)}element=subchain}else{if(Gitana.isFunction(element)){var subchain=this.subchain(null,true);subchain.__queue(element);if(functionName){subchain.__helper(functionName)}element=subchain;autorun=true}}this.__queue(element);if(autorun&&!this.__waiting()){var runner=this;while(runner.__parent()){runner=runner.__parent()}if(!runner.__waiting()){runner.run()}}return this};proxiedObject.run=function(){var self=this;if(this.__queue().length==0||this.__waiting()){return this}this.__waiting(true);var element=this.__queue().shift();if(Gitana.isFunction(element)){var callback=element;var response=null;var previousResponse=null;if(this.__parent()){response=this.__parent().__response();if(this.__parent().__parent()){previousResponse=this.__parent().__parent().__response()}}window.setTimeout(function(){Chain.log(self,(self.__helper()?self.__helper()+" ":"")+"> "+element.toString());var returned=callback.call(self,response,previousResponse);if(returned!==false){self.next(returned)}},0)}else{var subchain=element;subchain.__response(this.__response());if(subchain.__transparent()){subchain.__copyState(this)}if(subchain.beforeChainRun){subchain.beforeChainRun.call(subchain)}subchain.run()}return this};proxiedObject.subchain=function(object,noAutoAdd){var transparent=false;if(!object){transparent=true}if(!object){object=this}var subchain=Chain(object);subchain.__parent(this);if(subchain.beforeChainRun){subchain.beforeChainRun.call(subchain)}if(!noAutoAdd){this.then(subchain)}subchain.__transparent(transparent);return subchain};proxiedObject.next=function(response){if(typeof response!=="undefined"){this.__response(response)}this.__waiting(false);if(this.__queue().length==0){if(this.__parent()){var r=this.__response();this.__parent().__response(r);this.__response(null);if(this.__transparent()){Gitana.deleteProperties(this.__parent());this.__parent().__copyState(this)}this.__parent().next()}this.__parent(null);this.__queue("empty")}else{this.run()}};proxiedObject.wait=function(ms){return this.then(function(){var wake=function(chain){return function(){chain.next()}}(this);window.setTimeout(wake,ms);return false})};proxiedObject.trap=function(errorHandler){this.errorHandler=errorHandler;return this};proxiedObject.error=function(err){var errorHandler=null;var ancestor=this;while(ancestor&&!errorHandler){errorHandler=ancestor.errorHandler;if(!errorHandler){ancestor=ancestor.__parent()}}this.__queue("empty");this.__response(null);if(this.__parent()){this.__parent().__queue("empty");this.__parent().__waiting(false)}if(errorHandler){var code=errorHandler.call(this,err);if(code!==false){this.next()}}};proxiedObject.done=function(){return this.__parent()};proxiedObject.chain=function(){return Chain(this).then(function(){})};if(!proxiedObject.clone){proxiedObject.clone=function(){return Chain.clone(this)}}return proxiedObject};Chain.proxy=function(o){if(o.__original&&o.__original()){delete o.__original}var proxy=null;if(o.clone){proxy=o.clone()}else{proxy=Chain.clone(o)}proxy.__original=function(){return o};return proxy};Chain.unproxy=function(proxy){var o=null;if(proxy.__original&&proxy.__original()){o=proxy.__original()}return o};Chain.debug=false;Chain.log=function(chain,text){if(Chain.debug&&!Gitana.isUndefined(console)){var f=function(){var identifier=this.__id();if(this.__transparent()){identifier+="[t]"}if(!this.__parent()){return identifier}return f.call(this.__parent())+" > "+identifier};var identifier=f.call(chain);console.log("Chain["+identifier+"] "+text)}};Chain.clone=function(object){function F(){}F.prototype=object;var clone=new F();Gitana.copyInto(clone,object);return clone};Chain.idCount=0})(window);(function(window){var Gitana=window.Gitana;Gitana.Chainable=Base.extend({constructor:function(driver){var self=this;this.base();this.__copyState=function(other){Gitana.copyInto(this,other);this.chainCopyState(other)};this.getDriver=function(){return driver};this.getFactory=function(){return new Gitana.ObjectFactory()};this.httpError=function(httpError){var err=new Gitana.Error();err.name="Http Error";err.message=httpError.message;err.status=httpError.status;err.statusText=httpError.statusText;if(httpError.stacktrace){err.stacktrace=httpError.stacktrace}this.error(err);return false};this.missingNodeError=function(id){var err=new Gitana.Error();err.name="Missing Node error";err.message="The node: "+id+" could not be found";this.error(err);return false};this.link=function(chainable){return this.subchain(chainable)};this.chainGet=function(chainable,uri,params){var self=this;return this.link(chainable).then(function(){var chain=this;if(Gitana.isFunction(uri)){uri=uri.call(self)}driver.gitanaGet(uri,params,function(response){chain.handleResponse(response);chain.next()},function(http){self.httpError(http)});return false})};this.chainCreate=function(chainable,object,uri,params){var self=this;return this.link(chainable).then(function(){var chain=this;if(Gitana.isFunction(uri)){uri=uri.call(self)}driver.gitanaPost(uri,params,object,function(status){driver.gitanaGet(uri+"/"+status.getId(),null,function(response){chain.handleResponse(response);chain.next()},function(http){self.httpError(http)})},function(http){self.httpError(http)});return false},"chainCreate")};this.chainCreateEx=function(chainable,object,createUri,readUri){var self=this;return this.link(chainable).then(function(){var chain=this;if(Gitana.isFunction(createUri)){createUri=createUri.call(self)}if(Gitana.isFunction(readUri)){readUri=readUri.call(self)}driver.gitanaPost(createUri,null,object,function(status){driver.gitanaGet(readUri,null,function(response){chain.handleResponse(response);chain.next()},function(http){self.httpError(http)})},function(http){self.httpError(http)});return false})};this.chainPost=function(chainable,uri,params,payload){var self=this;return this.link(chainable).then(function(){var chain=this;if(Gitana.isFunction(uri)){uri=uri.call(self)}driver.gitanaPost(uri,params,payload,function(response){chain.handleResponse(response);chain.next()},function(http){self.httpError(http)});return false})};this.chainPostEmpty=function(chainable,uri,params,payload,contentType){var self=this;if(!payload){payload={}}return this.link(chainable).then(function(){var chain=this;if(Gitana.isFunction(uri)){uri=uri.call(self)}driver.gitanaPost(uri,params,payload,function(response){chain.next()},function(http){self.httpError(http)});return false})};this.chainUpload=function(chainable,uri,params,contentType,payload){var self=this;if(!payload){payload={}}return this.link(chainable).then(function(){var chain=this;if(Gitana.isFunction(uri)){uri=uri.call(self)}driver.gitanaUpload(uri,params,contentType,payload,function(response){chain.next()},function(http){self.httpError(http)});return false})};this.chainGetResponse=function(chainable,uri,params){var self=this;return this.link(chainable).then(function(){var chain=this;if(Gitana.isFunction(uri)){uri=uri.call(self)}driver.gitanaGet(uri,params,function(response){chain.next(response)},function(http){self.httpError(http)});return false})};this.chainGetResponseRows=function(chainable,uri,params){return this.chainGetResponse(chainable,uri,params).then(function(response){return response.rows})};this.chainHasResponseRow=function(chainable,uri,value){return this.chainGetResponse(chainable,uri).then(function(response){var authorized=false;for(var i=0;i<response.rows.length;i++){if(response.rows[i].toLowerCase()==value.toLowerCase()){authorized=true}}return authorized})};this.chainPostResponse=function(chainable,uri,params,payload){var self=this;return this.link(chainable).then(function(){var chain=this;if(Gitana.isFunction(uri)){uri=uri.call(self)}driver.gitanaPost(uri,params,payload,function(response){chain.next(response)},function(http){self.httpError(http)});return false})};this.extractPrincipalDomainQualifiedId=function(principal,defaultDomainId){var identifiers=this.extractPrincipalIdentifiers(principal,defaultDomainId);return identifiers.domain+"/"+identifiers.principal},this.extractPrincipalIdentifiers=function(principal,defaultDomainId){var identifiers={};if(!defaultDomainId){defaultDomainId="default"}if(Gitana.isString(principal)){var x=principal.indexOf("/");if(x>-1){identifiers.domain=principal.substring(0,x);identifiers.principal=principal.substring(x+1)}else{identifiers.domain=defaultDomainId;identifiers.principal=principal}}else{if(principal.objectType&&principal.objectType()=="Gitana.DomainPrincipal"){identifiers.domain=principal.getDomainId();identifiers.principal=principal.getId()}else{if(principal._doc){identifiers.domain=defaultDomainId;identifiers.principal=principal._doc}else{if(principal.name){identifiers.domain=defaultDomainId;identifiers.principal=principal.name}}}}return identifiers}},chainCopyState:function(otherObject){}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Response=Base.extend({constructor:function(object){Gitana.copyInto(this,object)},getId:function(){return this["_doc"]},isStatusDocument:function(){return(this["ok"]||this["error"])},isListDocument:function(){return this["total_rows"]&&this["rows"]&&this["offset"]},isDataDocument:function(){return(!this.isStatusDocument()&&!this.isListDocument())},isOk:function(){var ok=true;if(this.isStatusDocument()){if(this["ok"]!=null){ok=this["ok"]}}if(this["error"]){ok=false}return ok},isError:function(){return !this.isOk()}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AuthInfo=Base.extend({constructor:function(object){Gitana.copyInto(this,object)},getPrincipalId:function(){return this["principalId"]},getPrincipalDomainId:function(){return this["principalDomainId"]},getPrincipalName:function(){return this["principalName"]},getTenantId:function(){return this["tenantId"]},getTenantTitle:function(){return this["tenantTitle"]},getTenantDescription:function(){return this["tenantDescription"]},getClientId:function(){return this["clientId"]}})})(window);(function(window){var Gitana=window.Gitana;Gitana.SystemMetadata=Base.extend({constructor:function(){this.base()},updateFrom:function(json){Gitana.deleteProperties(this,false);Gitana.copyInto(this,json)},get:function(key){return this[key]},getChangesetId:function(){return this.get("changeset")},getCreatedBy:function(){return this.get("created_by")},getCreatedByPrincipalId:function(){return this.get("created_by_principal_id")},getCreatedByPrincipalDomainId:function(){return this.get("created_by_principal_domain_id")},getModifiedBy:function(){return this.get("modified_by")},getModifiedByPrincipalId:function(){return this.get("modified_by_principal_id")},getModifiedByPrincipalDomainId:function(){return this.get("modified_by_principal_domain_id")},getCreatedOn:function(){if(!this.createdOn){this.createdOn=new Gitana.Timestamp(this.get("created_on"))}return this.createdOn},getModifiedOn:function(){if(!this.modifiedOn){this.modifiedOn=new Gitana.Timestamp(this.get("modified_on"))}return this.modifiedOn}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Timestamp=Base.extend({constructor:function(object){this.base(object)},getYear:function(){return this["year"]},getMonth:function(){return this["month"]},getDay:function(){return this["day_of_month"]},getHour:function(){return this["hour"]},getMinute:function(){return this["minute"]},getSecond:function(){return this["second"]},getMillisecond:function(){return this["millisecond"]},getTime:function(){return this["ms"]},getTimestamp:function(){return this["timestamp"]}})})(window);(function(window){Gitana.uniqueIdCounter=0;Gitana.makeArray=function(args){return Array.prototype.slice.call(args)};Gitana.stringify=function(object,pretty){var val=null;if(object){if(pretty){val=JSON.stringify(object,null,"  ")}else{val=JSON.stringify(object)}}return val};Gitana.isString=function(arg){return(typeof arg=="string")};Gitana.isNumber=function(arg){return(typeof arg=="number")};Gitana.isBoolean=function(arg){return(typeof arg=="boolean")};Gitana.isFunction=function(arg){return Object.prototype.toString.call(arg)==="[object Function]"};Gitana.startsWith=function(text,prefix){return text.substr(0,prefix.length)===prefix};Gitana.copyInto=function(target,source){for(var i in source){if(source.hasOwnProperty(i)&&!this.isFunction(source[i])){target[i]=source[i]}}};Gitana.deleteProperties=function(object,deleteFunctions){var keys=[];for(var k in object){keys.push(k)}for(var i=0;i<keys.length;i++){var key=keys[i];if(object.hasOwnProperty(key)){if(!Gitana.isFunction(object[key])||(deleteFunctions&&Gitana.isFunction(object[key]))){delete object[key]}}}};Gitana.stampInto=function(target,source){for(var i in source){if(source.hasOwnProperty(i)){target[i]=source[i]}}};Gitana.contains=function(a,obj){var i=a.length;while(i--){if(a[i]===obj){return true}}return false};Gitana.isArray=function(obj){return obj.push&&obj.slice};Gitana.isUndefined=function(obj){return(typeof obj=="undefined")};Gitana.isEmpty=function(obj){return this.isUndefined(obj)||obj==null};Gitana.generateId=function(){Gitana.uniqueIdCounter++;return"gitana-"+Gitana.uniqueIdCounter};Gitana.isNode=function(o){return(typeof Node==="object"?o instanceof Node:typeof o==="object"&&typeof o.nodeType==="number"&&typeof o.nodeName==="string")};Gitana.isElement=function(o){return(typeof HTMLElement==="object"?o instanceof HTMLElement:typeof o==="object"&&o.nodeType===1&&typeof o.nodeName==="string")};Gitana.debug=function(str){if(!this.isUndefined(console)){console.log(str)}};Gitana.error=function(str){if(!this.isUndefined(console)){console.error(str)}};Gitana.getNumberOfKeys=function(map){var count=0;for(var key in map){count++}return count};Gitana.writeCookie=function(name,value,path,days,domain){if(typeof(document)!=="undefined"){function createCookie(name,value,path,days,host){if(!path){path="/"}var pathString="; path="+path;var expirationString="";if(days){var date=new Date();date.setTime(date.getTime()+(days*24*60*60*1000));expirationString="; expires="+date.toGMTString()}var domainString="";if(host){domainString="; domain="+host}document.cookie=name+"="+value+expirationString+pathString+domainString}createCookie(name,value,path,days,domain)}};Gitana.deleteCookie=function(name,path){if(typeof(document)!=="undefined"){Gitana.writeCookie(name,"",path,-1);Gitana.writeCookie(name,"",path,-1,window.location.host)}};Gitana.readCookie=function(name){function _readCookie(name){var nameEQ=name+"=";var ca=document.cookie.split(";");for(var i=0;i<ca.length;i++){var c=ca[i];while(c.charAt(0)==" "){c=c.substring(1,c.length)}if(c.indexOf(nameEQ)==0){return c.substring(nameEQ.length,c.length)}}return null}var value=null;if(typeof(document)!=="undefined"){value=_readCookie(name)}return value};Gitana.getCurrentQueryStringParameter=function(paramName){var searchString=window.location.search.substring(1),i,val,params=searchString.split("&");for(i=0;i<params.length;i++){val=params[i].split("=");if(val[0]==paramName){return unescape(val[1])}}return null};Gitana.getCurrentHashStringParameter=function(paramName){var searchString=window.location.href.substring(window.location.href.indexOf("#")+1);var params=searchString.split("&");for(i=0;i<params.length;i++){val=params[i].split("=");if(val[0]==paramName){return unescape(val[1])}}return null};Gitana.btoa=function(string){var b64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";var i=0,length=string.length,ascii,index,output="";for(;i<length;i+=3){ascii=[string.charCodeAt(i),string.charCodeAt(i+1),string.charCodeAt(i+2)];index=[ascii[0]>>2,((ascii[0]&3)<<4)|ascii[1]>>4,((ascii[1]&15)<<2)|ascii[2]>>6,ascii[2]&63];if(isNaN(ascii[1])){index[2]=64}if(isNaN(ascii[2])){index[3]=64}output+=b64.charAt(index[0])+b64.charAt(index[1])+b64.charAt(index[2])+b64.charAt(index[3])}return output};Gitana.copyKeepers=function(target,source){if(!source){return}for(var i in source){if(source.hasOwnProperty(i)&&!this.isFunction(source[i])){if(!Gitana.isUndefined(target[i])){target[i]=source[i]}}}}})(window);(function(window){Gitana.Methods={};Gitana.Methods.listAttachments=function(mapClass){if(!mapClass){mapClass=Gitana.BinaryAttachmentMap}return function(local){var self=this;var result=this.subchain(new mapClass(this));if(!local){result.then(function(){var chain=this;self.getDriver().gitanaGet(self.getUri()+"/attachments",null,function(response){chain.handleResponse(response);chain.next()});return false})}else{var existingMap=self.getSystemMetadata()["attachments"];if(!existingMap){throw new Error("Local system attachments not found")}for(var key in existingMap){var value=result[key];value.attachmentId=key}}return result}};Gitana.Methods.attach=function(attachmentClass,paramsFunction){if(!attachmentClass){attachmentClass=Gitana.BinaryAttachment}return function(attachmentId,contentType,data){var self=this;if(!attachmentId){attachmentId="default"}var result=this.subchain(new attachmentClass(this));result.then(function(){var params={};if(paramsFunction){paramsFunction(params)}var uploadUri=self.getUri()+"/attachments/"+attachmentId;this.chainUpload(this,uploadUri,params,contentType,data).then(function(){this.subchain(self).listAttachments().then(function(){this.select(attachmentId).then(function(){result.handleResponse(this)})})})});return result}};Gitana.Methods.unattach=function(){return function(attachmentId){return this.then(function(){this.chainDelete(this,this.getUri()+"/attachments/"+attachmentId).then(function(){})})}}})(window);(function(window){(function(){if(typeof window.location!="undefined"){var uri=window.location.href;var z1=uri.indexOf(window.location.pathname);z1=uri.indexOf("/",z1+2);if(z1>-1){uri=uri.substring(0,z1)}if(uri.indexOf("cloudcms.net")>-1){Gitana.autoConfigUri=uri}}}())})(window);(function(window){var Gitana=window.Gitana;Gitana.ObjectFactory=Base.extend({constructor:function(){this.create=function(klass,existing,object){var created=new klass(existing,object);return created}},platformDataStoreMap:function(platform,object){return this.create(Gitana.PlatformDataStoreMap,platform,object)},platformDataStore:function(platform,object){var type=object.datastoreTypeId;return this[type](platform,object)},platform:function(cluster,object){return this.create(Gitana.Platform,cluster,object)},job:function(cluster,object){var type=null;if(object){if(Gitana.isString(object)){type=object}else{type=object.type}}var job=null;if("copy"==type){job=this.create(Gitana.CopyJob,cluster,object)}else{if("export"==type){job=this.create(Gitana.TransferExportJob,cluster,object)}else{if("import"==type){job=this.create(Gitana.TransferImportJob,cluster,object)}else{job=this.create(Gitana.Job,cluster,object)}}}return job},jobMap:function(cluster,object){return this.create(Gitana.JobMap,cluster,object)},logEntry:function(cluster,object){return this.create(Gitana.LogEntry,cluster,object)},logEntryMap:function(cluster,object){return this.create(Gitana.LogEntryMap,cluster,object)},auditRecord:function(repository,object){return this.create(Gitana.AuditRecord,repository,object)},auditRecordMap:function(repository,object){return this.create(Gitana.AuditRecordMap,repository,object)},stack:function(platform,object){return this.create(Gitana.Stack,platform,object)},stackMap:function(platform,object){return this.create(Gitana.StackMap,platform,object)},repository:function(platform,object){return this.create(Gitana.Repository,platform,object)},repositoryMap:function(platform,object){return this.create(Gitana.RepositoryMap,platform,object)},domain:function(platform,object){return this.create(Gitana.Domain,platform,object)},domainMap:function(platform,object){return this.create(Gitana.DomainMap,platform,object)},vault:function(platform,object){return this.create(Gitana.Vault,platform,object)},vaultMap:function(platform,object){return this.create(Gitana.VaultMap,platform,object)},registrar:function(platform,object){return this.create(Gitana.Registrar,platform,object)},registrarMap:function(platform,object){return this.create(Gitana.RegistrarMap,platform,object)},directory:function(platform,object){return this.create(Gitana.Directory,platform,object)},directoryMap:function(platform,object){return this.create(Gitana.DirectoryMap,platform,object)},application:function(platform,object){return this.create(Gitana.Application,platform,object)},applicationMap:function(platform,object){return this.create(Gitana.ApplicationMap,platform,object)},warehouse:function(platform,object){return this.create(Gitana.Warehouse,platform,object)},warehouseMap:function(platform,object){return this.create(Gitana.WarehouseMap,platform,object)},webHost:function(platform,object){return this.create(Gitana.WebHost,platform,object)},webHostMap:function(platform,object){return this.create(Gitana.WebHostMap,platform,object)},autoClientMapping:function(webhost,object){return this.create(Gitana.AutoClientMapping,webhost,object)},autoClientMappingMap:function(webhost,object){return this.create(Gitana.AutoClientMappingMap,webhost,object)},deployedApplication:function(webhost,object){return this.create(Gitana.DeployedApplication,webhost,object)},deployedApplicationMap:function(webhost,object){return this.create(Gitana.DeployedApplicationMap,webhost,object)},settings:function(application,object){return this.create(Gitana.Settings,application,object)},settingsMap:function(application,object){return this.create(Gitana.SettingsMap,application,object)},registration:function(application,object){return this.create(Gitana.Registration,application,object)},registrationMap:function(application,object){return this.create(Gitana.RegistrationMap,application,object)},email:function(application,object){return this.create(Gitana.Email,application,object)},emailMap:function(application,object){return this.create(Gitana.EmailMap,application,object)},emailProvider:function(application,object){return this.create(Gitana.EmailProvider,application,object)},emailProviderMap:function(application,object){return this.create(Gitana.EmailProviderMap,application,object)},interactionApplication:function(warehouse,object){return this.create(Gitana.InteractionApplication,warehouse,object)},interactionApplicationMap:function(warehouse,object){return this.create(Gitana.InteractionApplicationMap,warehouse,object)},interactionSession:function(warehouse,object){return this.create(Gitana.InteractionSession,warehouse,object)},interactionSessionMap:function(warehouse,object){return this.create(Gitana.InteractionSessionMap,warehouse,object)},interactionPage:function(warehouse,object){return this.create(Gitana.InteractionPage,warehouse,object)},interactionPageMap:function(warehouse,object){return this.create(Gitana.InteractionPageMap,warehouse,object)},interactionNode:function(warehouse,object){return this.create(Gitana.InteractionNode,warehouse,object)},interactionNodeMap:function(warehouse,object){return this.create(Gitana.InteractionNodeMap,warehouse,object)},interactionUser:function(warehouse,object){return this.create(Gitana.InteractionUser,warehouse,object)},interactionUserMap:function(warehouse,object){return this.create(Gitana.InteractionUserMap,warehouse,object)},interactionReport:function(warehouse,object){return this.create(Gitana.InteractionReport,warehouse,object)},interactionReportMap:function(warehouse,object){return this.create(Gitana.InteractionReportMap,warehouse,object)},interactionReportEntry:function(warehouse,object){return this.create(Gitana.InteractionReportEntry,warehouse,object)},interactionReportEntryMap:function(warehouse,object){return this.create(Gitana.InteractionReportEntryMap,warehouse,object)},interaction:function(warehouse,object){return this.create(Gitana.Interaction,warehouse,object)},interactionMap:function(warehouse,object){return this.create(Gitana.InteractionMap,warehouse,object)},client:function(platform,object){var client=this.create(Gitana.Client,platform,object);Gitana.stampInto(client,Gitana.ClientMethods);return client},clientMap:function(platform,object){return this.create(Gitana.ClientMap,platform,object)},authenticationGrant:function(platform,object){return this.create(Gitana.AuthenticationGrant,platform,object)},authenticationGrantMap:function(platform,object){return this.create(Gitana.AuthenticationGrantMap,platform,object)},billingProviderConfiguration:function(platform,object){return this.create(Gitana.BillingProviderConfiguration,platform,object)},billingProviderConfigurationMap:function(platform,object){return this.create(Gitana.BillingProviderConfigurationMap,platform,object)},changeset:function(repository,object){return this.create(Gitana.Changeset,repository,object)},branch:function(repository,object){return this.create(Gitana.Branch,repository,object)},node:function(branch,object){var objectClass=null;if(object){if(Gitana.isString(object)){object={_type:object}}var type=object._type;if(type){if(Gitana.ObjectFactory.registry[type]){objectClass=Gitana.ObjectFactory.registry[type]}}if(!objectClass){if(type&&Gitana.startsWith(type,"a:")){objectClass=Gitana.Association}}if(!objectClass){if(object.__is_association&&object.__is_association()){objectClass=Gitana.Association}}}if(!objectClass){objectClass=Gitana.Node}return this.create(objectClass,branch,object)},association:function(branch,object){return this.create(Gitana.Association,branch,object)},branchMap:function(repository,object){return this.create(Gitana.BranchMap,repository,object)},changesetMap:function(repository,object){return this.create(Gitana.ChangesetMap,repository,object)},nodeMap:function(branch,object){return this.create(Gitana.NodeMap,branch,object)},definition:function(branch,object){return this.create(Gitana.Definition,branch,object)},form:function(branch,object){return this.create(Gitana.Form,branch,object)},traversalResults:function(branch,object){return this.create(Gitana.TraversalResults,branch,object)},domainPrincipal:function(domain,object){var principal=this.create(Gitana.DomainPrincipal,domain,object);if(object){this.extendPrincipal(principal)}return principal},domainPrincipalMap:function(domain,object){return this.create(Gitana.PrincipalMap,domain,object)},extendPrincipal:function(principal){if(principal.getType()&&principal.objectType()=="Gitana.DomainPrincipal"){if(principal.getType()=="USER"){Gitana.stampInto(principal,Gitana.DomainUser)}else{if(principal.getType()=="GROUP"){Gitana.stampInto(principal,Gitana.DomainGroup)}}}},archive:function(vault,object){return this.create(Gitana.Archive,vault,object)},archiveMap:function(vault,object){return this.create(Gitana.ArchiveMap,vault,object)},team:function(cluster,teamable,teamKey,object){return new Gitana.Team(cluster,teamable,teamKey,object)},teamMap:function(cluster,teamable,object){return new Gitana.TeamMap(cluster,teamable,object)},activity:function(datastore,object){return new Gitana.Activity(datastore,object)},activityMap:function(datastore,object){return new Gitana.ActivityMap(datastore,object)},tenant:function(registrar,object){return this.create(Gitana.Tenant,registrar,object)},tenantMap:function(registrar,object){return this.create(Gitana.TenantMap,registrar,object)},plan:function(registrar,object){return this.create(Gitana.Plan,registrar,object)},planMap:function(registrar,object){return this.create(Gitana.PlanMap,registrar,object)},meter:function(registrar,object){return this.create(Gitana.Meter,registrar,object)},meterMap:function(registrar,object){return this.create(Gitana.MeterMap,registrar,object)},identity:function(directory,object){return this.create(Gitana.Identity,directory,object)},identityMap:function(directory,object){return this.create(Gitana.IdentityMap,directory,object)}});Gitana.ObjectFactory.registry={};Gitana.ObjectFactory.register=function(qname,objectClass){Gitana.ObjectFactory.registry[qname]=objectClass}})(window);(function(window){var Gitana=window.Gitana;Gitana.AbstractPersistable=Gitana.Chainable.extend({constructor:function(driver,object){this.base(driver);if(object){this.handleResponse.call(this,object)}},handleResponse:function(response){Gitana.deleteProperties(this,false);if(response._ref){delete response._ref}Gitana.copyInto(this,response);this.handleSystemProperties(response)},handleSystemProperties:function(response){this.chainCopyState(response)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AbstractMap=Gitana.AbstractPersistable.extend({constructor:function(driver,object){this.__keys=(function(){var list=[];return function(x){if(x){if(x=="empty"){while(list.length>0){list.shift()}}else{list.push(x)}}return list}})();this.__totalRows=(function(){var _totalRows=null;return function(totalRows){if(totalRows){_totalRows=totalRows}return _totalRows}})();this.__size=(function(){var _size=null;return function(size){if(size){_size=size}return _size}})();this.__offset=(function(){var _offset=0;return function(offset){if(offset>=0){_offset=offset}return _offset}})();this.base(driver,object)},chainCopyState:function(otherObject){this.base(otherObject);if(otherObject.__keys){this.__keys("empty");for(var i=0;i<otherObject.__keys().length;i++){var k=otherObject.__keys()[i];this.__keys().push(k)}}if(otherObject.__totalRows){this.__totalRows(otherObject.__totalRows())}if(otherObject.__size){this.__size(otherObject.__size())}if(otherObject.__offset){this.__offset(otherObject.__offset())}},clear:function(){Gitana.deleteProperties(this,false);this.__keys("empty")},handleResponse:function(response){this.clear();if(response){if(response.totalRows&&response.size&&response.offset){this.__totalRows(response.totalRows());this.__size(response.size());this.__offset(response.offset())}else{this.__totalRows(response.total_rows);this.__size(response.size);this.__offset(response.offset)}if(response.rows){if(Gitana.isArray(response.rows)){for(var i=0;i<response.rows.length;i++){var o=this.buildObject(response.rows[i]);this[o.getId()]=o;this.__keys().push(o.getId())}}else{for(var key in response.rows){if(response.rows.hasOwnProperty(key)&&!Gitana.isFunction(response.rows[key])){var value=response.rows[key];var o=this.buildObject(value);var k=(o.getId&&o.getId());if(!k){k=key}this[k]=o;this.__keys().push(k)}}}this.__size(this.__keys().length)}else{for(var key in response){if(response.hasOwnProperty(key)&&!Gitana.isFunction(response[key])){var value=response[key];var o=this.buildObject(value);var k=(o.getId&&o.getId());if(!k){k=key}this[k]=o;this[k]=o;this.__keys().push(k)}}this.__size(this.__keys().length)}}},buildObject:function(json){},get:function(key){return this[key]},asArray:function(){var array=[];for(var i=0;i<this.__keys().length;i++){var k=this.__keys()[i];array.push(this[k])}return array},size:function(callback){if(callback){return this.then(function(){callback.call(this,this.__size())})}return this.__size()},offset:function(callback){if(callback){return this.then(function(){callback.call(this,this.__offset())})}return this.__offset()},totalRows:function(callback){if(callback){return this.then(function(){callback.call(this,this.__totalRows())})}return this.__totalRows()},each:function(callback){return this.then(function(){for(var i=0;i<this.__keys().length;i++){var key=this.__keys()[i];var value=this[key];var f=function(callback,key,index){return function(){callback.call(this,key,this,index)}}(callback,key,i);this.subchain(value).then(f)}return this})},eachX:function(callback){return this.then(function(){var functions=[];for(var i=0;i<this.__keys().length;i++){var key=this.__keys()[i];var value=this[key];var f=function(callback,key,value,index){return function(){this.subchain(value).then(function(){callback.call(this,key,this,index)})}}(callback,key,value,i);functions.push(f)}return this.then(functions)})},filter:function(callback){return this.then(function(){var keysToKeep=[];var keysToRemove=[];for(var i=0;i<this.__keys().length;i++){var key=this.__keys()[i];var object=this[key];var keepIt=callback.call(object);if(keepIt){keysToKeep.push(key)}else{keysToRemove.push(key)}}for(var i=0;i<keysToRemove.length;i++){delete this[keysToRemove[i]]}this.__keys("empty");for(var i=0;i<keysToKeep.length;i++){this.__keys().push(keysToKeep[i])}})},sort:function(comparator){return this.then(function(){this.__keys().sort(comparator)})},limit:function(size){return this.then(function(){var keysToRemove=[];if(size>this.__keys().length){return}for(var i=0;i<this.__keys().length;i++){if(i>=size){keysToRemove.push(this.__keys()[i])}}while(this.__keys().length>size){this.__keys().pop()}for(var i=0;i<keysToRemove.length;i++){delete this[keysToRemove[i]]}this.__size(this.__keys().length)})},paginate:function(pagination){return this.then(function(){var skip=pagination.skip;var limit=pagination.limit;var keysToRemove=[];for(var i=0;i<this.__keys().length;i++){if(i<skip||i>=skip+limit){keysToRemove.push(this.__keys()[i])}}while(this.__keys().length>limit+skip){this.__keys().pop()}for(var i=0;i<keysToRemove.length;i++){delete this[keysToRemove[i]]}this.__size(this.__keys().length)})},count:function(callback){if(callback){return this.then(function(){callback.call(this,this.__keys().length)})}return this.__keys().length},keepOne:function(emptyHandler){var self=this;var chainable=this.buildObject({});return this.subchain(chainable).then(function(){var chain=this;this.subchain(self).then(function(){if(this.__keys().length>0){var obj=this[this.__keys()[0]];if(chain.loadFrom){chain.loadFrom(obj)}else{chain.handleResponse(obj)}}else{var err=new Gitana.Error();err.name="Empty Map";err.message="The map doesn't have any elements in it";if(emptyHandler){return emptyHandler.call(self,err)}else{this.error(err)}}})})},select:function(key){var self=this;var result=this.subchain(this.buildObject({}));return result.then(function(){var chain=this;this.subchain(self).then(function(){var obj=this[key];if(!obj){var err=new Gitana.Error();err.name="No element with key: "+key;err.message=err.name;this.error(err);return false}if(result.loadFrom){chain.loadFrom(obj)}else{chain.handleResponse(obj)}})})}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AbstractObject=Gitana.AbstractPersistable.extend({constructor:function(driver,object){this.__system=(function(){var _system=new Gitana.SystemMetadata();return function(system){if(system){_system.updateFrom(system)}return _system}})();this.chainDelete=function(chainable,uri,params){var self=this;return this.link(chainable).then(function(){var chain=this;if(Gitana.isFunction(uri)){uri=uri.call(self)}chain.getDriver().gitanaDelete(uri,params,function(){chain.next()},function(http){self.httpError(http)});return false})};this.chainReload=function(chainable,uri,params){var self=this;return this.link(chainable).then(function(){var chain=this;if(Gitana.isFunction(uri)){uri=uri.call(self)}chain.getDriver().gitanaGet(uri,params,function(obj){chain.handleResponse(obj);chain.next()},function(http){self.httpError(http)});return false})};this.chainUpdate=function(chainable,uri,params){var self=this;return this.link(chainable).then(function(){var chain=this;if(Gitana.isFunction(uri)){uri=uri.call(self)}chain.getDriver().gitanaPut(uri,params,chain,function(){chain.getDriver().gitanaGet(uri,params,function(obj){chain.handleResponse(obj);chain.next()},function(http){self.httpError(http)})},function(http){self.httpError(http)});return false})};this.base(driver,object)},chainCopyState:function(otherObject){this.base(otherObject);if(otherObject.__system){this.__system(otherObject.__system())}},getUri:function(){return null},getType:function(){return null},getProxiedUri:function(){return this.getDriver().baseURL+this.getUri()},get:function(key){return this[key]},set:function(key,value){this[key]=value},getId:function(){return this.get("_doc")},getSystemMetadata:function(){return this.__system()},getTitle:function(){return this.get("title")},getDescription:function(){return this.get("description")},replacePropertiesWith:function(object){var candidate={};Gitana.copyInto(candidate,object);var backups={};backups._doc=this["_doc"];delete candidate._doc;backups._type=this["_type"];delete candidate._type;backups._qname=this["_qname"];delete candidate._qname;Gitana.deleteProperties(this,false);this["_doc"]=backups._doc;this["_type"]=backups._type;this["_qname"]=backups._qname;Gitana.copyInto(this,candidate)},handleSystemProperties:function(response){this.base(response);if(this["_system"]){var json=this["_system"];delete this["_system"];this.__system().updateFrom(json)}},stringify:function(pretty){return Gitana.stringify(this,pretty)},loadFrom:function(anotherObject){this.handleResponse(anotherObject)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AbstractSelfableObject=Gitana.AbstractObject.extend({constructor:function(driver,object){this.base(driver,object)},del:function(){var self=this;var uriFunction=function(){return self.getUri()};return this.chainDelete(this.getPlatform(),uriFunction)},reload:function(){var self=this;var uriFunction=function(){return self.getUri()};return this.chainReload(null,uriFunction)},update:function(){var self=this;var uriFunction=function(){return self.getUri()};return this.chainUpdate(null,uriFunction)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AbstractSelfableACLObject=Gitana.AbstractSelfableObject.extend({constructor:function(driver,object){this.base(driver,object)},loadACL:function(callback){var self=this;var uriFunction=function(){return self.getUri()+"/acl/list"};return this.chainGetResponse(this,uriFunction).then(function(response){callback.call(this,response)})},listAuthorities:function(principal,callback){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var self=this;var uriFunction=function(){return self.getUri()+"/acl?id="+principalDomainQualifiedId};return this.chainGetResponseRows(this,uriFunction).then(function(response){callback.call(this,response)})},checkAuthority:function(principal,authorityId,callback){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var self=this;var uriFunction=function(){return self.getUri()+"/authorities/"+authorityId+"/check?id="+principalDomainQualifiedId};return this.chainPostResponse(this,uriFunction).then(function(response){callback.call(this,response.check)})},grantAuthority:function(principal,authorityId){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var self=this;var uriFunction=function(){return self.getUri()+"/authorities/"+authorityId+"/grant?id="+principalDomainQualifiedId};return this.chainPostEmpty(this,uriFunction)},revokeAuthority:function(principal,authorityId){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var self=this;var uriFunction=function(){return self.getUri()+"/authorities/"+authorityId+"/revoke?id="+principalDomainQualifiedId};return this.chainPostEmpty(this,uriFunction)},revokeAllAuthorities:function(principal){return this.revokeAuthority(principal,"all")},loadAuthorityGrants:function(principalIds,callback){if(!principalIds){principalIds=[]}var json={principals:principalIds};return this.chainPostResponse(this,this.getUri()+"/authorities",{},json).then(function(response){callback.call(this,response)})},checkPermission:function(principal,permissionId,callback){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var uriFunction=function(){return self.getUri()+"/permissions/"+permissionId+"/check?id="+principalDomainQualifiedId};return this.chainPostResponse(this,uriFunction).then(function(response){callback.call(this,response.check)})}})})(window);(function(window){var Gitana=window.Gitana;Gitana.DataStore=Gitana.AbstractObject.extend({constructor:function(driver,object){this.base(driver,object)},getUri:function(){return null},getType:function(){return null},loadACL:function(callback){var uriFunction=function(){return this.getUri()+"/acl/list"};return this.chainGetResponse(this,uriFunction).then(function(response){callback.call(this,response)})},listAuthorities:function(principal,callback){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var uriFunction=function(){return this.getUri()+"/acl?id="+principalDomainQualifiedId};return this.chainGetResponseRows(this,uriFunction).then(function(response){callback.call(this,response)})},checkAuthority:function(principal,authorityId,callback){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var uriFunction=function(){return this.getUri()+"/authorities/"+authorityId+"/check?id="+principalDomainQualifiedId};return this.chainPostResponse(this,uriFunction).then(function(response){callback.call(this,response.check)})},grantAuthority:function(principal,authorityId){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var uriFunction=function(){return this.getUri()+"/authorities/"+authorityId+"/grant?id="+principalDomainQualifiedId};return this.chainPostEmpty(this,uriFunction)},revokeAuthority:function(principal,authorityId){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var uriFunction=function(){return this.getUri()+"/authorities/"+authorityId+"/revoke?id="+principalDomainQualifiedId};return this.chainPostEmpty(this,uriFunction)},revokeAllAuthorities:function(principal){return this.revokeAuthority(principal,"all")},loadAuthorityGrants:function(principalIds,callback){if(!principalIds){principalIds=[]}var json={principals:principalIds};return this.chainPostResponse(this,this.getUri()+"/authorities",{},json).then(function(response){callback.call(this,response)})},checkPermission:function(principal,permissionId,callback){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var uriFunction=function(){return this.getUri()+"/permissions/"+permissionId+"/check?id="+principalDomainQualifiedId};return this.chainPostResponse(this,uriFunction).then(function(response){callback.call(this,response.check)})},readTeam:function(teamKey){var uriFunction=function(){return this.getUri()+"/teams/"+teamKey};var chainable=this.getFactory().team(this.getPlatform(),this,teamKey);return this.chainGet(chainable,uriFunction)},listTeams:function(){var uriFunction=function(){return this.getUri()+"/teams"};var chainable=this.getFactory().teamMap(this.getCluster(),this);return this.chainGet(chainable,uriFunction)},createTeam:function(teamKey,object){if(!object){object={}}var uriFunction=function(){return this.getUri()+"/teams?key="+teamKey};var self=this;var chainable=this.getFactory().team(this.getPlatform(),this,teamKey);return this.chainPostResponse(chainable,uriFunction,{},object).then(function(){this.subchain(self).readTeam(teamKey).then(function(){Gitana.copyInto(chainable,this)})})},readOwnersTeam:function(){return this.readTeam("owners")},listActivities:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().activityMap(this);return this.chainGet(chainable,"/activities",params)},readActivity:function(activityId){var chainable=this.getFactory().activity(this);return this.chainGet(chainable,"/activities/"+activityId)},queryActivities:function(query,pagination){var chainable=this.getFactory().activityMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,"/activities/query",params,query)},getMaxSize:function(){return this.get("maxSize")},getSize:function(){return this.get("size")},getObjectCount:function(){return this.get("objectcount")}})})(window);(function(window){var Gitana=window.Gitana;Gitana.ContainedDataStore=Gitana.DataStore.extend({constructor:function(container,object){this.base(container.getDriver(),object);this.getContainer=function(){return container};this.getContainerId=function(){return container.getId()}},del:function(){var uriFunction=function(){return this.getUri()};return this.chainDelete(this.getContainer(),uriFunction)},reload:function(){var uriFunction=function(){return this.getUri()};return this.chainReload(null,uriFunction)},update:function(){var uriFunction=function(){return this.getUri()};return this.chainUpdate(null,uriFunction)},exportArchive:function(settings){var self=this;var vaultId=settings.vault;if(!Gitana.isString(vaultId)){vaultId=vaultId.getId()}var groupId=settings.group;var artifactId=settings.artifact;var versionId=settings.version;var configuration=(settings.configuration?settings.configuration:{});var synchronous=(settings.async?false:true);var chainable=this.getFactory().job(this.getCluster(),"export");return this.link(chainable).then(function(){var chain=this;this.getDriver().gitanaPost(self.getUri()+"/export?vault="+vaultId+"&group="+groupId+"&artifact="+artifactId+"&version="+versionId+"&schedule=ASYNCHRONOUS",{},configuration,function(response){Gitana.handleJobCompletion(chain,self.getCluster(),response.getId(),synchronous)},function(http){self.httpError(http)});return false})},importArchive:function(settings){var self=this;var vaultId=settings.vault;if(!Gitana.isString(vaultId)){vaultId=vaultId.getId()}var groupId=settings.group;var artifactId=settings.artifact;var versionId=settings.version;var configuration=(settings.configuration?settings.configuration:{});var synchronous=(settings.async?false:true);var chainable=this.getFactory().job(this.getCluster(),"import");return this.link(chainable).then(function(){var chain=this;this.getDriver().gitanaPost(self.getUri()+"/import?vault="+vaultId+"&group="+groupId+"&artifact="+artifactId+"&version="+versionId+"&schedule=ASYNCHRONOUS",{},configuration,function(response){Gitana.handleJobCompletion(chain,self.getCluster(),response.getId(),synchronous)},function(http){self.httpError(http)});return false})}})})(window);(function(window){var Gitana=window.Gitana;Gitana.BinaryAttachment=Gitana.AbstractPersistable.extend({constructor:function(persistable,attachment){this.base(persistable.getDriver(),attachment);this.objectType=function(){return"Gitana.BinaryAttachment"};this.persistable=function(){return persistable}},getId:function(){return this.attachmentId},getLength:function(){return this.length},getContentType:function(){return this.contentType},getFilename:function(){return this.filename},getUri:function(){return this.persistable().getUri()+"/attachments/"+this.getId()},getDownloadUri:function(){return this.getDriver().baseURL+this.getUri()},del:function(){var self=this;var result=this.subchain(this.persistable());result.subchain(self).then(function(){var chain=this;this.getDriver().gitanaDelete(this.getUri(),null,function(){chain.next()},function(http){self.httpError(http)});return false});return result},download:function(callback){var self=this;return this.then(function(){var chain=this;this.getDriver().gitanaDownload(this.getUri(),null,function(data){callback.call(self,data);chain.next()},function(http){self.httpError(http)});return false})}})})(window);(function(window){var Gitana=window.Gitana;Gitana.BinaryAttachmentMap=Gitana.AbstractMap.extend({constructor:function(persistable,object){this.objectType=function(){return"Gitana.BinaryAttachmentMap"};this.__persistable=(function(){var _persistable=persistable;return function(p){if(p){_persistable=p}return _persistable}})();if(!object){object=this.__persistable().getSystemMetadata()["attachments"]}this.base(this.__persistable().getDriver(),object)},chainCopyState:function(otherObject){this.base(otherObject);if(otherObject.__persistable){this.__persistable(otherObject.__persistable())}},clone:function(){return new Gitana.BinaryAttachmentMap(this.__persistable(),this)},buildObject:function(attachment){return new Gitana.BinaryAttachment(this.__persistable(),attachment)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AuditRecord=Gitana.AbstractObject.extend({constructor:function(datastore,object){this.base(datastore.getCluster(),object);this.objectType=function(){return"Gitana.AuditRecord"};this.getDataStore=function(){return datastore};this.getDataStoreId=function(){return datastore.getId()}},getUri:function(){return this.datastore.getUri()+"/audit"},clone:function(){return this.getFactory().auditRecord(this.getDataStore(),this)},getScope:function(){return this.get("scope")},getAction:function(){return this.get("action")},getPrincipalId:function(){return this.get("principal")},getMethod:function(){return this.get("method")},getHandler:function(){return this.get("handler")},getArgs:function(){return this.get("args")},getReturn:function(){return this.get("return")}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AuditRecordMap=Gitana.AbstractMap.extend({constructor:function(datastore,object){this.objectType=function(){return"Gitana.AuditRecordMap"};this.getDatastore=function(){return datastore};this.base(datastore.getDriver(),object)},clone:function(){return this.getFactory().auditRecordMap(this.getDatastore(),this)},buildObject:function(json){return this.getFactory().auditRecord(this.getDatastore(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Team=Gitana.AbstractObject.extend({constructor:function(cluster,teamable,teamKey,object){this.base(cluster.getDriver(),object);this.objectType=function(){return"Gitana.Team"};this.teamable=teamable;this.teamKey=teamKey;this.getCluster=function(){return cluster}},getUri:function(){return this.teamable.getUri()+"/teams/"+this.teamKey},del:function(){var uriFunction=function(){return this.getUri()};return this.chainDelete(this.teamable,uriFunction)},reload:function(){var uriFunction=function(){return this.getUri()};return this.chainReload(null,uriFunction)},update:function(){var uriFunction=function(){return this.getUri()};return this.chainUpdate(null,uriFunction)},addMember:function(principal){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var uriFunction=function(){return this.getUri()+"/members/add?id="+principalDomainQualifiedId};return this.chainPostEmpty(this,uriFunction)},removeMember:function(principal){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var uriFunction=function(){return this.getUri()+"/members/remove?id="+principalDomainQualifiedId};return this.chainPostEmpty(this,uriFunction)},listMembers:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return this.getUri()+"/members"};var chainable=new Gitana.TeamMemberMap(this);return this.chainGet(chainable,uriFunction,params)},grant:function(authorityId){var uriFunction=function(){return this.getUri()+"/authorities/"+authorityId+"/grant"};return this.chainPostEmpty(this,uriFunction)},revoke:function(authorityId){var uriFunction=function(){return this.getUri()+"/authorities/"+authorityId+"/revoke"};return this.chainPostEmpty(this,uriFunction)},loadAuthorities:function(callback){var uriFunction=function(){return this.getUri()+"/authorities"};return this.chainGetResponse(this,uriFunction).then(function(response){callback.call(this,response.authorities)})},getKey:function(){return this.teamKey},getGroupId:function(){return this.get("groupId")},getRoleKeys:function(){return this.get("roleKeys")}})})(window);(function(window){var Gitana=window.Gitana;Gitana.TeamMap=Gitana.AbstractMap.extend({constructor:function(cluster,teamable,object){this.objectType=function(){return"Gitana.TeamMap"};this.getCluster=function(){return cluster};this.base(cluster.getDriver(),object);this.teamable=teamable},clone:function(){return this.getFactory().teamMap(this.getCluster(),this.teamable,this)},buildObject:function(json){var teamKey=json._doc;return this.getFactory().team(this.getCluster(),this.teamable,teamKey,json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.TeamMember=Gitana.AbstractObject.extend({constructor:function(team,object){this.base(team.getDriver(),object);this.objectType=function(){return"Gitana.TeamMember"};this.getTeam=function(){return team};this.getCluster=function(){return team.getCluster()};this.getClusterId=function(){return team.getClusterId()}}})})(window);(function(window){var Gitana=window.Gitana;Gitana.TeamMemberMap=Gitana.AbstractMap.extend({constructor:function(team,object){this.objectType=function(){return"Gitana.TeamMemberMap"};this.getTeam=function(){return team};this.base(team.getDriver(),object)},clone:function(){return new Gitana.TeamMemberMap(this.getTeam(),this)},buildObject:function(json){return new Gitana.TeamMember(this.getTeam(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Activity=Gitana.AbstractObject.extend({constructor:function(datastore,object){this.base(datastore.getDriver(),object);this.objectType=function(){return"Gitana.Activity"};this.getDataStore=function(){return datastore}},getUri:function(){return this.getDataStore().getUri()+"/activities/"+this.getId()},clone:function(){return new Gitana.Activity(this.getDataStore(),this)},del:function(){var uriFunction=function(){return this.getUri()};return this.chainDelete(this.getDataStore(),uriFunction)},reload:function(){var uriFunction=function(){return this.getUri()};return this.chainReload(null,uriFunction)},update:function(){var uriFunction=function(){return this.getUri()};return this.chainUpdate(null,uriFunction)},getType:function(){return this.get("type")},getTimestamp:function(){return this.get("timestamp")},getUserDomainId:function(){return this.get("userDomainId")},getUserId:function(){return this.get("userId")},getUserTitle:function(){return this.get("userTitle")},getUserEmail:function(){return this.get("userEmail")},getUserName:function(){return this.get("userName")},getObjectDataStoreTypeId:function(){return this.get("objectDatastoreTypeId")},getObjectDataStoreId:function(){return this.get("objectDatastoreId")},getObjectDataStoreTitle:function(){return this.get("objectDatastoreTitle")},getObjectTypeId:function(){return this.get("objectTypeId")},getObjectId:function(){return this.get("objectId")},getObjectTitle:function(){return this.get("objectTitle")},getOtherDataStoreTypeId:function(){return this.get("otherDatastoreTypeId")},getOtherDataStoreId:function(){return this.get("otherDatastoreId")},getOtherDataStoreTitle:function(){return this.get("otherDatastoreTitle")},getOtherTypeId:function(){return this.get("otherTypeId")},getOtherId:function(){return this.get("otherId")},getOtherTitle:function(){return this.get("otherTitle")}})})(window);(function(window){var Gitana=window.Gitana;Gitana.ActivityMap=Gitana.AbstractMap.extend({constructor:function(datastore,object){this.objectType=function(){return"Gitana.ActivityMap"};this.getDataStore=function(){return datastore};this.base(datastore.getDriver(),object)},clone:function(){return this.getFactory().activityMap(this.getDataStore(),this)},buildObject:function(json){return this.getFactory().activity(this.getDataStore(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Cluster=Gitana.DataStore.extend({constructor:function(driver,object){this.objectType=function(){return"Gitana.Cluster"};this.base(driver,object)},getUri:function(){return""},getType:function(){return Gitana.TypedIDConstants.TYPE_CLUSTER},clone:function(){return new Gitana.Cluster(this.getDriver(),this)},loadContainedTypes:function(type,callback){var uriFunction=function(){return"/tools/types/contained/"+type};return this.chainPostResponse(this,uriFunction).then(function(response){callback.call(this,response.types)})},queryJobs:function(query,pagination){var chainable=this.getFactory().jobMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,"/jobs/query",params,query)},readJob:function(jobId){var chainable=this.getFactory().job(this);return this.chainGet(chainable,"/jobs/"+jobId)},killJob:function(jobId){return this.chainPostEmpty(this,"/jobs/"+jobId+"/kill")},queryUnstartedJobs:function(query,pagination){var chainable=this.getFactory().jobMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,"/jobs/unstarted/query",params,query)},queryRunningJobs:function(query,pagination){var chainable=this.getFactory().jobMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,"/jobs/running/query",params,query)},queryFailedJobs:function(query,pagination){var chainable=this.getFactory().jobMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,"/jobs/failed/query",params,query)},queryWaitingJobs:function(query,pagination){var chainable=this.getFactory().jobMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,"/jobs/waiting/query",params,query)},queryFinishedJobs:function(query,pagination){var chainable=this.getFactory().jobMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,"/jobs/finished/query",params,query)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Job=Gitana.AbstractObject.extend({constructor:function(cluster,object){this.base(cluster.getDriver(),object);this.objectType=function(){return"Gitana.Job"};this.getCluster=function(){return cluster}},clone:function(){return new Gitana.Job(this.getCluster(),this)},getType:function(){return this.get("type")},getRunAsPrincipalId:function(){return this.get("runAsPrincipal")},getRunAsPrincipalDomainId:function(){return this.get("runAsPrincipalDomain")},getState:function(){return this.get("state")},getPlatformId:function(){return this.get("platformId")},getPriority:function(){return this.get("priority")},getAttempts:function(){return this.get("attempts")},getScheduledStartTime:function(){return this.get("schedule_start_ms")},getLogEntries:function(){return this.get("log_entries")},getCurrentThread:function(){return this.get("current_thread")},getCurrentServer:function(){return this.get("current_server")},getCurrentServerTimeStamp:function(){return this.get("current_server_timestamp")},getSubmittedBy:function(){return this.get("submitted_by")},getSubmittedTimestamp:function(){return this.get("submitted_timestamp")},getStarted:function(){return this.get("started")},getStartedBy:function(){return this.get("started_by")},getStartedTimestamp:function(){return this.get("started_timestamp")},getStopped:function(){return this.get("stopped")},getStoppedTimestamp:function(){return this.get("stopped_timestamp")},getPaused:function(){return this.get("paused")},getPausedBy:function(){return this.get("paused_by")},getPausedTimestamp:function(){return this.get("paused_timestamp")}})})(window);(function(window){var Gitana=window.Gitana;Gitana.JobMap=Gitana.AbstractMap.extend({constructor:function(cluster,object){this.objectType=function(){return"Gitana.JobMap"};this.getCluster=function(){return cluster};this.base(cluster.getDriver(),object)},clone:function(){return this.getFactory().jobMap(this.getCluster(),this)},buildObject:function(json){return this.getFactory().job(this.getCluster(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.LogEntry=Gitana.AbstractObject.extend({constructor:function(platform,object){this.base(platform.getDriver(),object);this.objectType=function(){return"Gitana.LogEntry"};this.getPlatform=function(){return platform}},clone:function(){return new Gitana.LogEntry(this.getPlatform(),this)},getType:function(){return Gitana.TypedIDConstants.TYPE_LOG_ENTRY},getPrincipalId:function(){return this.get("principalId")},getRepositoryId:function(){return this.get("repositoryId")},getBranchId:function(){return this.get("branchId")},getLevel:function(){return this.get("level")},getThread:function(){return this.get("thread")},getTimestamp:function(){return this.get("timestamp")},getMessage:function(){return this.get("message")},getFilename:function(){return this.get("filename")},getMethod:function(){return this.get("method")},getLineNumber:function(){return this.get("line")},getClassDescriptor:function(){return this.get("class")},getThrowables:function(){return this.get("throwables")}})})(window);(function(window){var Gitana=window.Gitana;Gitana.LogEntryMap=Gitana.AbstractMap.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.LogEntryMap"};this.getPlatform=function(){return platform};this.base(platform.getDriver(),object)},clone:function(){return this.getFactory().logEntryMap(this.getPlatform(),this)},buildObject:function(json){return this.getFactory().logEntry(this.getPlatform(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.CopyJob=Gitana.Job.extend({constructor:function(cluster,object){this.base(cluster,object);this.objectType=function(){return"Gitana.CopyJob"}},clone:function(){return new Gitana.CopyJob(this.getCluster(),this)},getImports:function(){var importObjects=[];var array=this.get("imports");for(var i=0;i<array.length;i++){var object=array[i];var sources=object.sources;var targets=object.targest;var importObject={sources:object.sources,targets:object.targets,getType:function(){return this.targets[this.targets.length-1]["typeId"]},getSourceId:function(){return this.sources[this.sources.length-1]["id"]},getTargetId:function(){return this.targets[this.targets.length-1]["id"]}};importObjects.push(importObject)}return importObjects},getSingleImportTargetId:function(){var targetId=null;var importObjects=this.getImports();if(importObjects.length>0){targetId=importObjects[0].getTargetId()}return targetId}})})(window);(function(window){var Gitana=window.Gitana;Gitana.TransferImportJob=Gitana.Job.extend({constructor:function(cluster,object){this.base(cluster,object);this.objectType=function(){return"Gitana.TransferImportJob"}},clone:function(){return new Gitana.TransferExportJob(this.getCluster(),this)},getImports:function(){var importObjects=[];var array=this.get("imports");for(var i=0;i<array.length;i++){var object=array[i];var sources=object.sources;var targets=object.targest;var importObject={sources:object.sources,targets:object.targets,getType:function(){return this.targets[this.targets.length-1]["typeId"]},getSourceId:function(){return this.sources[this.sources.length-1]["id"]},getTargetId:function(){return this.targets[this.targets.length-1]["id"]}};importObjects.push(importObject)}return importObjects},getSingleImportTargetId:function(){var targetId=null;var importObjects=this.getImports();if(importObjects.length>0){targetId=importObjects[0].getTargetId()}return targetId}})})(window);(function(window){var Gitana=window.Gitana;Gitana.TransferExportJob=Gitana.Job.extend({constructor:function(cluster,object){this.base(cluster,object);this.objectType=function(){return"Gitana.TransferExportJob"}},clone:function(){return new Gitana.TransferExportJob(this.getCluster(),this)},getImports:function(){var importObjects=[];var array=this.get("imports");for(var i=0;i<array.length;i++){var object=array[i];var sources=object.sources;var targets=object.targest;var importObject={sources:object.sources,targets:object.targets,getType:function(){return this.targets[this.targets.length-1]["typeId"]},getSourceId:function(){return this.sources[this.sources.length-1]["id"]},getTargetId:function(){return this.targets[this.targets.length-1]["id"]}};importObjects.push(importObject)}return importObjects},getSingleImportTargetId:function(){var targetId=null;var importObjects=this.getImports();if(importObjects.length>0){targetId=importObjects[0].getTargetId()}return targetId}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Platform=Gitana.ContainedDataStore.extend({constructor:function(cluster,object){this.objectType=function(){return"Gitana.Platform"};this.base(cluster,object);this.getCluster=function(){return cluster};this.getClusterId=function(){return cluster.getId()}},getPlatform:function(){return this},readCluster:function(){return this.subchain(this.getCluster())},getUri:function(){return""},getType:function(){return Gitana.TypedIDConstants.TYPE_PLATFORM},clone:function(){return this.getFactory().platform(this.getCluster(),this)},del:function(){return this},reload:function(){var uriFunction=function(){return this.getUri()+"/"};return this.chainReload(null,uriFunction)},update:function(){return this},readPrimaryDomain:function(){var self=this;var uriFunction=function(){return self.getUri()+"/domains/primary"};var chainable=this.getFactory().domain(this);return this.chainGet(chainable,uriFunction)},loadInfo:function(callback){var uriFunction=function(){return"/info"};return this.chainGetResponse(this,uriFunction,{}).then(function(response){callback(response)})},listRepositories:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().repositoryMap(this);return this.chainGet(chainable,"/repositories",params)},readRepository:function(repositoryId){var chainable=this.getFactory().repository(this);return this.chainGet(chainable,"/repositories/"+repositoryId)},createRepository:function(object){var chainable=this.getFactory().repository(this);return this.chainCreate(chainable,object,"/repositories")},queryRepositories:function(query,pagination){var chainable=this.getFactory().repositoryMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,"/repositories/query",params,query)},checkRepositoryPermissions:function(checks,callback){var uriFunction=function(){return"/repositories/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},listDomains:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().domainMap(this);return this.chainGet(chainable,"/domains",params)},readDomain:function(domainId){var chainable=this.getFactory().domain(this);return this.chainGet(chainable,"/domains/"+domainId)},createDomain:function(object){var chainable=this.getFactory().domain(this);return this.chainCreate(chainable,object,"/domains")},queryDomains:function(query,pagination){var chainable=this.getFactory().domainMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,"/domains/query",params,query)},checkDomainPermissions:function(checks,callback){var uriFunction=function(){return"/domains/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},listVaults:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().vaultMap(this);return this.chainGet(chainable,"/vaults",params)},readVault:function(vaultId){var chainable=this.getFactory().vault(this);return this.chainGet(chainable,"/vaults/"+vaultId)},createVault:function(object){var chainable=this.getFactory().vault(this);return this.chainCreate(chainable,object,"/vaults")},queryVaults:function(query,pagination){var chainable=this.getFactory().vaultMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,"/vaults/query",params,query)},checkVaultPermissions:function(checks,callback){var uriFunction=function(){return"/vaults/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},authenticate:function(config,authFailureHandler){return this.getDriver().authenticate(config,authFailureHandler)},logout:function(){var self=this;var result=this.subchain(this);result.subchain().then(function(){self.getDriver().clearAuthentication()});return result},listStacks:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().stackMap(this);return this.chainGet(chainable,"/stacks",params)},readStack:function(stackId){var chainable=this.getFactory().stack(this);return this.chainGet(chainable,"/stacks/"+stackId)},createStack:function(object){if(!object){object={}}var chainable=this.getFactory().stack(this);return this.chainCreate(chainable,object,"/stacks")},queryStacks:function(query,pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return"/stacks/query"};var chainable=this.getFactory().stackMap(this);return this.chainPost(chainable,uriFunction,params,query)},findStackForDataStore:function(datastoreType,datastoreId){var chainable=this.getFactory().stack(this);return this.chainGet(chainable,"/stacks/find/"+datastoreType+"/"+datastoreId)},checkStackPermissions:function(checks,callback){var uriFunction=function(){return"/stacks/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},queryLogEntries:function(query,pagination){var self=this;var uriFunction=function(){return self.getUri()+"/logs/query"};if(!query){query={}}var chainable=this.getFactory().logEntryMap(this.getCluster());var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,uriFunction,params,query)},readLogEntry:function(logEntryId){var self=this;var uriFunction=function(){return self.getUri()+"/logs/"+logEntryId};var chainable=this.getFactory().logEntry(this.getCluster());return this.chainGet(chainable,uriFunction)},listRegistrars:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().registrarMap(this);return this.chainGet(chainable,"/registrars",params)},readRegistrar:function(registrarId){var chainable=this.getFactory().registrar(this);return this.chainGet(chainable,"/registrars/"+registrarId)},createRegistrar:function(object){var chainable=this.getFactory().registrar(this);return this.chainCreate(chainable,object,"/registrars")},queryRegistrars:function(query,pagination){var chainable=this.getFactory().registrarMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,"/registrars/query",params,query)},checkRegistrarPermissions:function(checks,callback){var uriFunction=function(){return"/registrars/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},listApplications:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().applicationMap(this);return this.chainGet(chainable,"/applications",params)},readApplication:function(applicationId){var chainable=this.getFactory().application(this);return this.chainGet(chainable,"/applications/"+applicationId)},createApplication:function(object){var chainable=this.getFactory().application(this);return this.chainCreate(chainable,object,"/applications")},queryApplications:function(query,pagination){var chainable=this.getFactory().applicationMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,"/applications/query",params,query)},checkApplicationPermissions:function(checks,callback){var uriFunction=function(){return"/applications/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},listClients:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().clientMap(this);return this.chainGet(chainable,"/clients",params)},readClient:function(clientId){var chainable=this.getFactory().client(this);return this.chainGet(chainable,"/clients/"+clientId)},createClient:function(object){if(!object){object={}}var chainable=this.getFactory().client(this);return this.chainCreate(chainable,object,"/clients")},queryClients:function(query,pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return"/clients/query"};var chainable=this.getFactory().clientMap(this);return this.chainPost(chainable,uriFunction,params,query)},checkClientPermissions:function(checks,callback){var uriFunction=function(){return"/clients/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},listAuthenticationGrants:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().authenticationGrantMap(this);return this.chainGet(chainable,"/auth/grants",params)},readAuthenticationGrant:function(authenticationGrantId){var chainable=this.getFactory().authenticationGrant(this);return this.chainGet(chainable,"/auth/grants/"+authenticationGrantId)},createAuthenticationGrant:function(object){if(!object){object={}}var chainable=this.getFactory().authenticationGrant(this);return this.chainCreate(chainable,object,"/auth/grants")},queryAuthenticationGrants:function(query,pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return"/auth/grants/query"};var chainable=this.getFactory().authenticationGrantMap(this);return this.chainPost(chainable,uriFunction,params,query)},checkAuthenticationGrantPermissions:function(checks,callback){var uriFunction=function(){return"/auth/grants/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},listDirectories:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().directoryMap(this);return this.chainGet(chainable,"/directories",params)},readDirectory:function(directoryId){var chainable=this.getFactory().directory(this);return this.chainGet(chainable,"/directories/"+directoryId)},createDirectory:function(object){var chainable=this.getFactory().directory(this);return this.chainCreate(chainable,object,"/directories")},queryDirectories:function(query,pagination){var chainable=this.getFactory().directoryMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,"/directories/query",params,query)},checkDirectoryPermissions:function(checks,callback){var uriFunction=function(){return"/directories/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},listBillingProviderConfigurations:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().billingProviderConfigurationMap(this);return this.chainGet(chainable,"/billing/configurations",params)},readBillingProviderConfiguration:function(billingProviderConfigurationId){var chainable=this.getFactory().billingProviderConfiguration(this);return this.chainGet(chainable,"/billing/configurations/"+billingProviderConfigurationId)},createBillingProviderConfiguration:function(providerId,object){if(!object){object={}}object.providerId=providerId;var chainable=this.getFactory().billingProviderConfiguration(this);return this.chainCreate(chainable,object,"/billing/configurations")},queryBillingProviderConfigurations:function(query,pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return"/billing/configurations/query"};var chainable=this.getFactory().billingProviderConfigurationMap(this);return this.chainPost(chainable,uriFunction,params,query)},checkBillingProviderConfigurationPermissions:function(checks,callback){var uriFunction=function(){return"/billing/configurations/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},listWebHosts:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().webHostMap(this);return this.chainGet(chainable,"/webhosts",params)},readWebHost:function(webhostId){var chainable=this.getFactory().webHost(this);return this.chainGet(chainable,"/webhosts/"+webhostId)},createWebHost:function(object){var chainable=this.getFactory().webHost(this);return this.chainCreate(chainable,object,"/webhosts")},queryWebHosts:function(query,pagination){var chainable=this.getFactory().webHostMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,"/webhosts/query",params,query)},checkWebHostPermissions:function(checks,callback){var uriFunction=function(){return"/webhosts/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},listWarehouses:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().warehouseMap(this);return this.chainGet(chainable,"/warehouses",params)},readWarehouse:function(warehouseId){var chainable=this.getFactory().warehouse(this);return this.chainGet(chainable,"/warehouses/"+warehouseId)},createWarehouse:function(object){var chainable=this.getFactory().warehouse(this);return this.chainCreate(chainable,object,"/warehouses")},queryWarehouses:function(query,pagination){var chainable=this.getFactory().warehouseMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,"/warehouses/query",params,query)},checkWarehousePermissions:function(checks,callback){var uriFunction=function(){return"/warehouses/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},listTenantAttachments:function(){var self=this;var pseudoTenant=this.clone();pseudoTenant.getUri=function(){return"/tenant"};var result=this.subchain(new Gitana.BinaryAttachmentMap(pseudoTenant));result.then(function(){var chain=this;self.getDriver().gitanaGet(self.getUri()+"/tenant/attachments",null,function(response){chain.handleResponse(response);chain.next()});return false});return result},tenantAttachment:function(attachmentId){return this.listTenantAttachments().select(attachmentId)},tenantAttach:function(attachmentId,contentType,data){var self=this;var tenant=this.clone();tenant.getUri=function(){return"/tenant"};var result=this.subchain(new Gitana.BinaryAttachment(tenant));result.subchain().then(function(){var uploadUri=self.getUri()+"/tenant/attachments/"+attachmentId;this.chainUpload(this,uploadUri,null,contentType,data).then(function(){this.subchain(self).listTenantAttachments().then(function(){this.select(attachmentId).then(function(){result.handleResponse(this)})})})});return result},tenantUnattach:function(attachmentId){return this.subchain().then(function(){this.chainDelete(this,this.getUri()+"/tenant/attachments/"+attachmentId).then(function(){})})},app:function(settings,callback){var self=this;if(Gitana.isFunction(settings)){callback=settings;settings=null}if(Gitana.isString(settings)){settings={application:settings}}var config={application:null};Gitana.copyKeepers(config,Gitana.loadDefaultConfig());Gitana.copyKeepers(config,self.getDriver().getOriginalConfiguration());Gitana.copyKeepers(config,settings);if(!config.application){callback.call(self,new Error("No application configured"));return}var cacheKey=config.application;if(Gitana.APPS&&Gitana.APPS[cacheKey]){callback.call(Chain(Gitana.APPS[cacheKey]));return}var helper=new Gitana.AppHelper(self,config);if(!Gitana.APPS){Gitana.APPS={}}helper.init.call(helper,function(){Gitana.APPS[cacheKey]=helper;callback.call(Chain(helper))})}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AbstractPlatformDataStore=Gitana.ContainedDataStore.extend({constructor:function(platform,object){this.base(platform,object);this.getPlatform=function(){return platform};this.getPlatformId=function(){return platform.getId()};this.getCluster=function(){return platform.getCluster()};this.getClusterId=function(){return platform.getClusterId()}},copy:function(target,asynchronous){var self=this;var payload={sources:Gitana.toCopyDependencyChain(this),targets:Gitana.toCopyDependencyChain(target)};var chainable=this.getFactory().job(this.getCluster(),"copy");return this.link(chainable).then(function(){var chain=this;this.getDriver().gitanaPost("/tools/copy?schedule=ASYNCHRONOUS",{},payload,function(response){Gitana.handleJobCompletion(chain,self.getCluster(),response.getId(),!asynchronous)},function(http){self.httpError(http)});return false})}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AbstractPlatformObject=Gitana.AbstractSelfableACLObject.extend({constructor:function(platform,object){this.base(platform.getDriver(),object);this.getPlatform=function(){return platform};this.getPlatformId=function(){return platform.getId()};this.getCluster=function(){return platform.getCluster()};this.getClusterId=function(){return platform.getClusterId()}},exportArchive:function(settings){var self=this;var vaultId=settings.vault;if(!Gitana.isString(vaultId)){vaultId=vaultId.getId()}var groupId=settings.group;var artifactId=settings.artifact;var versionId=settings.version;var configuration=(settings.configuration?settings.configuration:{});var synchronous=(settings.async?false:true);var chainable=this.getFactory().job(this.getCluster(),"export");return this.link(chainable).then(function(){var chain=this;this.getDriver().gitanaPost(self.getUri()+"/export?vault="+vaultId+"&group="+groupId+"&artifact="+artifactId+"&version="+versionId+"&schedule=ASYNCHRONOUS",{},configuration,function(response){Gitana.handleJobCompletion(chain,self.getCluster(),response.getId(),synchronous)},function(http){self.httpError(http)});return false})},importArchive:function(settings){var self=this;var vaultId=settings.vault;if(!Gitana.isString(vaultId)){vaultId=vaultId.getId()}var groupId=settings.group;var artifactId=settings.artifact;var versionId=settings.version;var configuration=(settings.configuration?settings.configuration:{});var synchronous=(settings.async?false:true);var chainable=this.getFactory().job(this.getCluster(),"import");return this.link(chainable).then(function(){var chain=this;this.getDriver().gitanaPost(self.getUri()+"/import?vault="+vaultId+"&group="+groupId+"&artifact="+artifactId+"&version="+versionId+"&schedule=ASYNCHRONOUS",{},configuration,function(response){Gitana.handleJobCompletion(chain,self.getCluster(),response.getId(),synchronous)},function(http){self.httpError(http)});return false})},copy:function(target,asynchronous){var self=this;var payload={sources:Gitana.toCopyDependencyChain(this),targets:Gitana.toCopyDependencyChain(target)};var chainable=this.getFactory().job(this.getCluster(),"copy");return this.link(chainable).then(function(){var chain=this;this.getDriver().gitanaPost("/tools/copy?schedule=ASYNCHRONOUS",{},payload,function(response){Gitana.handleJobCompletion(chain,self.getCluster(),response.getId(),!asynchronous)},function(http){self.httpError(http)});return false})}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AbstractPlatformObjectMap=Gitana.AbstractMap.extend({constructor:function(platform,object){this.getPlatform=function(){return platform};this.getPlatformId=function(){return platform.getId()};this.getCluster=function(){return platform.getCluster()};this.getClusterId=function(){return platform.getClusterId()};this.base(platform.getDriver(),object)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Stack=Gitana.AbstractPlatformObject.extend({constructor:function(platform,object){this.base(platform,object);this.objectType=function(){return"Gitana.Stack"}},getType:function(){return Gitana.TypedIDConstants.TYPE_STACK},getUri:function(){return"/stacks/"+this.getId()},clone:function(){return this.getFactory().stack(this.getPlatform(),this)},getKey:function(){return this.get("key")},readTeam:function(teamKey){var uriFunction=function(){return this.getUri()+"/teams/"+teamKey};var chainable=this.getFactory().team(this.getPlatform(),this,teamKey);return this.chainGet(chainable,uriFunction)},listTeams:function(){var uriFunction=function(){return this.getUri()+"/teams"};var chainable=this.getFactory().teamMap(this.getCluster(),this);return this.chainGet(chainable,uriFunction)},createTeam:function(teamKey,object){if(!object){object={}}var uriFunction=function(){return this.getUri()+"/teams?key="+teamKey};var self=this;var chainable=this.getFactory().team(this.getPlatform(),this,teamKey);return this.chainPostResponse(chainable,uriFunction,{},object).then(function(){this.subchain(self).readTeam(teamKey).then(function(){Gitana.copyInto(chainable,this)})})},readOwnersTeam:function(){return this.readTeam("owners")},listAttachments:Gitana.Methods.listAttachments(),attachment:function(attachmentId){return this.listAttachments().select(attachmentId)},attach:Gitana.Methods.attach(),unattach:Gitana.Methods.unattach(),queryLogEntries:function(query,pagination){var self=this;var uriFunction=function(){return self.getUri()+"/logs/query"};if(!query){query={}}var chainable=this.getFactory().logEntryMap(this.getCluster());var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,uriFunction,params,query)},readLogEntry:function(logEntryId){var self=this;var uriFunction=function(){return self.getUri()+"/logs/"+logEntryId};var chainable=this.getFactory().logEntry(this.getCluster());return this.chainGet(chainable,uriFunction)},assignDataStore:function(datastore,key){var self=this;var uriFunction=function(){return self.getUri()+"/datastores/assign"};var args=Gitana.makeArray(arguments);var params;if(args.length==1){var arg=args.shift();if(arg.getType&&arg.getId){params={type:arg.getType(),id:arg.getId()}}else{params=arg}}else{datastore=args.shift();key=args.shift();params={type:datastore.getType(),id:datastore.getId()};if(key){params.key=key}}return this.chainPostEmpty(this,uriFunction,params)},unassignDataStore:function(key){var self=this;var uriFunction=function(){return self.getUri()+"/datastores/unassign"};var params={key:key};return this.chainPostEmpty(this,uriFunction,params)},listDataStores:function(pagination){var self=this;var uriFunction=function(){return self.getUri()+"/datastores"};var chainable=this.getFactory().platformDataStoreMap(this.getPlatform());var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainGet(chainable,uriFunction,params)},queryDataStores:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/datastores/query"};var chainable=this.getFactory().platformDataStoreMap(this.getPlatform());return this.chainPost(chainable,uriFunction,params,query)},existsDataStore:function(key,callback){var self=this;var uriFunction=function(){return self.getUri()+"/datastores/exists?key="+key};return this.chainPostResponse(this,uriFunction).then(function(response){callback.call(this,response.exists)})},readDataStore:function(key,callback){var self=this;return this.then(function(){var chain=this;Chain(self).queryDataStores().then(function(){var datastore=this[key];datastore._doc=datastore.datastoreId;delete datastore.datastoreTypeId;if(callback){callback.call(datastore)}chain.next()});return false})}})})(window);(function(window){var Gitana=window.Gitana;Gitana.StackMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.StackMap"};this.base(platform,object)},clone:function(){return this.getFactory().stackMap(this.getPlatform(),this)},buildObject:function(json){return this.getFactory().stack(this.getPlatform(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Client=Gitana.AbstractPlatformObject.extend({constructor:function(platform,object){this.base(platform,object);this.objectType=function(){return"Gitana.Client"}},getType:function(){return Gitana.TypedIDConstants.TYPE_CLIENT},getUri:function(){return"/clients/"+this.getId()},clone:function(){return this.getFactory().client(this.getPlatform(),this)},getAuthorizedGrantTypes:function(){return this.get("authorizedGrantTypes")},getScope:function(){return this.get("scope")},getAllowOpenDriverAuthentication:function(){return this.get("allowOpenDriverAuthentication")},getEnabled:function(){return this.get("enabled")}})})(window);(function(window){var Gitana=window.Gitana;Gitana.ClientMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.ClientMap"};this.base(platform,object)},clone:function(){return this.getFactory().clientMap(this.getPlatform(),this)},buildObject:function(json){return this.getFactory().client(this.getPlatform(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AuthenticationGrant=Gitana.AbstractPlatformObject.extend({constructor:function(platform,object){this.base(platform,object);this.objectType=function(){return"Gitana.AuthenticationGrant"}},getType:function(){return Gitana.TypedIDConstants.TYPE_AUTHENTICATION_GRANT},getUri:function(){return"/auth/grants/"+this.getId()},clone:function(){return this.getFactory().authenticationGrant(this.getPlatform(),this)},getKey:function(){return this.get("key")},getSecret:function(){return this.get("secret")},getPrincipalDomainId:function(){return this.get("principalDomainId")},getPrincipalId:function(){return this.get("principalId")},getClientId:function(){return this.get("clientId")},getEnabled:function(){return this.get("enabled")},getAllowOpenDriverAuthentication:function(){return this.get("allowOpenDriverAuthentication")}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AuthenticationGrantMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.AuthenticationGrantMap"};this.base(platform,object)},clone:function(){return this.getFactory().authenticationGrantMap(this.getPlatform(),this)},buildObject:function(json){return this.getFactory().authenticationGrant(this.getPlatform(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.PlatformDataStoreMap=Gitana.AbstractMap.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.PlatformDataStoreMap"};this.getPlatform=function(){return platform};this.base(platform.getDriver(),object)},clone:function(){return this.getFactory().platformDataStoreMap(this.getPlatform(),this)},buildObject:function(json){return this.getFactory().platformDataStore(this.getPlatform(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.BillingProviderConfiguration=Gitana.AbstractPlatformObject.extend({constructor:function(platform,object){this.base(platform,object);this.objectType=function(){return"Gitana.BillingProviderConfiguration"}},getType:function(){return Gitana.TypedIDConstants.TYPE_BILLING_PROVIDER_CONFIGURATION},getUri:function(){return"/billing/configurations/"+this.getId()},clone:function(){return this.getFactory().billingProviderConfiguration(this.getPlatform(),this)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.BillingProviderConfigurationMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.BillingProviderConfigurationMap"};this.base(platform,object)},clone:function(){return this.getFactory().billingProviderConfigurationMap(this.getPlatform(),this)},buildObject:function(json){return this.getFactory().billingProviderConfiguration(this.getPlatform(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.ClientMethods={getKey:function(){return this.get("key")},getSecret:function(){return this.get("secret")},getDomainUrls:function(){return this.get("domainUrls")},getIsTenantDefault:function(){return this.get("isTenantDefault")},getDefaultTenantId:function(){return this.get("defaultTenantId")},getAuthorizedGrantTypes:function(){return this.get("authorizedGrantTypes")},getScope:function(){return this.get("scope")},getRegisteredRedirectUri:function(){return this.get("registeredRedirectUri")},getAllowOpenDriverAuthentication:function(){return this.get("allowOpenDriverAuthentication")},getEnabled:function(){return this.get("enabled")},getAllowAutoApprovalForImplicitFlow:function(){return this.get("allowAutoApprovalForImplicitFlow")}}})(window);(function(window){var Gitana=window.Gitana;Gitana.Application=Gitana.AbstractPlatformDataStore.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.Application"};this.base(platform,object)},getUri:function(){return"/applications/"+this.getId()},getType:function(){return Gitana.TypedIDConstants.TYPE_APPLICATION},clone:function(){return this.getFactory().application(this.getPlatform(),this)},listAutoClientMappingObjects:function(callback,pagination){var self=this;var uriFunction=function(){return self.getUri()+"/autoclientmappings"};var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainGetResponse(this,uriFunction,params).then(function(response){callback.call(this,response.rows)})},createSettings:function(object){if(object.settings==null){object.settings={}}var chainable=this.getFactory().settings(this);return this.chainCreate(chainable,object,this.getUri()+"/settings")},listSettings:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().settingsMap(this);return this.chainGet(chainable,this.getUri()+"/settings",params)},readSettings:function(settingId){var chainable=this.getFactory().settings(this);return this.chainGet(chainable,this.getUri()+"/settings/"+settingId)},querySettings:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/settings/query"};var chainable=this.getFactory().settingsMap(this);return this.chainPost(chainable,uriFunction,params,query)},readApplicationSettings:function(scope,key){var self=this;if(scope==null){scope="application"}if(key==null){key="application"}var object={scope:scope,key:key};var result=this.subchain(new Gitana.Settings(this,object));return result.then(function(){var chain=this;var driver=self.getDriver();var createUri=self.getUri()+"/settings";var queryUri=self.getUri()+"/settings/query";driver.gitanaPost(queryUri,{},object,function(response){var settings=new Gitana.SettingsMap(self);settings.handleResponse(response);if(settings.__keys().length>0){var obj=settings[settings.__keys()[0]];chain.loadFrom(obj);chain.next()}else{object.settings={};driver.gitanaPost(createUri,null,object,function(status){driver.gitanaGet(createUri+"/"+status.getId(),null,function(response){chain.handleResponse(response);chain.next()},function(http){self.httpError(http)})},function(http){self.httpError(http)})}},function(http){self.httpError(http)});return false})},readApplicationPrincipalSettings:function(){var args=Gitana.makeArray(arguments);if(args.length==1){var principal=args.shift();return this.readApplicationSettings("principal",principal.getDomainQualifiedId())}else{if(args.length==2){var domainId=args.shift();var principalId=args.shift();return this.readApplicationSettings("principal",domainId+"/"+principalId)}}},checkSettingPermissions:function(checks,callback){var self=this;var uriFunction=function(){return self.getUri()+"/settings/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},createRegistration:function(object){var chainable=this.getFactory().registration(this);return this.chainCreate(chainable,object,this.getUri()+"/registrations")},listRegistrations:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().registrationMap(this);return this.chainGet(chainable,this.getUri()+"/registrations",params)},readRegistration:function(registrationId){var chainable=this.getFactory().registration(this);return this.chainGet(chainable,this.getUri()+"/registrations/"+registrationId)},queryRegistrations:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/registrations/query"};var chainable=this.getFactory().registrationMap(this);return this.chainPost(chainable,uriFunction,params,query)},checkRegistrationPermissions:function(checks,callback){var self=this;var uriFunction=function(){return self.getUri()+"/registrations/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},createEmailProvider:function(object){var chainable=this.getFactory().emailProvider(this);return this.chainCreate(chainable,object,this.getUri()+"/emailproviders")},listEmailProviders:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().emailProviderMap(this);return this.chainGet(chainable,this.getUri()+"/emailproviders",params)},readEmailProvider:function(emailProviderId){var chainable=this.getFactory().emailProvider(this);return this.chainGet(chainable,this.getUri()+"/emailproviders/"+emailId)},queryEmailProviders:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/emailproviders/query"};var chainable=this.getFactory().emailProviderMap(this);return this.chainPost(chainable,uriFunction,params,query)},checkEmailProviderPermissions:function(checks,callback){var self=this;var uriFunction=function(){return self.getUri()+"/emailproviders/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},createEmail:function(object){var chainable=this.getFactory().email(this);return this.chainCreate(chainable,object,this.getUri()+"/emails")},listEmails:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().emailMap(this);return this.chainGet(chainable,this.getUri()+"/emails",params)},readEmail:function(emailId){var chainable=this.getFactory().email(this);return this.chainGet(chainable,this.getUri()+"/emails/"+emailId)},queryEmails:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/emails/query"};var chainable=this.getFactory().emailMap(this);return this.chainPost(chainable,uriFunction,params,query)},checkEmailPermissions:function(checks,callback){var self=this;var uriFunction=function(){return self.getUri()+"/emails/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},deploy:function(deploymentKey){var self=this;var uriFunction=function(){return self.getUri()+"/deploy/"+deploymentKey};var webhost=new Gitana.WebHost(this.getPlatform());var chainable=this.getFactory().deployedApplication(webhost);return this.chainPost(chainable,uriFunction).then(function(){var webhostId=self.deployments[deploymentKey]["webhost"];this.subchain(this.getPlatform()).readWebHost(webhostId).then(function(){webhost.loadFrom(this)})})},findDeployedApplication:function(deploymentKey){var self=this;var uriFunction=function(){return self.getUri()+"/deployed/"+deploymentKey};var webhost=new Gitana.WebHost(this.getPlatform());var chainable=this.getFactory().deployedApplication(webhost);return this.chainPost(chainable,uriFunction).then(function(){var webhostId=self.deployments[deploymentKey]["webhost"];this.subchain(this.getPlatform()).readWebHost(webhostId).then(function(){webhost.loadFrom(this)})})}})})(window);(function(window){var Gitana=window.Gitana;Gitana.ApplicationMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.ApplicationMap"};this.base(platform,object)},clone:function(){return this.getFactory().applicationMap(this.getPlatform(),this)},buildObject:function(json){return this.getFactory().application(this.getPlatform(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Settings=Gitana.AbstractPlatformObject.extend({constructor:function(application,object){this.base(application.getPlatform(),object);this.objectType=function(){return"Gitana.Settings"};this.getApplication=function(){return application};this.getApplicationId=function(){return application.getId()}},clone:function(){return new Gitana.Settings(this.getApplication(),this)},getType:function(){return Gitana.TypedIDConstants.TYPE_SETTINGS},getUri:function(){return"/applications/"+this.getApplicationId()+"/settings/"+this.getId()},getSettings:function(){return this["settings"]},getSetting:function(key){return(this.getSettings()?this.getSettings()[key]:null)},setSetting:function(key,val){if(!this.getSettings()){this["settings"]={}}this["settings"][key]=val},listAttachments:Gitana.Methods.listAttachments(),attachment:function(attachmentId){return this.listAttachments().select(attachmentId)},attach:Gitana.Methods.attach(),unattach:Gitana.Methods.unattach()})})(window);(function(window){var Gitana=window.Gitana;Gitana.SettingsMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(application,object){this.objectType=function(){return"Gitana.SettingsMap"};this.getApplication=function(){return application};this.getApplicationId=function(){return application.getId()};this.base(application.getPlatform(),object)},clone:function(){return this.getFactory().settingsMap(this.getApplication(),this)},buildObject:function(json){return this.getFactory().settings(this.getApplication(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Email=Gitana.AbstractPlatformObject.extend({constructor:function(application,object){this.base(application.getPlatform(),object);this.objectType=function(){return"Gitana.Email"};this.getApplication=function(){return application};this.getApplicationId=function(){return application.getId()}},getType:function(){return Gitana.TypedIDConstants.TYPE_EMAIL},getUri:function(){return"/applications/"+this.getApplicationId()+"/emails/"+this.getId()},send:function(emailProvider){return this.then(function(){this.subchain(emailProvider).send(this)})}})})(window);(function(window){var Gitana=window.Gitana;Gitana.EmailMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(application,object){this.objectType=function(){return"Gitana.EmailMap"};this.getApplication=function(){return application};this.getApplicationId=function(){return application.getId()};this.base(application.getPlatform(),object)},clone:function(){return this.getFactory().emailMap(this.getApplication(),this)},buildObject:function(json){return this.getFactory().email(this.getApplication(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.EmailProvider=Gitana.AbstractPlatformObject.extend({constructor:function(application,object){this.base(application.getPlatform(),object);this.objectType=function(){return"Gitana.EmailProvider"};this.getApplication=function(){return application};this.getApplicationId=function(){return application.getId()}},getType:function(){return Gitana.TypedIDConstants.TYPE_EMAIL_PROVIDER},getUri:function(){return"/applications/"+this.getApplicationId()+"/emailproviders/"+this.getId()},send:function(email){var emailId=null;if(Gitana.isString(email)){emailId=email}else{emailId=email.getId()}return this.chainPostEmpty(this,this.getUri()+"/send?email="+emailId)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.EmailProviderMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(application,object){this.objectType=function(){return"Gitana.EmailProviderMap"};this.getApplication=function(){return application};this.getApplicationId=function(){return application.getId()};this.base(application.getPlatform(),object)},clone:function(){return this.getFactory().emailProviderMap(this.getApplication(),this)},buildObject:function(json){return this.getFactory().emailProvider(this.getApplication(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Registration=Gitana.AbstractPlatformObject.extend({constructor:function(application,object){this.base(application.getPlatform(),object);this.objectType=function(){return"Gitana.Registration"};this.getApplication=function(){return application};this.getApplicationId=function(){return application.getId()}},getType:function(){return Gitana.TypedIDConstants.TYPE_REGISTRATION},getUri:function(){return"/applications/"+this.getApplicationId()+"/registrations/"+this.getId()},sendConfirmationEmail:function(){var self=this;var uriFunction=function(){return self.getUri()+"/send/confirmation"};return this.chainPostEmpty(this,uriFunction,{},this)},sendWelcomeEmail:function(){var self=this;var uriFunction=function(){return self.getUri()+"/send/welcome"};return this.chainPostEmpty(this,uriFunction,{},this)},confirm:function(newUserPassword,paymentMethodObject){if(!paymentMethodObject){paymentMethodObject={}}var params={password:newUserPassword};var self=this;var uriFunction=function(){return self.getUri()+"/confirm"};return this.chainPostEmpty(this,uriFunction,params,paymentMethodObject)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.RegistrationMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(application,object){this.objectType=function(){return"Gitana.RegistrationMap"};this.getApplication=function(){return application};this.getApplicationId=function(){return application.getId()};this.base(application.getPlatform(),object)},clone:function(){return this.getFactory().registrationMap(this.getApplication(),this)},buildObject:function(json){return this.getFactory().registration(this.getApplication(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Warehouse=Gitana.AbstractPlatformDataStore.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.Warehouse"};this.base(platform,object)},getUri:function(){return"/warehouses/"+this.getId()},getType:function(){return Gitana.TypedIDConstants.TYPE_WAREHOUSE},clone:function(){return this.getFactory().warehouse(this.getPlatform(),this)},listInteractions:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().interactionMap(this);return this.chainGet(chainable,this.getUri()+"/interactions",params)},readInteraction:function(interactionId){var chainable=this.getFactory().interaction(this);return this.chainGet(chainable,this.getUri()+"/interactions/"+interactionId)},queryInteractions:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/interactions/query"};var chainable=this.getFactory().interactionMap(this);return this.chainPost(chainable,uriFunction,params,query)},listInteractionApplications:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().interactionApplicationMap(this);return this.chainGet(chainable,this.getUri()+"/applications",params)},readInteractionApplication:function(interactionApplicationId){var chainable=this.getFactory().interactionApplication(this);return this.chainGet(chainable,this.getUri()+"/applications/"+interactionApplicationId)},queryInteractionApplications:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/applications/query"};var chainable=this.getFactory().interactionApplicationMap(this);return this.chainPost(chainable,uriFunction,params,query)},listInteractionSessions:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().interactionSessionMap(this);return this.chainGet(chainable,this.getUri()+"/sessions",params)},readInteractionSession:function(interactionSessionId){var chainable=this.getFactory().interactionSession(this);return this.chainGet(chainable,this.getUri()+"/sessions/"+interactionSessionId)},queryInteractionSessions:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/sessions/query"};var chainable=this.getFactory().interactionSessionMap(this);return this.chainPost(chainable,uriFunction,params,query)},listInteractionPages:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().interactionPageMap(this);return this.chainGet(chainable,this.getUri()+"/pages",params)},readInteractionPage:function(interactionPageId){var chainable=this.getFactory().interactionPage(this);return this.chainGet(chainable,this.getUri()+"/pages/"+interactionPageId)},queryInteractionPages:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/pages/query"};var chainable=this.getFactory().interactionPageMap(this);return this.chainPost(chainable,uriFunction,params,query)},listInteractionNodes:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().interactionNodeMap(this);return this.chainGet(chainable,this.getUri()+"/nodes",params)},readInteractionNode:function(interactionNodeId){var chainable=this.getFactory().interactionNode(this);return this.chainGet(chainable,this.getUri()+"/nodes/"+interactionNodeId)},queryInteractionNodes:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/nodes/query"};var chainable=this.getFactory().interactionNodeMap(this);return this.chainPost(chainable,uriFunction,params,query)},listInteractionUsers:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().interactionUserMap(this);return this.chainGet(chainable,this.getUri()+"/users",params)},readInteractionUser:function(interactionUserId){var chainable=this.getFactory().interactionUser(this);return this.chainGet(chainable,this.getUri()+"/users/"+interactionUserId)},queryInteractionUsers:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/users/query"};var chainable=this.getFactory().interactionUserMap(this);return this.chainPost(chainable,uriFunction,params,query)},listInteractionReports:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().interactionReportMap(this);return this.chainGet(chainable,this.getUri()+"/reports",params)},readInteractionReport:function(interactionReportId){var chainable=this.getFactory().interactionReport(this);return this.chainGet(chainable,this.getUri()+"/reports/"+interactionReportId)},queryInteractionReports:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/reports/query"};var chainable=this.getFactory().interactionReportMap(this);return this.chainPost(chainable,uriFunction,params,query)},loadInfo:function(callback){var self=this;var uriFunction=function(){return self.getUri()+"/info"};return this.chainGetResponse(this,uriFunction,{}).then(function(response){callback(response)})}})})(window);(function(window){var Gitana=window.Gitana;Gitana.WarehouseMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.WarehouseMap"};this.base(platform,object)},clone:function(){return this.getFactory().warehouseMap(this.getPlatform(),this)},buildObject:function(json){return this.getFactory().warehouse(this.getPlatform(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AbstractWarehouseObject=Gitana.AbstractPlatformObject.extend({constructor:function(warehouse,object){this.base(warehouse.getPlatform(),object);this.getWarehouse=function(){return warehouse};this.getWarehouseId=function(){return warehouse.getId()}}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AbstractWarehouseObjectMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(warehouse,object){this.getWarehouse=function(){return warehouse};this.getWarehouseId=function(){return warehouse.getId()};this.base(warehouse.getPlatform(),object)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AbstractReportableWarehouseObject=Gitana.AbstractWarehouseObject.extend({constructor:function(warehouse,object){this.base(warehouse,object);this.interactionObjectTypeId=null},listReports:function(pagination){return this.queryReports({},pagination)},readReport:function(interactionReportKey){return this.queryReports({key:interactionReportKey}).keepOne()},queryReports:function(query,pagination){if(!query){query={}}query.objectTypeId=this.interactionObjectTypeId;query.objectId=this.getId();return this.subchain(this.getWarehouse()).queryInteractionReports(query,pagination)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Interaction=Gitana.AbstractWarehouseObject.extend({constructor:function(warehouse,object){this.base(warehouse,object);this.objectType=function(){return"Gitana.Interaction"}},getType:function(){return Gitana.TypedIDConstants.TYPE_INTERACTION},getUri:function(){return"/warehouses/"+this.getWarehouseId()+"/interactions/"+this.getId()},getInteractionApplicationId:function(){return this.get("interactionApplicationId")},getInteractionSessionId:function(){return this.get("interactionSessionId")},getInteractionPageId:function(){return this.get("interactionPageId")},getInteractionUserId:function(){return this.get("interactionUserId")},getInteractionNodeId:function(){return this.get("interactionNodeId")},getSourceUserAgent:function(){return this["source"]["user-agent"]},getSourceHost:function(){return this["source"]["host"]},getSourceIP:function(){return this["source"]["ip"]},getEventType:function(){return this["event"]["type"]},getEventX:function(){return this["event"]["x"]},getEventY:function(){return this["event"]["y"]},getEventOffsetX:function(){return this["event"]["offsetX"]},getEventOffsetY:function(){return this["event"]["offsetY"]},getApplicationHost:function(){return this["application"]["host"]},getApplicationUrl:function(){return this["application"]["url"]},getApplicationUri:function(){return this["application"]["uri"]},getElementId:function(){return this["element"]["id"]},getElementType:function(){return this["element"]["type"]},getElementPath:function(){return this["element"]["path"]},getNodeRepositoryId:function(){return this["node"]["repositoryId"]},getNodeBranchId:function(){return this["node"]["branchId"]},getNodeId:function(){return this["node"]["id"]},getTimestampStart:function(){return this["timestamp"]["start"]},getTimestampEnd:function(){return this["timestamp"]["end"]},getTimestampMs:function(){return this["timestamp"]["ms"]},getPrincipalDomainId:function(){return this["principal"]["domainId"]},getPrincipalId:function(){return this["principal"]["id"]}})})(window);(function(window){var Gitana=window.Gitana;Gitana.InteractionMap=Gitana.AbstractWarehouseObjectMap.extend({constructor:function(warehouse,object){this.objectType=function(){return"Gitana.InteractionMap"};this.base(warehouse,object)},clone:function(){return this.getFactory().interactionMap(this.getWarehouse(),this)},buildObject:function(json){return this.getFactory().interaction(this.getWarehouse(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.InteractionApplication=Gitana.AbstractReportableWarehouseObject.extend({constructor:function(warehouse,object){this.base(warehouse,object);this.objectType=function(){return"Gitana.InteractionApplication"};this.interactionObjectTypeId="application"},getType:function(){return Gitana.TypedIDConstants.TYPE_INTERACTION_APPLICATION},getUri:function(){return"/warehouses/"+this.getWarehouseId()+"/applications/"+this.getId()},getTimestampStart:function(){return this.get("timestamp")["start"]},getTimestampEnd:function(){return this.get("timestamp")["end"]},listInteractions:function(pagination){return this.queryInteractions(null,pagination)},queryInteractions:function(query,pagination){if(!query){query={}}query.interactionApplicationId=this.getId();return this.subchain(this.getWarehouse()).queryInteractions(query,pagination)},listSessions:function(pagination){return this.querySessions(null,pagination)},querySessions:function(query,pagination){if(!query){query={}}query.interactionApplicationId=this.getId();return this.subchain(this.getWarehouse()).queryInteractionSessions(query,pagination)},listPages:function(pagination){return this.queryPages(null,pagination)},queryPages:function(query,pagination){if(!query){query={}}query.interactionApplicationId=this.getId();return this.subchain(this.getWarehouse()).queryInteractionPages(query,pagination)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.InteractionApplicationMap=Gitana.AbstractWarehouseObjectMap.extend({constructor:function(warehouse,object){this.objectType=function(){return"Gitana.InteractionApplicationMap"};this.base(warehouse,object)},clone:function(){return this.getFactory().interactionApplicationMap(this.getWarehouse(),this)},buildObject:function(json){return this.getFactory().interactionApplication(this.getWarehouse(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.InteractionSession=Gitana.AbstractReportableWarehouseObject.extend({constructor:function(warehouse,object){this.base(warehouse,object);this.objectType=function(){return"Gitana.InteractionSession"};this.interactionObjectTypeId="session"},getType:function(){return Gitana.TypedIDConstants.TYPE_INTERACTION_SESSION},getUri:function(){return"/warehouses/"+this.getWarehouseId()+"/sessions/"+this.getId()},getInteractionApplicationId:function(){return this.get("interactionApplicationId")},getTimestampStart:function(){return this.get("timestamp")["start"]},getTimestampEnd:function(){return this.get("timestamp")["end"]},listInteractions:function(pagination){return this.queryInteractions(null,pagination)},queryInteractions:function(query,pagination){if(!query){query={}}query.interactionSessionId=this.getId();return this.subchain(this.getWarehouse()).queryInteractions(query,pagination)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.InteractionSessionMap=Gitana.AbstractWarehouseObjectMap.extend({constructor:function(warehouse,object){this.objectType=function(){return"Gitana.InteractionSessionMap"};this.base(warehouse,object)},clone:function(){return this.getFactory().interactionSessionMap(this.getWarehouse(),this)},buildObject:function(json){return this.getFactory().interactionSession(this.getWarehouse(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.InteractionPage=Gitana.AbstractReportableWarehouseObject.extend({constructor:function(warehouse,object){this.base(warehouse,object);this.objectType=function(){return"Gitana.InteractionPage"};this.interactionObjectTypeId="page"},getType:function(){return Gitana.TypedIDConstants.TYPE_INTERACTION_PAGE},getUri:function(){return"/warehouses/"+this.getWarehouseId()+"/pages/"+this.getId()},getInteractionApplicationId:function(){return this.get("interactionApplicationId")},getPageUri:function(){return this.get("uri")},listAttachments:Gitana.Methods.listAttachments(),attachment:function(attachmentId){return this.listAttachments().select(attachmentId)},attach:Gitana.Methods.attach(),unattach:Gitana.Methods.unattach(),listInteractions:function(pagination){return this.queryInteractions(null,pagination)},queryInteractions:function(query,pagination){if(!query){query={}}query.interactionPageId=this.getId();return this.subchain(this.getWarehouse()).queryInteractions(query,pagination)},capture:function(){var self=this;var uriFunction=function(){return self.getUri()+"/capture"};return this.chainPostEmpty(this,uriFunction)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.InteractionPageMap=Gitana.AbstractWarehouseObjectMap.extend({constructor:function(warehouse,object){this.objectType=function(){return"Gitana.InteractionPageMap"};this.base(warehouse,object)},clone:function(){return this.getFactory().interactionPageMap(this.getWarehouse(),this)},buildObject:function(json){return this.getFactory().interactionPage(this.getWarehouse(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.InteractionNode=Gitana.AbstractReportableWarehouseObject.extend({constructor:function(warehouse,object){this.base(warehouse,object);this.objectType=function(){return"Gitana.InteractionNode"};this.interactionObjectTypeId="node"},getType:function(){return Gitana.TypedIDConstants.TYPE_INTERACTION_NODE},getUri:function(){return"/warehouses/"+this.getWarehouseId()+"/nodes/"+this.getId()},getRepositoryId:function(){return this.get("repositoryId")},getBranchId:function(){return this.get("branchId")},getNodeId:function(){return this.get("nodeId")},listAttachments:Gitana.Methods.listAttachments(),attachment:function(attachmentId){return this.listAttachments().select(attachmentId)},attach:Gitana.Methods.attach(),unattach:Gitana.Methods.unattach(),listInteractions:function(pagination){return this.queryInteractions(null,pagination)},queryInteractions:function(query,pagination){if(!query){query={}}query.interactionNodeId=this.getId();return this.subchain(this.getWarehouse()).queryInteractions(query,pagination)},capture:function(){var self=this;var uriFunction=function(){return self.getUri()+"/capture"};return this.chainPostEmpty(this,uriFunction)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.InteractionNodeMap=Gitana.AbstractWarehouseObjectMap.extend({constructor:function(warehouse,object){this.objectType=function(){return"Gitana.InteractionNodeMap"};this.base(warehouse,object)},clone:function(){return this.getFactory().interactionNodeMap(this.getWarehouse(),this)},buildObject:function(json){return this.getFactory().interactionNode(this.getWarehouse(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.InteractionUser=Gitana.AbstractReportableWarehouseObject.extend({constructor:function(warehouse,object){this.base(warehouse,object);this.objectType=function(){return"Gitana.InteractionUser"};this.interactionObjectTypeId="user"},getType:function(){return Gitana.TypedIDConstants.TYPE_INTERACTION_SESSION},getUri:function(){return"/warehouses/"+this.getWarehouseId()+"/users/"+this.getId()},getKey:function(){return this.get("key")},listInteractions:function(pagination){return this.queryInteractions(null,pagination)},queryInteractions:function(query,pagination){if(!query){query={}}query.interactionUserId=this.getId();return this.subchain(this.getWarehouse()).queryInteractions(query,pagination)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.InteractionUserMap=Gitana.AbstractWarehouseObjectMap.extend({constructor:function(warehouse,object){this.objectType=function(){return"Gitana.InteractionUserMap"};this.base(warehouse,object)},clone:function(){return this.getFactory().interactionUserMap(this.getWarehouse(),this)},buildObject:function(json){return this.getFactory().interactionUser(this.getWarehouse(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.InteractionReport=Gitana.AbstractWarehouseObject.extend({constructor:function(warehouse,object){this.base(warehouse,object);this.objectType=function(){return"Gitana.InteractionReport"}},getType:function(){return Gitana.TypedIDConstants.TYPE_INTERACTION_REPORT},getUri:function(){return"/warehouses/"+this.getWarehouseId()+"/reports/"+this.getId()},getObjectTypeId:function(){return this.get("objectTypeId")},getObjectId:function(){return this.get("objectId")},getKey:function(){return this.get("key")},listEntries:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().interactionReportEntryMap(this);return this.chainGet(chainable,this.getUri()+"/entries",params)},readEntry:function(interactionReportEntryId){var chainable=this.getFactory().interactionReportEntry(this);return this.chainGet(chainable,this.getUri()+"/entries/"+interactionReportEntryId)},queryEntries:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/entries/query"};var chainable=this.getFactory().interactionReportEntryMap(this);return this.chainPost(chainable,uriFunction,params,query)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.InteractionReportMap=Gitana.AbstractWarehouseObjectMap.extend({constructor:function(warehouse,object){this.objectType=function(){return"Gitana.InteractionReportMap"};this.base(warehouse,object)},clone:function(){return this.getFactory().interactionReportMap(this.getWarehouse(),this)},buildObject:function(json){return this.getFactory().interactionReport(this.getWarehouse(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.InteractionReportEntry=Gitana.AbstractWarehouseObject.extend({constructor:function(warehouse,object){this.base(warehouse,object);this.objectType=function(){return"Gitana.InteractionReportEntry"}},getType:function(){return Gitana.TypedIDConstants.TYPE_INTERACTION_REPORT_ENTRY},getUri:function(){return"/warehouses/"+this.getWarehouseId()+"/reports/"+this.getReportId()+"/entries/"+this.getId()},getReportId:function(){return this.get("reportId")},getKey:function(){return this.get("key")},getApplicationId:function(){return this.get("applicationId")},getApplicationTitle:function(){return this.get("applicationTitle")},getApplicationDescription:function(){return this.get("applicationDescription")},getSessionId:function(){return this.get("sessionId")},getSessionTitle:function(){return this.get("sessionTitle")},getSessionDescription:function(){return this.get("sessionDescription")},getPageId:function(){return this.get("pageId")},getPageUri:function(){return this.get("pageUri")},getPageTitle:function(){return this.get("pageTitle")},getPageDescription:function(){return this.get("pageDescription")},getNodeId:function(){return this.get("nodeId")},getNodeTargetRepositoryId:function(){return this.get("nodeTargetRepositoryId")},getNodeTargetBranchId:function(){return this.get("nodeTargetBranchId")},getNodeTargetId:function(){return this.get("nodeTargetId")},getNodeTitle:function(){return this.get("nodeTitle")},getNodeDescription:function(){return this.get("nodeDescription")},getUserId:function(){return this.get("userId")},getUserTitle:function(){return this.get("userTitle")},getUserDescription:function(){return this.get("userDescription")},getUserFirstName:function(){return this.get("userFirstName")},getUserLastName:function(){return this.get("userLastName")},getUserEmail:function(){return this.get("userEmail")},getUserName:function(){return this.get("userName")}})})(window);(function(window){var Gitana=window.Gitana;Gitana.InteractionReportEntryMap=Gitana.AbstractWarehouseObjectMap.extend({constructor:function(warehouse,object){this.objectType=function(){return"Gitana.InteractionReportEntryMap"};this.base(warehouse,object)},clone:function(){return this.getFactory().interactionReportEntryMap(this.getWarehouse(),this)},buildObject:function(json){return this.getFactory().interactionReportEntry(this.getWarehouse(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Directory=Gitana.AbstractPlatformDataStore.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.Directory"};this.base(platform,object)},getUri:function(){return"/directories/"+this.getId()},getType:function(){return Gitana.TypedIDConstants.TYPE_DIRECTORY},clone:function(){return this.getFactory().directory(this.getPlatform(),this)},readIdentity:function(identityId){var self=this;var uriFunction=function(){return self.getUri()+"/identities/"+identityId};var chainable=this.getFactory().identity(this);return this.chainGet(chainable,uriFunction)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.DirectoryMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.DirectoryMap"};this.base(platform,object)},clone:function(){return this.getFactory().directoryMap(this.getPlatform(),this)},buildObject:function(json){return this.getFactory().directory(this.getPlatform(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Identity=Gitana.AbstractPlatformObject.extend({constructor:function(directory,object){this.base(directory.getPlatform(),object);this.objectType=function(){return"Gitana.Identity"};this.getDirectory=function(){return directory};this.getDirectoryId=function(){return directory.getId()}},getType:function(){return Gitana.TypedIDConstants.TYPE_IDENTITY},getUri:function(){return"/directories/"+this.getDirectoryId()+"/identities/"+this.getId()},clone:function(){return this.getFactory().identity(this.getDirectory(),this)},changePassword:function(password,verifyPassword){var object={password:password,verifyPassword:verifyPassword};return this.chainPostEmpty(this,this.getUri()+"/changepassword",{},object)},findUsers:function(pagination){var self=this;var uriFunction=function(){return self.getUri()+"/users"};var domain=new Gitana.Domain(this.getPlatform());var chainable=this.getFactory().domainPrincipalMap(domain);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainGet(chainable,uriFunction,params)},findUserForTenant:function(tenantId){var self=this;var uriFunction=function(){return self.getUri()+"/user"};var chainable=this.getFactory().domainPrincipal(this);var params={};params.tenantId=tenantId;return this.chainGet(chainable,uriFunction,params)},findTenants:function(registrarId,pagination){var self=this;var registrarId=null;var pagination=null;if(arguments.length==0){}else{if(arguments.length==1){var arg1=arguments[0];if(Gitana.isString(arg1)){registrarId=arguments[0]}else{pagination=arguments[1]}}else{registrarId=arguments[0];pagination=arguments[1]}}var uriFunction=function(){return self.getUri()+"/tenants"};var chainable=this.getFactory().tenantMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}if(registrarId){params.registrarId=registrarId}return this.chainGet(chainable,uriFunction,params)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.IdentityMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(directory,object){this.objectType=function(){return"Gitana.IdentityMap"};this.getDirectory=function(){return directory};this.getDirectoryId=function(){return directory.getId()};this.base(directory.getPlatform(),object)},clone:function(){return this.getFactory().identityMap(this.getDirectory(),this)},buildObject:function(json){return this.getFactory().identity(this.getDirectory(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Domain=Gitana.AbstractPlatformDataStore.extend({constructor:function(platform,object){this.base(platform,object);this.objectType=function(){return"Gitana.Domain"}},getUri:function(){return"/domains/"+this.getId()},getType:function(){return Gitana.TypedIDConstants.TYPE_DOMAIN},clone:function(){return this.getFactory().domain(this.getPlatform(),this)},listPrincipals:function(pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/principals"};var chainable=this.getFactory().domainPrincipalMap(this);return this.chainGet(chainable,uriFunction,params)},readPrincipal:function(principalId){var self=this;var uriFunction=function(){return self.getUri()+"/principals/"+principalId};var chainable=this.getFactory().domainPrincipal(this);return this.chainGet(chainable,uriFunction)},createPrincipal:function(object){var self=this;if(!object){object={}}if(!object.name){alert("missing name");return}if(!object.type){alert("missing type");return}var uriFunction=function(){return self.getUri()+"/principals"};var chainable=this.getFactory().domainPrincipal(this,object);return this.chainCreate(chainable,object,uriFunction)},queryPrincipals:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/principals/query"};var chainable=this.getFactory().domainPrincipalMap(this);return this.chainPost(chainable,uriFunction,params,query)},listGroups:function(pagination){var query={type:"GROUP"};return this.queryPrincipals(query,pagination)},createGroup:function(object){if(!object){object={}}object.type="GROUP";return this.createPrincipal(object)},queryGroups:function(query,pagination){if(!query){query={}}query.type="GROUP";return this.queryPrincipals(query,pagination)},listUsers:function(pagination){var query={type:"USER"};return this.queryPrincipals(query,pagination)},createUser:function(object){if(!object){object={}}object.type="USER";return this.createPrincipal(object)},queryUsers:function(query,pagination){if(!query){query={}}query.type="USER";return this.queryPrincipals(query,pagination)},addMember:function(group,principal){var self=this;var groupId=this.extractPrincipalIdentifiers(group,this.getId())["principal"];var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var uriFunction=function(){return self.getUri()+"/principals/"+groupId+"/members/add?id="+principalDomainQualifiedId};return this.chainPostEmpty(this,uriFunction)},removeMember:function(group,principal){var self=this;var groupId=this.extractPrincipalIdentifiers(group,this.getId())["principal"];var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var uriFunction=function(){return self.getUri()+"/principals/"+groupId+"/members/remove?id="+principalDomainQualifiedId};return this.chainPostEmpty(this,uriFunction)},listMembers:function(group,filter,pagination,indirect){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}if(filter){params.filter=filter}if(indirect){params.indirect=true}var groupId=this.extractPrincipalIdentifiers(group,this.getId())["principal"];var uriFunction=function(){return self.getUri()+"/principals/"+groupId+"/members"};var chainable=this.getFactory().domainPrincipalMap(this);return this.chainGet(chainable,uriFunction,params)},checkPrincipalPermissions:function(checks,callback){var self=this;var object={checks:checks};var uriFunction=function(){return self.getUri()+"/principals/permissions/check"};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})}})})(window);(function(window){var Gitana=window.Gitana;Gitana.DomainMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.DomainMap"};this.base(platform,object)},clone:function(){return this.getFactory().domainMap(this.getPlatform(),this)},buildObject:function(json){return this.getFactory().domain(this.getPlatform(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.DomainPrincipal=Gitana.AbstractPlatformObject.extend({constructor:function(domain,object){this.base(domain.getPlatform(),object);this.objectType=function(){return"Gitana.DomainPrincipal"};this.getDomain=function(){return domain};this.getDomainId=function(){return domain.getId()}},getUri:function(){return"/domains/"+this.getDomainId()+"/principals/"+this.getId()},clone:function(){return this.getFactory().domainPrincipal(this.getDomain(),this)},beforeChainRun:function(){this.getFactory().extendPrincipal(this)},getName:function(){return this.get("name")},getType:function(){return this.get("type")},getDomainQualifiedName:function(){return this.getDomainId()+"/"+this.getName()},getDomainQualifiedId:function(){return this.getDomainId()+"/"+this.getId()},listMemberships:function(indirect,pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){var uri=this.getUri()+"/memberships";if(indirect){uri=uri+"?indirect=true"}return uri};var chainable=this.getFactory().domainPrincipalMap(this.getDomain());return this.chainGet(chainable,uriFunction,params)},listAttachments:Gitana.Methods.listAttachments(),attachment:function(attachmentId){return this.listAttachments().select(attachmentId)},attach:Gitana.Methods.attach(),unattach:Gitana.Methods.unattach()})})(window);(function(window){var Gitana=window.Gitana;Gitana.PrincipalMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(domain,object){this.objectType=function(){return"Gitana.PrincipalMap"};this.getDomain=function(){return domain};this.base(domain.getPlatform(),object)},clone:function(){return this.getFactory().domainPrincipalMap(this.getDomain(),this)},buildObject:function(json){return this.getFactory().domainPrincipal(this.getDomain(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.DomainGroup={TYPE:"GROUP",readGroupNode:function(branch,createIfNotFound){var result=this.subchain(this.getFactory().node(branch,"n:group"));result.subchain(branch).readGroupNode(this.getId(),createIfNotFound).then(function(){result.handleResponse(this)});return result},listMembers:function(filter,indirect,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}if(filter){params.filter=filter}if(indirect){params.indirect=true}var uriFunction=function(){return self.getUri()+"/members"};var chainable=this.getFactory().domainPrincipalMap(this.getDomain());return this.chainGet(chainable,uriFunction,params)},listUsers:function(){var inherit=false;var pagination=null;var args=Gitana.makeArray(arguments);var a1=args.shift();if(Gitana.isBoolean(a1)){inherit=a1;pagination=args.shift()}else{pagination=args.shift()}return this.listMembers("user",inherit,pagination)},listGroups:function(){var inherit=false;var pagination=null;var args=Gitana.makeArray(arguments);var a1=args.shift();if(Gitana.isBoolean(a1)){inherit=a1;pagination=args.shift()}else{pagination=a1}return this.listMembers("group",inherit,pagination)},addMember:function(principal){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);return this.chainPostEmpty(this,this.getUri()+"/members/add?id="+principalDomainQualifiedId)},removeMember:function(principal){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);return this.chainPostEmpty(this,this.getUri()+"/members/remove?id="+principalDomainQualifiedId)}}})(window);(function(window){var Gitana=window.Gitana;Gitana.DomainUser={TYPE:"USER",readPersonNode:function(branch,createIfNotFound){var result=this.subchain(this.getFactory().node(branch,"n:person"));result.subchain(branch).readPersonNode(this.getDomainQualifiedId(),createIfNotFound).then(function(){result.handleResponse(this)});return result},hasIdentity:function(){return(this.getDirectoryId()&&this.getIdentityId())},getDirectoryId:function(){return this.get("directoryId")},getIdentityId:function(){return this.get("identityId")},readDirectory:function(){var directory=this.getFactory().directory(this.getPlatform(),{_doc:this.getDirectoryId()});var result=this.subchain(directory);result.subchain(this.getPlatform()).readDirectory(this.getDirectoryId()).then(function(){result.handleResponse(this)});return result},readIdentity:function(){var self=this;var directory=this.getFactory().directory(this.getPlatform(),{_doc:this.getDirectoryId()});var identity=this.getFactory().identity(directory,{_doc:this.getIdentityId()});var result=this.subchain(identity);result.subchain(this.getPlatform()).readDirectory(self.getDirectoryId()).then(function(){directory.handleResponse(this);this.readIdentity(self.getIdentityId()).then(function(){identity.handleResponse(this)})});return result},getFirstName:function(){return this.get("firstName")},setFirstName:function(firstName){this.set("firstName",firstName)},getLastName:function(){return this.get("lastName")},setLastName:function(lastName){this.set("lastName",lastName)},getCompanyName:function(){return this.get("companyName")},setCompanyName:function(companyName){this.set("companyName",companyName)},getEmail:function(){return this.get("email")},setEmail:function(email){this.set("email",email)},getJobTitle:function(){return this.get("jobTitle")},setJobTitle:function(jobTitle){this.set("jobTitle",jobTitle)},getAddress:function(){return this.get("address")},setAddress:function(address){this.set("address",address)},getCity:function(){return this.get("city")},setCity:function(city){this.set("city",city)},getState:function(){return this.get("state")},setState:function(state){this.set("state",state)},getZipcode:function(){return this.get("zipcode")},setZipcode:function(zipcode){this.set("zipcode",zipcode)},getPhoneNumber:function(){return this.get("phoneNumber")},setPhoneNumber:function(phoneNumber){this.set("phoneNumber",phoneNumber)}}})(window);(function(window){var Gitana=window.Gitana;Gitana.Registrar=Gitana.AbstractPlatformDataStore.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.Registrar"};this.base(platform,object)},getUri:function(){return"/registrars/"+this.getId()},getType:function(){return Gitana.TypedIDConstants.TYPE_REGISTRAR},clone:function(){return this.getFactory().registrar(this.getPlatform(),this)},listTenants:function(pagination){var self=this;var uriFunction=function(){return self.getUri()+"/tenants"};var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().tenantMap(this);return this.chainGet(chainable,uriFunction,params)},queryTenants:function(query,pagination){var self=this;var uriFunction=function(){return self.getUri()+"/tenants/query"};var chainable=this.getFactory().tenantMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,uriFunction,params,query)},readTenant:function(tenantId){var self=this;var uriFunction=function(){return self.getUri()+"/tenants/"+tenantId};var chainable=this.getFactory().tenant(this);return this.chainGet(chainable,uriFunction)},lookupTenantForPrincipal:function(principal){var self=this;var uriFunction=function(){return self.getUri()+"/tenants/lookup?id="+principal.getDomainQualifiedId()};var chainable=this.getFactory().tenant(this);return this.chainGet(chainable,uriFunction)},createTenant:function(principal,planKey,paymentMethod){var self=this;var uriFunction=function(){return self.getUri()+"/tenants"};var object={};object.principalId=principal.getId();object.domainId=principal.getDomainId();object.planKey=planKey;if(paymentMethod){object.paymentMethod=paymentMethod}var chainable=this.getFactory().tenant(this);return this.chainCreate(chainable,object,uriFunction)},checkTenantPermissions:function(checks,callback){var self=this;var uriFunction=function(){return self.getUri()+"/tenants/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},listPlans:function(pagination){var self=this;var uriFunction=function(){return self.getUri()+"/plans"};var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().planMap(this);return this.chainGet(chainable,uriFunction,params)},queryPlans:function(query,pagination){var self=this;var uriFunction=function(){return self.getUri()+"/plans/query"};var chainable=this.getFactory().planMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,uriFunction,params,query)},readPlan:function(planId){var self=this;var uriFunction=function(){return self.getUri()+"/plans/"+planId};var chainable=this.getFactory().plan(this);return this.chainGet(chainable,uriFunction)},createPlan:function(object){var self=this;var uriFunction=function(){return self.getUri()+"/plans"};var chainable=this.getFactory().plan(this);return this.chainCreate(chainable,object,uriFunction)},checkPlanPermissions:function(checks,callback){var self=this;var uriFunction=function(){return self.getUri()+"/plans/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},listMeters:function(pagination){var self=this;var uriFunction=function(){return self.getUri()+"/meters"};var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().meterMap(this);return this.chainGet(chainable,uriFunction,params)},queryMeters:function(query,pagination){var self=this;var uriFunction=function(){return self.getUri()+"/meters/query"};var chainable=this.getFactory().meterMap(this);var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainPost(chainable,uriFunction,params,query)},readMeter:function(meterId){var self=this;var uriFunction=function(){return self.getUri()+"/meters/"+meterId};var chainable=this.getFactory().meter(this);return this.chainGet(chainable,uriFunction)},createMeter:function(object){var self=this;var uriFunction=function(){return self.getUri()+"/meters"};var chainable=this.getFactory().meter(this);return this.chainCreate(chainable,object,uriFunction)},checkMeterPermissions:function(checks,callback){var self=this;var uriFunction=function(){return self.getUri()+"/meters/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})}})})(window);(function(window){var Gitana=window.Gitana;Gitana.RegistrarMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.RegistrarMap"};this.base(platform,object)},clone:function(){return this.getFactory().registrarMap(this.getPlatform(),this)},buildObject:function(json){return this.getFactory().registrar(this.getPlatform(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Meter=Gitana.AbstractPlatformObject.extend({constructor:function(registrar,object){this.base(registrar.getPlatform(),object);this.objectType=function(){return"Gitana.Meter"};this.getRegistrar=function(){return registrar};this.getRegistrarId=function(){return registrar.getId()}},getType:function(){return Gitana.TypedIDConstants.TYPE_PLAN},getUri:function(){return"/registrars/"+this.getRegistrarId()+"/meters/"+this.getId()},clone:function(){return this.getFactory().plan(this.getRegistrar(),this)}});Gitana.Meter.FIELD_TENANT_ID="tenantId";Gitana.Meter.FIELD_METER_TYPE="meterType";Gitana.Meter.FIELD_METER_START="meterStart";Gitana.Meter.FIELD_METER_END="meterEnd";Gitana.Meter.FIELD_MAX_BYTE_COUNT="maxByteCount";Gitana.Meter.FIELD_RAW_BYTE_COUNT="rawByteCount";Gitana.Meter.FIELD_RAW_BYTE_COUNT_PERCENTAGE="rawByteCountPercentage";Gitana.Meter.FIELD_UNPROCESSED_BYTE_COUNT="unprocessedByteCount";Gitana.Meter.FIELD_BILLABLE_BYTE_COUNT="billableByteCount";Gitana.Meter.FIELD_BILLABLE_BYTE_COUNT_PERCENTAGE="billableByteCountPercentage";Gitana.Meter.FIELD_MAX_OBJECT_COUNT="maxObjectCount";Gitana.Meter.FIELD_RAW_OBJECT_COUNT="rawObjectCount";Gitana.Meter.FIELD_RAW_OBJECT_COUNT_PERCENTAGE="rawObjectCountPercentage";Gitana.Meter.FIELD_UNPROCESSED_OBJECT_COUNT="unprocessedObjectCount";Gitana.Meter.FIELD_BILLABLE_OBJECT_COUNT="billableObjectCount";Gitana.Meter.FIELD_BILLABLE_OBJECT_COUNT_PERCENTAGE="billableObjectCountPercentage"})(window);(function(window){var Gitana=window.Gitana;Gitana.MeterMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(registrar,object){this.objectType=function(){return"Gitana.MeterMap"};this.getRegistrar=function(){return registrar};this.getRegistrarId=function(){return registrar.getId()};this.base(registrar.getPlatform(),object)},clone:function(){return this.getFactory().planMap(this.getRegistrar(),this)},buildObject:function(json){return this.getFactory().plan(this.getRegistrar(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Plan=Gitana.AbstractPlatformObject.extend({constructor:function(registrar,object){this.base(registrar.getPlatform(),object);this.objectType=function(){return"Gitana.Plan"};this.getRegistrar=function(){return registrar};this.getRegistrarId=function(){return registrar.getId()}},getType:function(){return Gitana.TypedIDConstants.TYPE_PLAN},getUri:function(){return"/registrars/"+this.getRegistrarId()+"/plans/"+this.getId()},clone:function(){return this.getFactory().plan(this.getRegistrar(),this)},getPlanKey:function(){return this.get("planKey")}})})(window);(function(window){var Gitana=window.Gitana;Gitana.PlanMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(registrar,object){this.objectType=function(){return"Gitana.PlanMap"};this.getRegistrar=function(){return registrar};this.getRegistrarId=function(){return registrar.getId()};this.base(registrar.getPlatform(),object)},clone:function(){return this.getFactory().planMap(this.getRegistrar(),this)},buildObject:function(json){return this.getFactory().plan(this.getRegistrar(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Tenant=Gitana.AbstractPlatformObject.extend({constructor:function(registrar,object){this.base(registrar.getPlatform(),object);this.objectType=function(){return"Gitana.Tenant"};this.getRegistrar=function(){return registrar};this.getRegistrarId=function(){return registrar.getId()}},getType:function(){return Gitana.TypedIDConstants.TYPE_TENANT},getUri:function(){return"/registrars/"+this.getRegistrarId()+"/tenants/"+this.getId()},clone:function(){return this.getFactory().tenant(this.getRegistrar(),this)},getDnsSlug:function(){return this.get("dnsSlug")},getPlanKey:function(){return this.get("planKey")},getPrincipalId:function(){return this.get("principalId")},getPrincipalDomainId:function(){return this.get("domainId")},getPlatformId:function(){return this.get("platformId")},readTenantPlan:function(){var self=this;var uriFunction=function(){return self.getPlatform().getUri()+"/registrars/"+self.getRegistrarId()+"/plans/"+self.getPlanKey()};var chainable=this.getFactory().plan(this.getRegistrar());return this.chainGet(chainable,uriFunction)},readTenantPrincipal:function(){var self=this;var uriFunction=function(){return self.getPlatform().getUri()+"/domains/"+self.getPrincipalDomainId()+"/principals/"+self.getPrincipalId()};var domain=this.getFactory().domain(this.getPlatform(),{_doc:this.getPrincipalDomainId()});var chainable=this.getFactory().domainPrincipal(domain);return this.chainGet(chainable,uriFunction)},listAttachments:Gitana.Methods.listAttachments(),attachment:function(attachmentId){return this.listAttachments().select(attachmentId)},attach:Gitana.Methods.attach(),unattach:Gitana.Methods.unattach(),listAllocatedObjects:function(callback,objectType,pagination){var self=this;var uriFunction=function(){return self.getUri()+"/objects"};var params={};if(pagination){Gitana.copyInto(params,pagination)}if(objectType){params.type=objectType}return this.chainGetResponse(this,uriFunction,params).then(function(response){callback.call(this,response.rows)})},listAllocatedRepositoryObjects:function(callback,pagination){return this.listAllocatedObjects(callback,"repository",pagination)},listAllocatedDomainObjects:function(callback,pagination){return this.listAllocatedObjects(callback,"domain",pagination)},listAllocatedVaultObjects:function(callback,pagination){return this.listAllocatedObjects(callback,"vault",pagination)},listAllocatedClientObjects:function(callback,pagination){return this.listAllocatedObjects(callback,"client",pagination)},listAllocatedRegistrarObjects:function(callback,pagination){return this.listAllocatedObjects(callback,"registrar",pagination)},listAllocatedStackObjects:function(callback,pagination){return this.listAllocatedObjects(callback,"stack",pagination)},listAllocatedDirectoryObjects:function(callback,pagination){return this.listAllocatedObjects(callback,"directory",pagination)},listAllocatedApplicationObjects:function(callback,pagination){return this.listAllocatedObjects(callback,"application",pagination)},readDefaultAllocatedClientObject:function(callback){var self=this;var uriFunction=function(){return self.getUri()+"/defaultclient"};return this.chainGetResponse(this,uriFunction,{}).then(function(response){var client={};Gitana.copyInto(client,response);Gitana.stampInto(client,Gitana.ClientMethods);client.get=function(key){return this[key]};callback.call(this,client)})},listAutoClientMappingObjects:function(callback,pagination){var self=this;var uriFunction=function(){return self.getUri()+"/autoclientmappings"};var params={};if(pagination){Gitana.copyInto(params,pagination)}return this.chainGetResponse(this,uriFunction,params).then(function(response){callback.call(this,response.rows)})}})})(window);(function(window){var Gitana=window.Gitana;Gitana.TenantMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(registrar,object){this.objectType=function(){return"Gitana.TenantMap"};this.getRegistrar=function(){return registrar};this.getRegistrarId=function(){return registrar.getId()};this.base(registrar.getPlatform(),object)},clone:function(){return this.getFactory().tenantMap(this.getRegistrar(),this)},buildObject:function(json){return this.getFactory().tenant(this.getRegistrar(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Repository=Gitana.AbstractPlatformDataStore.extend({constructor:function(platform,object){this.base(platform,object);this.objectType=function(){return"Gitana.Repository"}},getType:function(){return Gitana.TypedIDConstants.TYPE_REPOSITORY},getUri:function(){return"/repositories/"+this.getId()},clone:function(){return this.getFactory().repository(this.getPlatform(),this)},listBranches:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return"/repositories/"+this.getId()+"/branches"};var chainable=this.getFactory().branchMap(this);return this.chainGet(chainable,uriFunction,params)},readBranch:function(branchId){var uriFunction=function(){return"/repositories/"+this.getId()+"/branches/"+branchId};var chainable=this.getFactory().branch(this);return this.chainGet(chainable,uriFunction)},createBranch:function(changesetId,object){var uriFunction=function(){return"/repositories/"+this.getId()+"/branches"};var createParams={changeset:changesetId};var chainable=this.getFactory().branch(this);return this.chainCreate(chainable,object,uriFunction,createParams)},queryBranches:function(query,pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return"/repositories/"+this.getId()+"/branches/query"};var chainable=this.getFactory().branchMap(this);return this.chainPost(chainable,uriFunction,params,query)},checkBranchPermissions:function(checks,callback){var uriFunction=function(){return"/repositories/"+this.getId()+"/branches/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},listChangesets:function(){var uriFunction=function(){return"/repositories/"+this.getId()+"/changesets"};var chainable=this.getFactory().changesetMap(this);return this.chainGet(chainable,uriFunction)},readChangeset:function(changesetId){var uriFunction=function(){return"/repositories/"+this.getId()+"/changesets/"+changesetId};var chainable=this.getFactory().changeset(this);return this.chainGet(chainable,uriFunction)},listChangesetParents:function(changesetId){var uriFunction=function(){return"/repositories/"+this.getId()+"/changesets/"+changesetId+"/parents"};var chainable=this.getFactory().changesetMap(this);return this.chainGet(chainable,uriFunction)},listChangesetChildren:function(changesetId){var uriFunction=function(){return"/repositories/"+this.getId()+"/changesets/"+changesetId+"/children"};var chainable=this.getFactory().changesetMap(this);return this.chainGet(chainable,uriFunction)},queryChangesets:function(query,pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return"/repositories/"+this.getId()+"/changesets/query"};var chainable=this.getFactory().changesetMap(this);return this.chainPost(chainable,uriFunction,params,query)},getMaxSize:function(){return this.get("maxSize")},getSize:function(){return this.get("size")},getObjectCount:function(){return this.get("objectcount")}})})(window);(function(window){var Gitana=window.Gitana;Gitana.RepositoryMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.RepositoryMap"};this.base(platform,object)},clone:function(){return this.getFactory().repositoryMap(this.getPlatform(),this)},buildObject:function(json){return this.getFactory().repository(this.getPlatform(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AbstractNode=Gitana.AbstractPlatformObject.extend({constructor:function(branch,object){this.__qname=(function(){var _qname=null;return function(qname){if(qname){_qname=qname}return _qname}})();this.__type=(function(){var _type=null;return function(type){if(type){_type=type}return _type}})();this.__features=(function(){var _features={};return function(features){if(features){_features=features}return _features}})();this.__stats=(function(){var _stats={};return function(stats){if(stats){_stats=stats}return _stats}})();this.__is_association=(function(){var _is_association=false;return function(is_association){if(!Gitana.isUndefined(is_association)){_is_association=is_association}return _is_association}})();this.base(branch.getPlatform(),object);this.getRepository=function(){return branch.getRepository()};this.getRepositoryId=function(){return branch.getRepository().getId()};this.getBranch=function(){return branch};this.getBranchId=function(){return branch.getId()}},getUri:function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()},clone:function(){return this.getFactory().node(this.getBranch(),this)},handleSystemProperties:function(response){this.base(response);if(this["_qname"]){var _qname=this["_qname"];delete this["_qname"];this.__qname(_qname)}if(this["_type"]){var _type=this["_type"];delete this["_type"];this.__type(_type)}if(this["_features"]){var _features=this["_features"];delete this["_features"];this.__features(_features)}if(this["stats"]&&typeof(this["stats"])=="object"){var stats=this["stats"];delete this["stats"];this.__stats(stats)}if(!Gitana.isUndefined(this["_is_association"])){var _is_association=this["_is_association"];delete this["_is_association"];this.__is_association(_is_association)}},chainCopyState:function(otherObject){this.base(otherObject);if(otherObject.__qname){this.__qname(otherObject.__qname())}if(otherObject.__type){this.__type(otherObject.__type())}if(otherObject.__features){this.__features(otherObject.__features())}if(otherObject.__stats){this.__stats(otherObject.__stats())}if(otherObject.__is_association){this.__is_association(otherObject.__is_association())}},stats:function(){return this.__stats()},getFeatureIds:function(callback){var self=this;var f=function(){var featureIds=[];for(var featureId in this.__features()){featureIds[featureIds.length]=featureId}return featureIds};if(callback){return this.then(function(){callback.call(this,f.call(self))})}return f.call(self)},getFeature:function(featureId,callback){var self=this;if(callback){return this.then(function(){callback.call(this,self.__features()[featureId])})}return self.__features()[featureId]},removeFeature:function(featureId){var self=this;var uriFunction=function(){return self.getUri()+"/features/"+featureId};return this.chainDelete(this,uriFunction).reload().then(function(){self.loadFrom(this)})},addFeature:function(featureId,featureConfig){var self=this;var uriFunction=function(){return self.getUri()+"/features/"+featureId};if(!featureConfig){featureConfig={}}return this.chainPostEmpty(this,uriFunction,{},featureConfig).reload().then(function(){self.loadFrom(this)})},hasFeature:function(featureId,callback){if(callback){return this.then(function(){var hasFeature=!Gitana.isEmpty(this.__features()[featureId]);callback.call(this,hasFeature)})}return !Gitana.isEmpty(this.__features()[featureId])},isAssociation:function(){return this.__is_association()},isContainer:function(){return this.hasFeature("f:container")},touch:function(){var self=this;var uriFunction=function(){return self.getUri()+"/touch"};return this.chainPost(null,uriFunction)},getTypeQName:function(){return this.__type()},changeTypeQName:function(typeQName){var self=this;var uriFunction=function(){return self.getUri()+"/change_type?type="+typeQName};return this.chainPostEmpty(this,uriFunction).reload().then(function(){self.loadFrom(this)})},getQName:function(){return this.__qname()},changeQName:function(qname){var self=this;var uriFunction=function(){return self.getUri()+"/change_qname?qname="+qname};return this.chainPostEmpty(this,uriFunction).reload().then(function(){self.loadFrom(this)})},listAttachments:Gitana.Methods.listAttachments(Gitana.NodeAttachmentMap),attachment:function(attachmentId){return this.listAttachments().select(attachmentId)},attachmentDownloadUri:function(attachmentId){return this.getDriver().baseURL+this.getUri()+"/attachments/"+attachmentId},attach:function(attachmentId,contentType,data,filename){var paramsFunction=function(params){if(filename){params.filename=filename}};var delegate=Gitana.Methods.attach.call(this,Gitana.NodeAttachment,paramsFunction);return delegate.call(this,attachmentId,contentType,data)},unattach:Gitana.Methods.unattach()})})(window);(function(window){var Gitana=window.Gitana;Gitana.NodeAttachment=Gitana.BinaryAttachment.extend({constructor:function(persistable,attachment){this.base(persistable,attachment)},getFilename:function(){return this.filename}})})(window);(function(window){var Gitana=window.Gitana;Gitana.NodeAttachmentMap=Gitana.BinaryAttachmentMap.extend({constructor:function(persistable,object){this.base(persistable,object);this.objectType=function(){return"Gitana.NodeAttachmentMap"}},clone:function(){return new Gitana.NodeAttachmentMap(this.__persistable(),this)},buildObject:function(attachment){return new Gitana.NodeAttachment(this.__persistable(),attachment)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Association=Gitana.AbstractNode.extend({constructor:function(branch,object){this.base(branch,object);this.objectType=function(){return"Gitana.Association"}},getType:function(){return Gitana.TypedIDConstants.TYPE_ASSOCIATION},isAssociation:function(){return true},getDirectionality:function(){return this.get("directionality")},getSourceNodeId:function(){return this.get("source")},getSourceNodeChangesetId:function(){return this.get("source_changeset")},getSourceNodeType:function(){return this.get("source_type")},getTargetNodeId:function(){return this.get("target")},getTargetNodeChangesetId:function(){return this.get("target_changeset")},getTargetNodeType:function(){return this.get("target_type")},readSourceNode:function(){var self=this;var result=this.subchain(this.getFactory().node(this.getBranch()));return result.then(function(){var chain=this;this.subchain(self.getBranch()).readNode(self.getSourceNodeId()).then(function(){chain.loadFrom(this)})})},readTargetNode:function(){var self=this;var result=this.subchain(this.getFactory().node(this.getBranch()));return result.then(function(){var chain=this;this.subchain(self.getBranch()).readNode(self.getTargetNodeId()).then(function(){chain.loadFrom(this)})})},readOtherNode:function(node){var self=this;var nodeId=null;if(Gitana.isString(node)){nodeId=node}else{nodeId=node.getId()}var result=this.subchain(this.getFactory().node(this.getBranch()));result.then(function(){var chain=this;this.subchain(self).then(function(){if(nodeId==this.getSourceNodeId()){this.readTargetNode().then(function(){chain.loadFrom(this)})}else{if(nodeId==this.getTargetNodeId()){this.readSourceNode().then(function(){chain.loadFrom(this)})}else{var err=new Gitana.Error();err.name="No node on association";err.message="The node: "+nodeId+" was not found on this association";this.error(err);return false}}})});return result},getDirection:function(node){var nodeId=null;if(Gitana.isString(node)){nodeId=node}else{nodeId=node.getId()}var direction=null;if(this.getDirectionality()=="UNDIRECTED"){direction="MUTUAL"}else{if(this.getSourceNodeId()==nodeId){direction="OUTGOING"}else{if(this.getTargetNodeId()==nodeId){direction="INCOMING"}}}return direction},getOtherNodeId:function(node){var nodeId=null;if(Gitana.isString(node)){nodeId=node}else{nodeId=node.getId()}var otherNodeId=null;if(this.getSourceNodeId()==nodeId){otherNodeId=this.getTargetNodeId()}else{if(this.getTargetNodeId()==nodeId){otherNodeId=this.getSourceNodeId()}}return otherNodeId}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Branch=Gitana.AbstractPlatformObject.extend({constructor:function(repository,object){this.base(repository.getPlatform(),object);this.objectType=function(){return"Gitana.Branch"};this.getRepository=function(){return repository};this.getRepositoryId=function(){return repository.getId()}},getType:function(){return Gitana.TypedIDConstants.TYPE_BRANCH},getUri:function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getId()},clone:function(){return this.getFactory().branch(this.getRepository(),this)},del:function(){return this},isMaster:function(){return(this.getBranchType().toLowerCase()=="master")},getBranchType:function(){return this.get("type")},getTip:function(){return this.get("tip")},listMounts:function(pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/nodes"};var chainable=this.getFactory().nodeMap(this);return this.chainGet(chainable,uriFunction,params)},readNode:function(nodeId){var self=this;var uriFunction=function(){return self.getUri()+"/nodes/"+nodeId};var chainable=this.getFactory().node(this);return this.chainGet(chainable,uriFunction)},rootNode:function(){return this.readNode("root")},createNode:function(object){var self=this;var uriFunction=function(){return self.getUri()+"/nodes"};var chainable=this.getFactory().node(this);return this.chainCreate(chainable,object,uriFunction)},searchNodes:function(search,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}if(Gitana.isString(search)){search={search:search}}var uriFunction=function(){return self.getUri()+"/nodes/search"};var chainable=this.getFactory().nodeMap(this);return this.chainPost(chainable,uriFunction,params,search)},queryNodes:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/nodes/query"};var chainable=this.getFactory().nodeMap(this);return this.chainPost(chainable,uriFunction,params,query)},queryOne:function(query,errHandler){return this.queryNodes(query).keepOne(function(err){if(errHandler){errHandler(err);return false}})},checkNodePermissions:function(checks,callback){var self=this;var uriFunction=function(){return self.getUri()+"/nodes/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},readPersonNode:function(user,createIfNotFound){var self=this;var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(user);var uriFunction=function(){var uri=self.getUri()+"/person/acquire?id="+principalDomainQualifiedId;if(createIfNotFound){uri+="&createIfNotFound="+createIfNotFound}return uri};var chainable=this.getFactory().node(this,"n:person");return this.chainGet(chainable,uriFunction)},readGroupNode:function(group,createIfNotFound){var self=this;var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(group);var uriFunction=function(){var uri=self.getUri()+"/group/acquire?id="+principalDomainQualifiedId;if(createIfNotFound){uri+="&createIfNotFound="+createIfNotFound}return uri};var chainable=this.getFactory().node(this,"n:group");return this.chainGet(chainable,uriFunction)},listDefinitions:function(filter,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){var uri=self.getUri()+"/definitions";if(filter){uri=uri+"?filter="+filter}return uri};var chainable=this.getFactory().nodeMap(this);return this.chainGet(chainable,uriFunction,params)},readDefinition:function(qname){var self=this;var uriFunction=function(){return self.getUri()+"/definitions/"+qname};var chainable=this.getFactory().definition(this);return this.chainGet(chainable,uriFunction)},generateQName:function(object,callback){var self=this;return this.then(function(){var chain=this;var uri=self.getUri()+"/qnames/generate";self.getDriver().gitanaPost(uri,null,object,function(response){var qname=response._qname;callback.call(chain,qname);chain.next()});return false})},associate:function(sourceNode,targetNode,object){var sourceNodeId=null;if(Gitana.isString(sourceNode)){sourceNodeId=sourceNode}else{sourceNodeId=sourceNode.getId()}var targetNodeId=null;if(Gitana.isString(targetNode)){targetNodeId=targetNode}else{targetNodeId=targetNode.getId()}var result=this.subchain(this);result.subchain(this).then(function(){this.readNode(sourceNodeId).associate(targetNodeId,object)});return result},traverse:function(node,config){var nodeId=null;if(Gitana.isString(node)){nodeId=node}else{nodeId=node.getId()}return this.readNode(nodeId).traverse(config)},createContainer:function(object){if(!object){object={}}if(!object._system){object._system={}}if(!object._system["_features"]){object._system["_features"]={}}object._system["_features"]["f:container"]={active:"true"};return this.createNode(object)},find:function(config,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/nodes/find"};var chainable=this.getFactory().nodeMap(this);return this.chainPost(chainable,uriFunction,params,config)},findNodes:function(config,pagination){return this.find(config,pagination)},listItems:function(listKey,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/lists/"+listKey+"/items"};var chainable=this.getFactory().nodeMap(this);return this.chainGet(chainable,uriFunction,pagination)},queryItems:function(listKey,query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/lists/"+listKey+"/items/query"};var chainable=this.getFactory().nodeMap(this);return this.chainPost(chainable,uriFunction,params,query)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Changeset=Gitana.AbstractPlatformObject.extend({constructor:function(repository,object){this.base(repository.getPlatform(),object);this.objectType=function(){return"Gitana.Changeset"};this.getRepository=function(){return repository};this.getRepositoryId=function(){return repository.getId()};this.getPlatform=function(){return repository.getPlatform()}},getType:function(){return Gitana.TypedIDConstants.TYPE_CHANGESET},getUri:function(){return"/repositories/"+this.getRepositoryId()+"/changesets/"+this.getId()},clone:function(){return this.getFactory().changeset(this.getRepository(),this)},listNodes:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/changesets/"+this.getId()+"/nodes"};var chainable=this.getFactory().nodeMap(this);return this.chainGet(chainable,uriFunction,params)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Node=Gitana.AbstractNode.extend({constructor:function(branch,object){this.base(branch,object);this.objectType=function(){return"Gitana.Node"}},getType:function(){return Gitana.TypedIDConstants.TYPE_NODE},listChildren:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/children"};var chainable=this.getFactory().nodeMap(this.getBranch());return this.chainGet(chainable,uriFunction,params)},listRelatives:function(config,pagination){var type=null;var direction=null;if(config){type=config.type;if(config.direction){direction=config.direction.toUpperCase()}}var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){var url="/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/relatives";if(type){url=url+"?type="+type}if(direction){if(type){url=url+"&direction="+direction}else{url=url+"?direction="+direction}}return url};var chainable=this.getFactory().nodeMap(this.getBranch());return this.chainGet(chainable,uriFunction,params)},associations:function(config,pagination){var type=null;var direction=null;if(config){type=config.type;if(config.direction){direction=config.direction.toUpperCase()}}var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){var url="/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/associations?a=1";if(type){url=url+"&type="+type}if(direction){url=url+"&direction="+direction}return url};var chainable=this.getFactory().nodeMap(this.getBranch());return this.chainGet(chainable,uriFunction,params)},incomingAssociations:function(type,pagination){var config={direction:"INCOMING"};if(type){config.type=type}return this.associations(config,pagination)},outgoingAssociations:function(type,pagination){var config={direction:"OUTGOING"};if(type){config.type=type}return this.associations(config,pagination)},associate:function(targetNodeId,object,undirected){if(!Gitana.isString(targetNodeId)){targetNodeId=targetNodeId.getId()}if(object){if(Gitana.isString(object)){object={_type:object}}}var uriFunction=function(){var url="/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/associate?node="+targetNodeId;if(undirected){url+="&directionality=UNDIRECTED"}return url};return this.chainPostEmpty(this,uriFunction,null,object)},associateOf:function(sourceNode,object,undirected){var self=this;var result=this.subchain(this);result.subchain(sourceNode).then(function(){this.associate(self,object,undirected)});return result},unassociate:function(targetNodeId,type,undirected){if(!Gitana.isString(targetNodeId)){targetNodeId=targetNodeId.getId()}var uriFunction=function(){var url="/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/unassociate?node="+targetNodeId;if(type){url=url+"&type="+type}if(undirected){url+="&directionality=UNDIRECTED"}return url};return this.chainPostEmpty(this,uriFunction)},traverse:function(config){var payload={traverse:config};var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/traverse"};var chainable=this.getFactory().traversalResults(this.getBranch());var params={};return this.chainPost(chainable,uriFunction,params,payload)},mount:function(mountKey){var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/mount/"+mountKey};return this.chainPostEmpty(this,uriFunction,null,object)},unmount:function(){var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/unmount"};return this.chainPostEmpty(this,uriFunction,null,object)},lock:function(){var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/lock"};return this.chainPostEmpty(this,uriFunction)},unlock:function(){var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/unlock"};return this.chainPostEmpty(this,uriFunction)},checkLocked:function(callback){return this.subchain(this).then(function(){var chain=this;var uri="/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/lock";this.getDriver().gitanaGet(uri,null,function(response){callback.call(chain,response.locked);chain.next()});return false})},loadACL:function(callback){var self=this;var uriFunction=function(){return self.getUri()+"/acl/list"};return this.chainGetResponse(this,uriFunction).then(function(response){callback.call(this,response)})},listAuthorities:function(principal){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/acl?id="+principalDomainQualifiedId};return this.chainGetResponseRows(this,uriFunction)},checkAuthority:function(principal,authorityId,callback){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/authorities/"+authorityId+"/check?id="+principalDomainQualifiedId};return this.chainPostResponse(this,uriFunction).then(function(response){callback.call(this,response.check)})},grantAuthority:function(principal,authorityId){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/authorities/"+authorityId+"/grant?id="+principalDomainQualifiedId};return this.chainPostEmpty(this,uriFunction)},revokeAuthority:function(principal,authorityId){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/authorities/"+authorityId+"/revoke?id="+principalDomainQualifiedId};return this.chainPostEmpty(this,uriFunction)},revokeAllAuthorities:function(principal){return this.revokeAuthority(principal,"all")},loadAuthorityGrants:function(principalIds,callback){if(!principalIds){principalIds=[]}var json={principals:principalIds};return this.chainPostResponse(this,"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/authorities",{},json).then(function(response){callback.call(this,response)})},checkPermission:function(principal,permissionId,callback){var principalDomainQualifiedId=this.extractPrincipalDomainQualifiedId(principal);var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/permissions/"+permissionId+"/check?id="+principalDomainQualifiedId};return this.chainPostResponse(this,uriFunction).then(function(response){callback.call(this,response.check)})},listAuditRecords:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/auditrecords"};var chainable=this.getFactory().auditRecordMap(this.getRepository());return this.chainGet(chainable,uriFunction,params)},createTranslation:function(edition,locale,object){var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/i18n?edition="+edition+"&locale="+locale};var chainable=this.getFactory().node(this.getBranch());return this.chainCreateEx(chainable,object,uriFunction,uriFunction)},editions:function(callback){var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/i18n/editions"};return this.chainGetResponse(this,uriFunction).then(function(response){callback.call(this,response.editions)})},locales:function(edition,callback){var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/i18n/locales?edition="+edition};return this.chainGetResponse(this,uriFunction).then(function(response){callback.call(this,response.locales)})},readTranslation:function(){var edition;var locale;var args=Gitana.makeArray(arguments);if(args.length==1){locale=args.shift()}else{if(args.length>1){edition=args.shift();locale=args.shift()}}var uriFunction=function(){var uri="/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/i18n?locale="+locale;if(edition){uri+="&edition="+edition}return uri};var chainable=this.getFactory().node(this.getBranch());return this.chainGet(chainable,uriFunction)},createChild:function(object){var self=this;var branch=new Gitana.Branch(this.getRepository());var chainable=this.getFactory().node(branch);return this.subchain(chainable).then(function(){var chain=this;this.subchain(self).then(function(){branch.loadFrom(this.getBranch());this.subchain(branch).createNode(object).childOf(self).then(function(){chain.loadFrom(this)})})})},childOf:function(sourceNode){return this.associateOf(sourceNode,"a:child")},find:function(config,pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return"/repositories/"+this.getRepositoryId()+"/branches/"+this.getBranchId()+"/nodes/"+this.getId()+"/find"};var chainable=this.getFactory().nodeMap(this.getBranch());return this.chainPost(chainable,uriFunction,params,config)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.BranchMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(repository,object){this.objectType=function(){return"Gitana.BranchMap"};this.getRepository=function(){return repository};this.getRepositoryId=function(){return repository.getId()};this.base(repository.getPlatform(),object)},clone:function(){return this.getFactory().branchMap(this.getRepository(),this)},buildObject:function(json){return this.getFactory().branch(this.getRepository(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.ChangesetMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(repository,object){this.objectType=function(){return"Gitana.ChangesetMap"};this.getRepository=function(){return repository};this.getRepositoryId=function(){return repository.getId()};this.base(repository.getPlatform(),object)},clone:function(){return this.getFactory().changesetMap(this.getRepository(),this)},buildObject:function(json){return this.getFactory().changeset(this.getRepository(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.NodeMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(branch,object){this.objectType=function(){return"Gitana.NodeMap"};this.getRepository=function(){return branch.getRepository()};this.getRepositoryId=function(){return branch.getRepository().getId()};this.getBranch=function(){return branch};this.getBranchId=function(){return branch.getId()};this.base(branch.getPlatform(),object)},clone:function(){return this.getFactory().nodeMap(this.getBranch(),this)},buildObject:function(json){return this.getFactory().node(this.getBranch(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.TraversalResults=Gitana.AbstractPersistable.extend({constructor:function(branch,object){if(!this._nodes){this._nodes={}}if(!this._associations){this._associations={}}if(!this._config){this._config={}}this.base(branch.getDriver(),object);this.getRepository=function(){return branch.getRepository()};this.getRepositoryId=function(){return branch.getRepository().getId()};this.getBranch=function(){return branch};this.getBranchId=function(){return branch.getId()}},clear:function(){Gitana.deleteProperties(this._nodes,true);Gitana.deleteProperties(this._associations,true);Gitana.deleteProperties(this._config,true)},handleResponse:function(response){this.clear();this.handleSystemProperties(response);Gitana.copyInto(this._nodes,response.nodes);Gitana.copyInto(this._associations,response.associations);Gitana.copyInto(this._config,response.config);this._config.center=response.node},center:function(){var chainable=this.getFactory().node(this.getBranch());var result=this.subchain(chainable);result.subchain(this.getBranch()).readNode(this._config.center).then(function(){result.handleResponse(this)});return result},nodeCount:function(callback){return this.then(function(){callback.call(this,Gitana.getNumberOfKeys(this._nodes))})},associationCount:function(callback){return this.then(function(){callback.call(this,Gitana.getNumberOfKeys(this._associations))})},nodes:function(){var self=this;var result=this.subchain(this.getFactory().nodeMap(this.getBranch()));return result.then(function(){var chain=this;var response={rows:self._nodes};chain.handleResponse(response)})},node:function(id){var self=this;var result=this.subchain(this.getFactory().node(this.getBranch()));return result.then(function(){var nodeObject=self._nodes[id];if(!nodeObject){return self.missingNodeError(id)}this.handleResponse(nodeObject)});return result},associations:function(){var self=this;var result=this.subchain(this.getFactory().nodeMap(this.getBranch()));return result.then(function(){var chain=this;var response={rows:self._associations};chain.handleResponse(response)})},association:function(id){var self=this;var result=this.subchain(this.getFactory().association(this.getBranch()));return result.then(function(){var associationObject=self._associations[id];if(!associationObject){return self.missingNodeError(id)}this.handleResponse(associationObject)});return result}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Definition=Gitana.Node.extend({constructor:function(branch,object){this.base(branch,object);this.objectType=function(){return"Gitana.Definition"}},clone:function(){return this.getFactory().definition(this.getBranch(),this)},listFormAssociations:function(){var self=this;var uriFunction=function(){return self.getUri()+"/forms"};var chainable=this.getFactory().nodeMap(this.getBranch());return this.chainGet(chainable,uriFunction)},readForm:function(formKey){var self=this;var uriFunction=function(){return self.getUri()+"/forms/"+formKey};var chainable=this.getFactory().form(this.getBranch());return this.chainGet(chainable,uriFunction)},createForm:function(formKey,formObject){var self=this;if(!formObject){formObject={}}formObject._type="n:form";var chainable=this.getFactory().form(this.getBranch());var result=this.subchain(chainable);result.subchain(this.getBranch()).createNode(formObject).then(function(){var formNode=this;this.subchain(self).then(function(){var associationObject={_type:"a:has_form","form-key":formKey};this.associate(formNode,associationObject).then(function(){var association=this;var uri="/repositories/"+formNode.getRepositoryId()+"/branches/"+formNode.getBranchId()+"/nodes/"+formNode.getId();this.getDriver().gitanaGet(uri,null,function(response){result.handleResponse(response);association.next()});return false})})});return result},removeFormAssociation:function(formKey){return this.link(this).then(function(){var association=null;this.listFormAssociations().each(function(){if(this.getFormKey()==formKey){association=this}}).then(function(){if(association){this.subchain(association).del()}})})}});Gitana.ObjectFactory.register("d:type",Gitana.Definition);Gitana.ObjectFactory.register("d:feature",Gitana.Definition);Gitana.ObjectFactory.register("d:association",Gitana.Definition)})(window);(function(window){var Gitana=window.Gitana;Gitana.Form=Gitana.Node.extend({constructor:function(branch,object){this.base(branch,object);this.objectType=function(){return"Gitana.Form"}},clone:function(){return this.getFactory().form(this.getBranch(),this)},getEngineId:function(){return this.get("engineId")},setEngineId:function(engineId){this.set("engineId",engineId)}});Gitana.ObjectFactory.register("n:form",Gitana.Form)})(window);(function(window){var Gitana=window.Gitana;Gitana.HasFormAssociation=Gitana.Association.extend({constructor:function(branch,object){this.base(branch,object);this.objectType=function(){return"Gitana.HasFormAssociation"}},clone:function(){return new Gitana.HasFormAssociation(this.getBranch(),this)},getFormKey:function(){return this.get("form-key")},setFormKey:function(formKey){this.set("form-key",formKey)}});Gitana.ObjectFactory.register("a:has_form",Gitana.HasFormAssociation)})(window);(function(window){var Gitana=window.Gitana;Gitana.HasTranslationAssociation=Gitana.Association.extend({constructor:function(branch,object){this.base(branch,object);this.objectType=function(){return"Gitana.HasTranslationAssociation"}},clone:function(){return new Gitana.HasTranslationAssociation(this.getBranch(),this)},getLocale:function(){return this.get("locale")},setLocale:function(locale){this.set("locale",locale)},getEdition:function(){return this.get("edition")},setEdition:function(edition){this.set("edition",edition)}});Gitana.ObjectFactory.register("a:has_translation",Gitana.HasTranslationAssociation)})(window);(function(window){var Gitana=window.Gitana;Gitana.Person=Gitana.Node.extend({constructor:function(branch,object){this.base(branch,object);this.objectType=function(){return"Gitana.Person"}},clone:function(){return new Gitana.Person(this.getBranch(),this)},getPrincipalName:function(){return this.get("principal-name")},getPrincipalType:function(){return this.get("principal-type")},getPrincipalId:function(){return this.get("principal-id")},getPrincipalDomainId:function(){return this.get("principal-domain")},readPrincipal:function(){return this.subchain(this.getPlatform()).readDomain(this.getPrincipalDomainId()).readPrincipal(this.getPrincipalId())},getFirstName:function(){return this.get("firstName")},setFirstName:function(firstName){this.set("firstName",firstName)},getLastName:function(){return this.get("lastName")},setLastName:function(lastName){this.set("lastName",lastName)},getCompanyName:function(){return this.get("companyName")},setCompanyName:function(companyName){this.set("companyName",companyName)},getEmail:function(){return this.get("email")},setEmail:function(email){this.set("email",email)},getJobTitle:function(){return this.get("jobTitle")},setJobTitle:function(jobTitle){this.set("jobTitle",jobTitle)},getAddress:function(){return this.get("address")},setAddress:function(address){this.set("address",address)},getCity:function(){return this.get("city")},setCity:function(city){this.set("city",city)},getState:function(){return this.get("state")},setState:function(state){this.set("state",state)},getZipcode:function(){return this.get("zipcode")},setZipcode:function(zipcode){this.set("zipcode",zipcode)},getPhoneNumber:function(){return this.get("phoneNumber")},setPhoneNumber:function(phoneNumber){this.set("phoneNumber",phoneNumber)}});Gitana.ObjectFactory.register("n:person",Gitana.Person)})(window);(function(window){var Gitana=window.Gitana;Gitana.Vault=Gitana.AbstractPlatformDataStore.extend({constructor:function(platform,object){this.base(platform,object);this.objectType=function(){return"Gitana.Vault"}},getType:function(){return Gitana.TypedIDConstants.TYPE_VAULT},getUri:function(){return"/vaults/"+this.getId()},clone:function(){return this.getFactory().vault(this.getPlatform(),this)},listArchives:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().archiveMap(this);return this.chainGet(chainable,this.getUri()+"/archives",params)},readArchive:function(archiveId){var chainable=this.getFactory().archive(this);return this.chainGet(chainable,this.getUri()+"/archives/"+archiveId)},lookupArchive:function(groupId,artifactId,versionId){var chainable=this.getFactory().archive(this);return this.chainGet(chainable,this.getUri()+"/archives/lookup?group="+groupId+"&artifact="+artifactId+"&version="+versionId)},queryArchives:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/archives/query"};var chainable=this.getFactory().archiveMap(this);return this.chainPost(chainable,uriFunction,params,query)},checkArchivePermissions:function(checks,callback){var self=this;var uriFunction=function(){return self.getUri()+"/archives/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})}})})(window);(function(window){var Gitana=window.Gitana;Gitana.VaultMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.VaultMap"};this.base(platform,object)},clone:function(){return this.getFactory().vaultMap(this.getPlatform(),this)},buildObject:function(json){return this.getFactory().vault(this.getPlatform(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Archive=Gitana.AbstractPlatformObject.extend({constructor:function(vault,object){this.base(vault.getPlatform(),object);this.objectType=function(){return"Gitana.Archive"};this.getVault=function(){return vault};this.getVaultId=function(){return vault.getId()}},getType:function(){return Gitana.TypedIDConstants.TYPE_ARCHIVE},getUri:function(){return"/vaults/"+this.getVaultId()+"/archives/"+this.getId()},getDownloadUri:function(){return this.getProxiedUri()+"/download"},listAttachments:Gitana.Methods.listAttachments(),attachment:function(attachmentId){return this.listAttachments().select(attachmentId)},attach:Gitana.Methods.attach(),unattach:Gitana.Methods.unattach()})})(window);(function(window){var Gitana=window.Gitana;Gitana.ArchiveMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(vault,object){this.objectType=function(){return"Gitana.ArchiveMap"};this.getVault=function(){return vault};this.getVaultId=function(){return vault.getId()};this.base(vault.getPlatform(),object)},clone:function(){return this.getFactory().archiveMap(this.getVault(),this)},buildObject:function(json){return this.getFactory().archive(this.getVault(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.WebHost=Gitana.AbstractPlatformDataStore.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.WebHost"};this.base(platform,object)},getUri:function(){return"/webhosts/"+this.getId()},getType:function(){return Gitana.TypedIDConstants.TYPE_WEB_HOST},clone:function(){return this.getFactory().webHost(this.getPlatform(),this)},getUrlPatterns:function(){return this.get("urlPatterns")},createAutoClientMapping:function(uri,applicationId,clientKey,object){if(!object){object={}}if(!Gitana.isString(applicationId)){applicationId=applicationId.getId()}if(!Gitana.isString(clientKey)){clientKey=clientKey.getKey()}object.uri=uri;object.applicationId=applicationId;object.clientKey=clientKey;var chainable=this.getFactory().autoClientMapping(this);return this.chainCreate(chainable,object,this.getUri()+"/autoclientmappings")},listAutoClientMappings:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().autoClientMappingMap(this);return this.chainGet(chainable,this.getUri()+"/autoclientmappings",params)},readAutoClientMapping:function(autoClientMappingId){var self=this;var uriFunction=function(){return self.getUri()+"/autoclientmappings/"+autoClientMappingId};var chainable=this.getFactory().autoClientMapping(this);return this.chainGet(chainable,uriFunction)},queryAutoClientMappings:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/autoclientmappings/query"};var chainable=this.getFactory().autoClientMappingMap(this);return this.chainPost(chainable,uriFunction,params,query)},checkAutoClientMappingsPermissions:function(checks,callback){var self=this;var uriFunction=function(){return self.getUri()+"/autoclientmappings/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})},listDeployedApplications:function(pagination){var params={};if(pagination){Gitana.copyInto(params,pagination)}var chainable=this.getFactory().deployedApplicationMap(this);return this.chainGet(chainable,this.getUri()+"/applications",params)},readDeployedApplication:function(deployedApplicationId){var chainable=this.getFactory().deployedApplication(this);return this.chainGet(chainable,this.getUri()+"/applications/"+deployedApplicationId)},queryDeployedApplications:function(query,pagination){var self=this;var params={};if(pagination){Gitana.copyInto(params,pagination)}var uriFunction=function(){return self.getUri()+"/applications/query"};var chainable=this.getFactory().deployedApplicationMap(this);return this.chainPost(chainable,uriFunction,params,query)},checkDeployedApplicationsPermissions:function(checks,callback){var self=this;var uriFunction=function(){return self.getUri()+"/applications/permissions/check"};var object={checks:checks};return this.chainPostResponse(this,uriFunction,{},object).then(function(response){callback.call(this,response.results)})}})})(window);(function(window){var Gitana=window.Gitana;Gitana.WebHostMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(platform,object){this.objectType=function(){return"Gitana.WebHostMap"};this.base(platform,object)},clone:function(){return this.getFactory().webHostMap(this.getPlatform(),this)},buildObject:function(json){return this.getFactory().webHost(this.getPlatform(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AutoClientMapping=Gitana.AbstractPlatformObject.extend({constructor:function(webhost,object){this.base(webhost.getPlatform(),object);this.objectType=function(){return"Gitana.AutoClientMapping"};this.getWebHost=function(){return webhost};this.getWebHostId=function(){return webhost.getId()}},getType:function(){return Gitana.TypedIDConstants.TYPE_AUTO_CLIENT_MAPPING},getUri:function(){return"/webhosts/"+this.getWebHostId()+"/autoclientmappings/"+this.getId()},getSourceUri:function(){return this.get("uri")},getTargetApplicationId:function(){return this.get("applicationId")},getTargetClientKey:function(){return this.get("clientKey")},getTargetTenantId:function(){return this.get("tenantId")},getAutoManage:function(){return this.get("automanage")}})})(window);(function(window){var Gitana=window.Gitana;Gitana.AutoClientMappingMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(webhost,object){this.objectType=function(){return"Gitana.AutoClientMappingMap"};this.getWebHost=function(){return webhost};this.getWebHostId=function(){return webhost.getId()};this.base(webhost.getPlatform(),object)},clone:function(){return this.getFactory().autoClientMappingMap(this.getWebHost(),this)},buildObject:function(json){return this.getFactory().autoClientMapping(this.getWebHost(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.DeployedApplication=Gitana.AbstractPlatformObject.extend({constructor:function(webhost,object){this.base(webhost.getPlatform(),object);this.objectType=function(){return"Gitana.DeployedApplication"};this.getWebHost=function(){return webhost};this.getWebHostId=function(){return webhost.getId()}},getType:function(){return Gitana.TypedIDConstants.TYPE_DEPLOYED_APPLICATION},getUri:function(){return"/webhosts/"+this.getWebHostId()+"/applications/"+this.getId()},undeploy:function(){var uriFunction=function(){return this.getUri()+"/undeploy"};return this.chainPostEmpty(this.getWebHost(),uriFunction)},redeploy:function(){var uriFunction=function(){return this.getUri()+"/redeploy"};return this.chainPostEmpty(this.getWebHost(),uriFunction)},start:function(){var uriFunction=function(){return this.getUri()+"/start"};return this.chainPostEmpty(this.getWebHost(),uriFunction)},stop:function(){var uriFunction=function(){return this.getUri()+"/stop"};return this.chainPostEmpty(this.getWebHost(),uriFunction)},restart:function(){var uriFunction=function(){return this.getUri()+"/restart"};return this.chainPostEmpty(this.getWebHost(),uriFunction)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.DeployedApplicationMap=Gitana.AbstractPlatformObjectMap.extend({constructor:function(webhost,object){this.objectType=function(){return"Gitana.DeployedApplicationMap"};this.getWebHost=function(){return webhost};this.getWebHostId=function(){return webhost.getId()};this.base(webhost.getPlatform(),object)},clone:function(){return this.getFactory().deployedApplicationMap(this.getWebHost(),this)},buildObject:function(json){return this.getFactory().deployedApplication(this.getWebHost(),json)}})})(window);(function(window){var Gitana=window.Gitana;Gitana.Context=Gitana.Chainable.extend({constructor:function(configs){this.base(new Gitana(configs.driver?configs.driver:{}));if(!this.cache){this.cache={}}this.cache.repository=null;this.cache.branch=null;this.cache.platform=null;this.getConfigs=function(){return configs};this.getRepositoryConfigs=function(){var repositoryConfigs=configs.repository;if(typeof repositoryConfigs=="string"){repositoryConfigs={repository:repositoryConfigs}}return repositoryConfigs};this.getBranchConfigs=function(){var branchConfigs=configs.branch?configs.branch:"master";if(typeof branchConfigs=="string"){if(branchConfigs=="master"){branchConfigs={type:"MASTER"}}else{branchConfigs={_doc:branchConfigs}}}return branchConfigs};this.getUserConfigs=function(){return configs.user};this.getDriverConfigs=function(){return configs.driver}},platform:function(platform){if(platform||platform===null){this.cache.platform=platform}return this.cache.platform?Chain(this.cache.platform):null},repository:function(repository){if(repository||repository===null){this.cache.repository=repository}return this.cache.repository?Chain(this.cache.repository):null},branch:function(branch){if(branch||branch===null){this.cache.branch=branch}return this.cache.branch?Chain(this.cache.branch):null},init:function(){var self=this;var loadPlatform=function(successCallback,errorCallback){if(!self.platform()){var authentication=self.getConfigs()["authentication"];self.getDriver().authenticate(authentication,function(http){if(errorCallback){errorCallback({message:"Failed to login Gitana.",reason:"INVALID_LOGIN",error:http})}}).then(function(){self.platform(this);loadRepository(successCallback,errorCallback)})}else{loadRepository(successCallback,errorCallback)}};var loadRepository=function(successCallback,errorCallback){if(!self.repository()){self.platform().trap(function(error){if(errorCallback){errorCallback({message:"Failed to get repository",error:error})}}).queryRepositories(self.getRepositoryConfigs()).count(function(count){if(errorCallback){if(count==0){errorCallback({message:"Cannot find any repository"})}if(count>1){errorCallback({message:"Found more than one repository"})}}}).keepOne().then(function(){self.repository(this);loadBranch(successCallback,errorCallback)})}else{loadBranch(successCallback,errorCallback)}};var loadBranch=function(successCallback,errorCallback){if(!self.branch()){self.repository().trap(function(error){if(errorCallback){errorCallback({message:"Failed to get branch",error:error})}}).queryBranches(self.getBranchConfigs()).count(function(count){if(errorCallback){if(count==0){errorCallback({message:"Cannot find any branch"})}if(count>1){errorCallback({message:"Found more than one branch"})}}}).keepOne().then(function(){self.branch(this);successCallback.call()})}else{successCallback.call()}};var result=Chain(this);return result.subchain().then(function(){var chain=this;loadPlatform(function(){chain.next()},function(err){var errorCallback=self.getConfigs()["error"];if(errorCallback){errorCallback.call(self,err)}});return false})}});Gitana.Context.create=function(config){var context=new Gitana.Context(config);return context.init()}})(window);(function(window){var Gitana=window.Gitana;Gitana.AppHelper=Gitana.AbstractObject.extend({constructor:function(platform,config){this.objectType=function(){return"Gitana.AppHelper"};this.base(platform.getDriver());this.getPlatform=function(){return platform};this.getPlatformId=function(){return platform.getId()};this.getApplicationId=function(){return config.application};this.cache=Gitana.MemoryCache()},init:function(callback){var self=this;Chain(self.getPlatform()).readApplication(self.getApplicationId()).then(function(){self.cache("application",this);Chain(self.getPlatform()).findStackForDataStore(Gitana.TypedIDConstants.TYPE_APPLICATION,self.getApplicationId()).then(function(){self.cache("stack",this);this.listDataStores().each(function(key){this["_doc"]=this["datastoreId"];delete this["datastoreTypeId"];self.cache("stack.datastore."+key,this)}).then(function(){callback()})})})},platform:function(){return Chain(this.getPlatform())},application:function(){return Chain(this.cache("application"))},stack:function(){return Chain(this.cache("stack"))},datastore:function(key){return Chain(this.cache("stack.datastore."+key))}})})(window);return Gitana}));